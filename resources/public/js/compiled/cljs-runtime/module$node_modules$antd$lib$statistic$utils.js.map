{
"version":3,
"file":"module$node_modules$antd$lib$statistic$utils.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,4CAAA,CAAiE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAuBzGC,QAASA,cAAa,CAACC,QAAD,CAAWC,MAAX,CAAmB,CACvC,IAAIC,aAAeF,QACbG,SAAAA,CAAc,YACpB,OAAMC,SAA6CC,CAAjCJ,MAAOK,CAAAA,KAAP,CAAaH,QAAb,CAAiCE,EAAJ,EAAIA,EAAAA,GAAlC,CAAsCE,GAAA,EAAOA,GAAIC,CAAAA,KAAJ,CAAU,CAAV,CAAa,CAAC,CAAd,CAA7C,CACXC,OAAAA,CAAeR,MAAOS,CAAAA,OAAP,CAAeP,QAAf,CAA4B,IAA5B,CAarB,KAAIQ,MAAQ,CACZ,OAbqBC,UAAUC,CAAAA,MAAVC,CAAiB,CAACC,OAAD,CAAUC,IAAV,CAAA,EAAmB,CACvD,IAAI,CAACC,IAAD,CAAOC,IAAP,CAAA,CAAeF,IACnB,IAAID,OAAQI,CAAAA,QAAR,CAAiBF,IAAjB,CAAJ,CAA4B,CAC1B,MAAMG,MAAQC,IAAKC,CAAAA,KAAL,CAAWpB,YAAX,CAA0BgB,IAA1B,CACdhB,aAAA,EAAgBkB,KAAhB,CAAwBF,IACxB,OAAOH,QAAQL,CAAAA,OAAR,CAAgB,IAAIa,MAAJ,CAAY,GAAEN,IAAF,GAAZ;AAAuB,GAAvB,CAAhB,CAA6CX,KAAA,EAE3Cc,KAAMI,CAAAA,QAAN,EAAiBC,CAAAA,QAAjB,CADKnB,KAAMoB,CAAAA,MACX,CAA+B,GAA/B,CAFF,CAHmB,CAQ5B,MAAOX,QAVgD,CAApCD,CAWlBL,MAXkBK,CAaDJ,CAAAA,OAAb,CAAqBP,QAArB,CAAkC,EAAA,EAAM,CAC7C,MAAMG,MAAQF,QAAA,CAASO,KAAT,CACdA,MAAA,EAAS,CACT,OAAOL,MAHsC,CAAxC,CAlBgC,CApBzCqB,MAAOC,CAAAA,cAAP,CAAsB9B,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CsB,MAAO,CAAA,CADoC,CAA7C,CAGAtB,QAAQ+B,CAAAA,eAAR,CAyCAA,QAAwB,CAACT,KAAD,CAAQU,MAAR,CAAgB,CACtC,CAAM,CACJ,OAAA7B,MAAA,CAAS,EADL,CAAN,CAEI6B,MAFJ,CAGMC,MAAAA,CAAyBC,CAAhB,IAAIC,IAAJ,CAASb,KAAT,CAAgBY,EAAAA,OAAhB,EACf,OAAMjB,QAAUkB,IAAKC,CAAAA,GAAL,EAEhB,OAAOnC,cAAA,CADMsB,IAAKc,CAAAA,GAALC,CAASL,KAATK,CAAkBrB,OAAlBqB,CAA2B,CAA3BA,CACN,CAAoBnC,MAApB,CAP+B,CAxCxCH,QAAQC,CAAAA,aAAR,CAAwBA,aAExB,OAAMa,UAAY,CAAC,CAAC,GAAD,CAAM,OAAN,CAAD,CAElB,CAAC,GAAD,CAAM,MAAN,CAFkB,CAIlB,CAAC,GAAD,CAAM,KAAN,CAJkB,CAMlB,CAAC,GAAD,CAAM,IAAN,CANkB;AAQlB,CAAC,GAAD,CAAM,GAAN,CARkB,CAUlB,CAAC,GAAD,CAAM,GAAN,CAVkB,CAYlB,CAAC,GAAD,CAAM,CAAN,CAZkB,CATuF;",
"sources":["node_modules/antd/lib/statistic/utils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$lib$statistic$utils\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatCountdown = formatCountdown;\nexports.formatTimeStr = formatTimeStr;\n// Countdown\nconst timeUnits = [['Y', 1000 * 60 * 60 * 24 * 365],\n// years\n['M', 1000 * 60 * 60 * 24 * 30],\n// months\n['D', 1000 * 60 * 60 * 24],\n// days\n['H', 1000 * 60 * 60],\n// hours\n['m', 1000 * 60],\n// minutes\n['s', 1000],\n// seconds\n['S', 1] // million seconds\n];\nfunction formatTimeStr(duration, format) {\n  let leftDuration = duration;\n  const escapeRegex = /\\[[^\\]]*]/g;\n  const keepList = (format.match(escapeRegex) || []).map(str => str.slice(1, -1));\n  const templateText = format.replace(escapeRegex, '[]');\n  const replacedText = timeUnits.reduce((current, _ref) => {\n    let [name, unit] = _ref;\n    if (current.includes(name)) {\n      const value = Math.floor(leftDuration / unit);\n      leftDuration -= value * unit;\n      return current.replace(new RegExp(`${name}+`, 'g'), match => {\n        const len = match.length;\n        return value.toString().padStart(len, '0');\n      });\n    }\n    return current;\n  }, templateText);\n  let index = 0;\n  return replacedText.replace(escapeRegex, () => {\n    const match = keepList[index];\n    index += 1;\n    return match;\n  });\n}\nfunction formatCountdown(value, config) {\n  const {\n    format = ''\n  } = config;\n  const target = new Date(value).getTime();\n  const current = Date.now();\n  const diff = Math.max(target - current, 0);\n  return formatTimeStr(diff, format);\n}\n};"],
"names":["shadow$provide","global","require","module","exports","formatTimeStr","duration","format","leftDuration","escapeRegex","keepList","map","match","str","slice","templateText","replace","index","timeUnits","reduce","replacedText","current","_ref","name","unit","includes","value","Math","floor","RegExp","toString","padStart","length","Object","defineProperty","formatCountdown","config","target","getTime","Date","now","max","diff"]
}
