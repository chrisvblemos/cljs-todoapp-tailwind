{
"version":3,
"file":"module$node_modules$rc_util$lib$hooks$useSyncState.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,kDAAA,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG3GC,MAAAA,CAA0BH,OAAA,CAAQ,mEAAR,CAAyDI,CAAAA,OACnFC,OAAAA,CAAyBL,OAAA,CAAQ,kEAAR,CAAwDI,CAAAA,OACrFE,OAAOC,CAAAA,cAAP,CAAsBL,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CM,MAAO,CAAA,CADoC,CAA7C,CAGAN,QAAQE,CAAAA,OAAR,CASAK,QAAqB,CAACC,YAAD,CAAe,CAAA,IAC9BC,kBAAoBC,KAAMC,CAAAA,UAAN,CAAiB,QAAS,CAACC,CAAD,CAAI,CAClD,MAAOA,EAAP,CAAW,CADuC,CAA9B,CAEnB,CAFmB,CADU,CAKhCC,YADqBC,GAAIC,eAAgBb,CAAAA,OAApBY,EAA6BL,iBAA7BK;AAAgD,CAAhDA,CACP,CAAmB,CAAnB,CALkB,CAM9BE,gBAAkBN,KAAMO,CAAAA,MAAN,CAAaT,YAAb,CAClBU,aAAAA,CAAW,GAAIC,SAAUjB,CAAAA,OAAd,EAAuB,QAAS,EAAG,CAChD,MAAOc,gBAAgBI,CAAAA,OADyB,CAAnC,CAGXC,kBAAAA,CAAW,GAAIF,SAAUjB,CAAAA,OAAd,EAAuB,QAAS,CAACoB,OAAD,CAAU,CACvDN,eAAgBI,CAAAA,OAAhB,CAA6C,UAAnB,GAAA,MAAOE,QAAP,CAAgCA,OAAA,CAAQN,eAAgBI,CAAAA,OAAxB,CAAhC,CAAmEE,OAC7FT,YAAA,EAFuD,CAA1C,CAIf,OAAO,CAACK,YAAD,CAAWG,iBAAX,CAd2B,CARpC,KAAIN,gBAAkBZ,MAAA,CAAuBL,OAAA,CAAQ,0DAAR,CAAvB,CAAtB,CACIY,MAAQT,MAAA,CAAwBH,OAAA,CAAQ,iCAAR,CAAxB,CADZ,CAEIqB,UAAYhB,MAAA,CAAuBL,OAAA,CAAQ,gDAAR,CAAvB,CAX+F;",
"sources":["node_modules/rc-util/lib/hooks/useSyncState.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rc_util$lib$hooks$useSyncState\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useSyncState;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _useEvent = _interopRequireDefault(require(\"./useEvent\"));\n/**\n * Same as React.useState but will always get latest state.\n * This is useful when React merge multiple state updates into one.\n * e.g. onTransitionEnd trigger multiple event at once will be merged state update in React.\n */\nfunction useSyncState(defaultValue) {\n  var _React$useReducer = React.useReducer(function (x) {\n      return x + 1;\n    }, 0),\n    _React$useReducer2 = (0, _slicedToArray2.default)(_React$useReducer, 2),\n    forceUpdate = _React$useReducer2[1];\n  var currentValueRef = React.useRef(defaultValue);\n  var getValue = (0, _useEvent.default)(function () {\n    return currentValueRef.current;\n  });\n  var setValue = (0, _useEvent.default)(function (updater) {\n    currentValueRef.current = typeof updater === 'function' ? updater(currentValueRef.current) : updater;\n    forceUpdate();\n  });\n  return [getValue, setValue];\n}\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireWildcard","default","_interopRequireDefault","Object","defineProperty","value","useSyncState","defaultValue","_React$useReducer","React","useReducer","x","forceUpdate","_React$useReducer2","_slicedToArray2","currentValueRef","useRef","getValue","_useEvent","current","setValue","updater"]
}
