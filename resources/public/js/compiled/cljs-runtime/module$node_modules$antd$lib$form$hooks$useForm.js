shadow$provide.module$node_modules$antd$lib$form$hooks$useForm=function(global,require,module,exports){function getFieldDOMNode(name,wrapForm){var field=wrapForm.getFieldInstance(name);if(field=(0,_findDOMNode.getDOM)(field))return field;if(name=(0,_util.getFieldId)((0,_util.toArray)(name),wrapForm.__INTERNAL__.name))return document.getElementById(name)}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;
Object.defineProperty(exports,"__esModule",{value:!0});exports.default=function(form){const [rcForm]=(0,_rcFieldForm.useForm)(),itemsRef=React.useRef({}),wrapForm=React.useMemo(()=>null!==form&&void 0!==form?form:Object.assign(Object.assign({},rcForm),{__INTERNAL__:{itemRef:name=>node=>{const namePathStr=(0,_util.toArray)(name).join("_");node?itemsRef.current[namePathStr]=node:delete itemsRef.current[namePathStr]}},scrollToField:function(name){let options=1<arguments.length&&void 0!==arguments[1]?
arguments[1]:{};const node=getFieldDOMNode(name,wrapForm);node&&(0,_scrollIntoViewIfNeeded.default)(node,Object.assign({scrollMode:"if-needed",block:"nearest"},options))},focusField:name=>{var _a;if(name=getFieldDOMNode(name,wrapForm))null===(_a=name.focus)||void 0===_a?void 0:_a.call(name)},getFieldInstance:name=>{name=(0,_util.toArray)(name).join("_");return itemsRef.current[name]}}),[form,rcForm]);return[wrapForm]};var React=module(require("module$node_modules$react$index")),_rcFieldForm=require("module$node_modules$rc_field_form$lib$index"),
_findDOMNode=require("module$node_modules$rc_util$lib$Dom$findDOMNode"),_scrollIntoViewIfNeeded=global(require("module$node_modules$scroll_into_view_if_needed$dist$index_cjs")),_util=require("module$node_modules$antd$lib$form$util")}
//# sourceMappingURL=module$node_modules$antd$lib$form$hooks$useForm.js.map
