shadow$provide.module$node_modules$antd$lib$tree_select$index=function(global,require,module,exports){"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});Object.defineProperty(exports,"TreeNode",{enumerable:!0,get:function(){return _rcTreeSelect.TreeNode}});exports.default=void 0;var React=module(require("module$node_modules$react$index")),
_classnames=global(require("module$node_modules$classnames$index")),_rcTreeSelect=module(require("module$node_modules$rc_tree_select$lib$index")),_omit=global(require("module$node_modules$rc_util$lib$omit")),_useZIndex=require("module$node_modules$antd$lib$_util$hooks$useZIndex"),_motion=require("module$node_modules$antd$lib$_util$motion");module=global(require("module$node_modules$antd$lib$_util$PurePanel"));var _statusUtils=require("module$node_modules$antd$lib$_util$statusUtils"),_warning=require("module$node_modules$antd$lib$_util$warning"),
_configProvider=require("module$node_modules$antd$lib$config_provider$index"),_defaultRenderEmpty=global(require("module$node_modules$antd$lib$config_provider$defaultRenderEmpty")),_DisabledContext=global(require("module$node_modules$antd$lib$config_provider$DisabledContext")),_useCSSVarCls=global(require("module$node_modules$antd$lib$config_provider$hooks$useCSSVarCls")),_useSize=global(require("module$node_modules$antd$lib$config_provider$hooks$useSize")),_context=require("module$node_modules$antd$lib$form$context"),
_useVariants=global(require("module$node_modules$antd$lib$form$hooks$useVariants")),_mergedBuiltinPlacements=global(require("module$node_modules$antd$lib$select$mergedBuiltinPlacements")),_style=global(require("module$node_modules$antd$lib$select$style$index")),_useIcons=global(require("module$node_modules$antd$lib$select$useIcons")),_useShowArrow=global(require("module$node_modules$antd$lib$select$useShowArrow")),_Compact=require("module$node_modules$antd$lib$space$Compact"),_internal=require("module$node_modules$antd$lib$theme$internal"),
_iconUtil=global(require("module$node_modules$antd$lib$tree$utils$iconUtil")),_style2=global(require("module$node_modules$antd$lib$tree_select$style$index")),__rest=function(s,e){var t={},p;for(p in s)Object.prototype.hasOwnProperty.call(s,p)&&0>e.indexOf(p)&&(t[p]=s[p]);if(null!=s&&"function"===typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)0>e.indexOf(p[i])&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};require=
React.forwardRef((props,ref)=>{var _a;const {prefixCls:customizePrefixCls,size:customizeSize,disabled:customDisabled,bordered=!0,className,rootClassName,treeCheckable,multiple,listHeight=256,listItemHeight:customListItemHeight,placement,notFoundContent,switcherIcon,treeLine,getPopupContainer,popupClassName,dropdownClassName,treeIcon=!1,transitionName,choiceTransitionName="",status:customStatus,treeExpandAction,builtinPlacements,dropdownMatchSelectWidth,popupMatchSelectWidth,allowClear,variant:customVariant,
dropdownStyle,tagRender,maxCount,showCheckedStrategy,treeCheckStrictly}=props;var restProps=__rest(props,"prefixCls size disabled bordered className rootClassName treeCheckable multiple listHeight listItemHeight placement notFoundContent switcherIcon treeLine getPopupContainer popupClassName dropdownClassName treeIcon transitionName choiceTransitionName status treeExpandAction builtinPlacements dropdownMatchSelectWidth popupMatchSelectWidth allowClear variant dropdownStyle tagRender maxCount showCheckedStrategy treeCheckStrictly".split(" "));
const {getPopupContainer:getContextPopupContainer,getPrefixCls,renderEmpty,direction,virtual,popupMatchSelectWidth:contextPopupMatchSelectWidth,popupOverflow}=React.useContext(_configProvider.ConfigContext);var [,token]=(0,_internal.useToken)();token=null!==customListItemHeight&&void 0!==customListItemHeight?customListItemHeight:(null===token||void 0===token?void 0:token.controlHeightSM)+(null===token||void 0===token?void 0:token.paddingXXS);var warning=(0,_warning.devUseWarning)("TreeSelect");warning(!1!==
multiple||!treeCheckable,"usage","`multiple` will always be `true` when `treeCheckable` is true");warning.deprecated(!dropdownClassName,"dropdownClassName","popupClassName");warning.deprecated(void 0===dropdownMatchSelectWidth,"dropdownMatchSelectWidth","popupMatchSelectWidth");warning(!("showArrow"in props),"deprecated","`showArrow` is deprecated which will be removed in next major version. It will be a default behavior, you can hide it by setting `suffixIcon` to null.");warning.deprecated(!("bordered"in
props),"bordered","variant");const rootPrefixCls=getPrefixCls(),prefixCls=getPrefixCls("select",customizePrefixCls),treePrefixCls=getPrefixCls("select-tree",customizePrefixCls);var treeSelectPrefixCls=getPrefixCls("tree-select",customizePrefixCls);const {compactSize,compactItemClassnames}=(0,_Compact.useCompactItemContext)(prefixCls,direction);var rootCls=(0,_useCSSVarCls.default)(prefixCls);const treeSelectRootCls=(0,_useCSSVarCls.default)(treeSelectPrefixCls),[wrapCSSVar,hashId,cssVarCls]=(0,_style.default)(prefixCls,
rootCls);[warning]=(0,_style2.default)(treeSelectPrefixCls,treePrefixCls,treeSelectRootCls);const [variant,enableVariantCls]=(0,_useVariants.default)("treeSelect",customVariant,bordered),mergedDropdownClassName=(0,_classnames.default)(popupClassName||dropdownClassName,`${treeSelectPrefixCls}-dropdown`,{[`${treeSelectPrefixCls}-dropdown-rtl`]:"rtl"===direction},rootClassName,cssVarCls,rootCls,treeSelectRootCls,hashId),isMultiple=!(!treeCheckable&&!multiple),mergedMaxCount=React.useMemo(()=>{if(!maxCount||
("SHOW_ALL"!==showCheckedStrategy||treeCheckStrictly)&&"SHOW_PARENT"!==showCheckedStrategy)return maxCount},[maxCount,showCheckedStrategy,treeCheckStrictly]);var showSuffixIcon=(0,_useShowArrow.default)(props.suffixIcon,props.showArrow);props=null!==(_a=null!==popupMatchSelectWidth&&void 0!==popupMatchSelectWidth?popupMatchSelectWidth:dropdownMatchSelectWidth)&&void 0!==_a?_a:contextPopupMatchSelectWidth;const {status:contextStatus,hasFeedback,isFormItemInput,feedbackIcon}=React.useContext(_context.FormItemInputContext),
mergedStatus=(0,_statusUtils.getMergedStatus)(contextStatus,customStatus),{suffixIcon,removeIcon,clearIcon}=(0,_useIcons.default)(Object.assign(Object.assign({},restProps),{multiple:isMultiple,showSuffixIcon,hasFeedback,feedbackIcon,prefixCls,componentName:"TreeSelect"}));_a=!0===allowClear?{clearIcon}:allowClear;showSuffixIcon=void 0!==notFoundContent?notFoundContent:(null===renderEmpty||void 0===renderEmpty?void 0:renderEmpty("Select"))||React.createElement(_defaultRenderEmpty.default,{componentName:"Select"});
restProps=(0,_omit.default)(restProps,["suffixIcon","removeIcon","clearIcon","itemIcon","switcherIcon"]);const memoizedPlacement=React.useMemo(()=>void 0!==placement?placement:"rtl"===direction?"bottomRight":"bottomLeft",[placement,direction]),mergedSize=(0,_useSize.default)(ctx=>{var _a;return null!==(_a=null!==customizeSize&&void 0!==customizeSize?customizeSize:compactSize)&&void 0!==_a?_a:ctx});var disabled=React.useContext(_DisabledContext.default);disabled=null!==customDisabled&&void 0!==customDisabled?
customDisabled:disabled;treeSelectPrefixCls=(0,_classnames.default)(!customizePrefixCls&&treeSelectPrefixCls,{[`${prefixCls}-lg`]:"large"===mergedSize,[`${prefixCls}-sm`]:"small"===mergedSize,[`${prefixCls}-rtl`]:"rtl"===direction,[`${prefixCls}-${variant}`]:enableVariantCls,[`${prefixCls}-in-form-item`]:isFormItemInput},(0,_statusUtils.getStatusClassNames)(prefixCls,mergedStatus,hasFeedback),compactItemClassnames,className,rootClassName,cssVarCls,rootCls,treeSelectRootCls,hashId);[rootCls]=(0,_useZIndex.useZIndex)("SelectLike",
null===dropdownStyle||void 0===dropdownStyle?void 0:dropdownStyle.zIndex);ref=React.createElement(_rcTreeSelect.default,Object.assign({virtual,disabled},restProps,{dropdownMatchSelectWidth:props,builtinPlacements:(0,_mergedBuiltinPlacements.default)(builtinPlacements,popupOverflow),ref,prefixCls,className:treeSelectPrefixCls,listHeight,listItemHeight:token,treeCheckable:treeCheckable?React.createElement("span",{className:`${prefixCls}-tree-checkbox-inner`}):treeCheckable,treeLine:!!treeLine,suffixIcon,
multiple:isMultiple,placement:memoizedPlacement,removeIcon,allowClear:_a,switcherIcon:nodeProps=>React.createElement(_iconUtil.default,{prefixCls:treePrefixCls,switcherIcon,treeNodeProps:nodeProps,showLine:treeLine}),showTreeIcon:treeIcon,notFoundContent:showSuffixIcon,getPopupContainer:getPopupContainer||getContextPopupContainer,treeMotion:null,dropdownClassName:mergedDropdownClassName,dropdownStyle:Object.assign(Object.assign({},dropdownStyle),{zIndex:rootCls}),choiceTransitionName:(0,_motion.getTransitionName)(rootPrefixCls,
"",choiceTransitionName),transitionName:(0,_motion.getTransitionName)(rootPrefixCls,"slide-up",transitionName),treeExpandAction,tagRender:isMultiple?tagRender:void 0,maxCount:mergedMaxCount,showCheckedStrategy,treeCheckStrictly}));return wrapCSSVar(warning(ref))});global=(0,module.default)(require,"dropdownAlign",props=>(0,_omit.default)(props,["visible"]));require.TreeNode=_rcTreeSelect.TreeNode;require.SHOW_ALL=_rcTreeSelect.SHOW_ALL;require.SHOW_PARENT=_rcTreeSelect.SHOW_PARENT;require.SHOW_CHILD=
_rcTreeSelect.SHOW_CHILD;require._InternalPanelDoNotUseOrYouWillBeFired=global;require.displayName="TreeSelect";exports.default=require}
//# sourceMappingURL=module$node_modules$antd$lib$tree_select$index.js.map
