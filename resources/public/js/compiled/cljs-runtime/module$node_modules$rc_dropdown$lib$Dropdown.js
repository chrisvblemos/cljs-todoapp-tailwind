shadow$provide.module$node_modules$rc_dropdown$lib$Dropdown=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _extends2=global(require("module$node_modules$$babel$runtime$helpers$extends")),_defineProperty2=global(require("module$node_modules$$babel$runtime$helpers$defineProperty")),_slicedToArray2=global(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),
_objectWithoutProperties2=global(require("module$node_modules$$babel$runtime$helpers$objectWithoutProperties")),_trigger=global(require("module$node_modules$$rc_component$trigger$lib$index")),_classnames=global(require("module$node_modules$classnames$index")),_ref=require("module$node_modules$rc_util$lib$ref"),_react=global(require("module$node_modules$react$index")),_useAccessibility=global(require("module$node_modules$rc_dropdown$lib$hooks$useAccessibility")),_Overlay=global(require("module$node_modules$rc_dropdown$lib$Overlay")),
_placements=global(require("module$node_modules$rc_dropdown$lib$placements")),_excluded="arrow prefixCls transitionName animation align placement placements getPopupContainer showAction hideAction overlayClassName overlayStyle visible trigger autoFocus overlay children onVisibleChange".split(" ");exports.default=_react.default.forwardRef(function(props,ref){var _children$props,_props$arrow=props.arrow,arrow=void 0===_props$arrow?!1:_props$arrow;_props$arrow=props.prefixCls;var prefixCls=void 0===
_props$arrow?"rc-dropdown":_props$arrow;_props$arrow=props.transitionName;var animation=props.animation,align=props.align,_props$placement=props.placement;_props$placement=void 0===_props$placement?"bottomLeft":_props$placement;var _props$placements=props.placements;_props$placements=void 0===_props$placements?_placements.default:_props$placements;var getPopupContainer=props.getPopupContainer,showAction=props.showAction,hideAction=props.hideAction,overlayClassName=props.overlayClassName,overlayStyle=
props.overlayStyle,visible=props.visible,_props$trigger=props.trigger;_props$trigger=void 0===_props$trigger?["hover"]:_props$trigger;var autoFocus=props.autoFocus,overlay=props.overlay,children=props.children,onVisibleChange=props.onVisibleChange,otherProps=(0,_objectWithoutProperties2.default)(props,_excluded),_React$useState=_react.default.useState();_React$useState=(0,_slicedToArray2.default)(_React$useState,2);var triggerVisible=_React$useState[0],setTriggerVisible=_React$useState[1];visible=
"visible"in props?visible:triggerVisible;var triggerRef=_react.default.useRef(null),overlayRef=_react.default.useRef(null);triggerVisible=_react.default.useRef(null);_react.default.useImperativeHandle(ref,function(){return triggerRef.current});ref=function(newVisible){setTriggerVisible(newVisible);null===onVisibleChange||void 0===onVisibleChange||onVisibleChange(newVisible)};(0,_useAccessibility.default)({visible,triggerRef:triggerVisible,onVisibleChange:ref,autoFocus,overlayRef});_React$useState=
function(){return _react.default.createElement(_Overlay.default,{ref:overlayRef,overlay,prefixCls,arrow})};var getOpenClassName=function(){var openClassName=props.openClassName;return void 0!==openClassName?openClassName:"".concat(prefixCls,"-open")};autoFocus=_react.default.cloneElement(children,{className:(0,_classnames.default)(null===(_children$props=children.props)||void 0===_children$props?void 0:_children$props.className,visible&&getOpenClassName()),ref:(0,_ref.supportRef)(children)?(0,_ref.composeRef)(triggerVisible,
(0,_ref.getNodeRef)(children)):void 0});(getOpenClassName=hideAction)||-1===_props$trigger.indexOf("contextMenu")||(getOpenClassName=["click"]);_children$props=_react.default;hideAction=_children$props.createElement;children=_trigger.default;triggerVisible=_extends2.default;overlayClassName=(0,_classnames.default)(overlayClassName,(0,_defineProperty2.default)({},"".concat(prefixCls,"-show-arrow"),arrow));var JSCompiler_temp_const=function(){var minOverlayWidthMatchTrigger=props.minOverlayWidthMatchTrigger;
return"minOverlayWidthMatchTrigger"in props?minOverlayWidthMatchTrigger:!props.alignPoint}()?"minWidth":"";_React$useState="function"===typeof overlay?_React$useState:_React$useState();return hideAction.call(_children$props,children,triggerVisible.call(_extends2,{builtinPlacements:_props$placements},otherProps,{prefixCls,ref:triggerRef,popupClassName:overlayClassName,popupStyle:overlayStyle,action:_props$trigger,showAction,hideAction:getOpenClassName,popupPlacement:_props$placement,popupAlign:align,
popupTransitionName:_props$arrow,popupAnimation:animation,popupVisible:visible,stretch:JSCompiler_temp_const,popup:_React$useState,onPopupVisibleChange:ref,onPopupClick:function(e){var onOverlayClick=props.onOverlayClick;setTriggerVisible(!1);onOverlayClick&&onOverlayClick(e)},getPopupContainer}),autoFocus)})}
//# sourceMappingURL=module$node_modules$rc_dropdown$lib$Dropdown.js.map
