{
"version":3,
"file":"module$node_modules$antd$lib$config_provider$hooks$useCSSVarCls.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,+DAAA,CAAoF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG5HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,OAAR,CAAkB,IAAK,EACvB,KAAIC,UAAYP,OAAA,CAAQ,6CAAR,CAUDE,QAAQI,CAAAA,OAAR,CAJME,SAAAC,EAAa,CAChC,MAAM,CAAA,CAAA,CAAA,CAAA,CAAMC,MAAN,CAAA,CAAgB,GAAIH,SAAUI,CAAAA,QAAd,GACtB,OAAOD,OAAA,CAAU,GAAEF,SAAF,UAAV,CAAkC,EAFT,CAb0F;",
"sources":["node_modules/antd/lib/config-provider/hooks/useCSSVarCls.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$lib$config_provider$hooks$useCSSVarCls\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _internal = require(\"../../theme/internal\");\n/**\n * This hook is only for cssVar to add root className for components.\n * If root ClassName is needed, this hook could be refactored with `-root`\n * @param prefixCls\n */\nconst useCSSVarCls = prefixCls => {\n  const [,,,, cssVar] = (0, _internal.useToken)();\n  return cssVar ? `${prefixCls}-css-var` : '';\n};\nvar _default = exports.default = useCSSVarCls;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","default","_internal","prefixCls","useCSSVarCls","cssVar","useToken"]
}
