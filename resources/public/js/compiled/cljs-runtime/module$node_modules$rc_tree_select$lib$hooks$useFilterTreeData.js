shadow$provide.module$node_modules$rc_tree_select$lib$hooks$useFilterTreeData=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _defineProperty2=module(require("module$node_modules$$babel$runtime$helpers$defineProperty")),_objectSpread3=module(require("module$node_modules$$babel$runtime$helpers$objectSpread2")),
React=global(require("module$node_modules$react$index")),_legacyUtil=require("module$node_modules$rc_tree_select$lib$utils$legacyUtil");exports.default=function(treeData,searchValue,options){var treeNodeFilterProp=options.treeNodeFilterProp,filterTreeNode=options.filterTreeNode,fieldChildren=options.fieldNames.children;return React.useMemo(function(){if(!searchValue||!1===filterTreeNode)return treeData;var filterOptionFunc="function"===typeof filterTreeNode?filterTreeNode:function(_,dataNode){return String(dataNode[treeNodeFilterProp]).toUpperCase().includes(searchValue.toUpperCase())};
return function filterTreeNodes(nodes){var keepAll=1<arguments.length&&void 0!==arguments[1]?arguments[1]:!1;return nodes.reduce(function(filtered,node){var children=node[fieldChildren],isMatch=keepAll||filterOptionFunc(searchValue,(0,_legacyUtil.fillLegacyProps)(node));children=filterTreeNodes(children||[],isMatch);(isMatch||children.length)&&filtered.push((0,_objectSpread3.default)((0,_objectSpread3.default)({},node),{},(0,_defineProperty2.default)({isLeaf:void 0},fieldChildren,children)));return filtered},
[])}(treeData)},[treeData,searchValue,fieldChildren,treeNodeFilterProp,filterTreeNode])}}
//# sourceMappingURL=module$node_modules$rc_tree_select$lib$hooks$useFilterTreeData.js.map
