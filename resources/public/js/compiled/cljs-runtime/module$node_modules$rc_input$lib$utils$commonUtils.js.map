{
"version":3,
"file":"module$node_modules$rc_input$lib$utils$commonUtils.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,kDAAA,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAkB/GC,QAASA,WAAU,CAACC,KAAD,CAAQC,MAAR,CAAgBC,KAAhB,CAAuB,CAIxC,IAAIC,cAAgBF,MAAOG,CAAAA,SAAP,CAAiB,CAAA,CAAjB,CAGhBC,MAAAA,CAAWC,MAAOC,CAAAA,MAAP,CAAcP,KAAd,CAAqB,CAClCC,OAAQ,CACNC,MAAOC,aADD,CAD0B,CAIlCA,cAAe,CACbD,MAAOC,aADM,CAJmB,CAArB,CAUfA,cAAcD,CAAAA,KAAd,CAAsBA,KAIe,SAArC,GAAI,MAAOD,OAAOO,CAAAA,cAAlB,EAAgF,QAAhF,GAAiD,MAAOP,OAAOQ,CAAAA,YAA/D,GACEN,aAAcK,CAAAA,cACd,CAD+BP,MAAOO,CAAAA,cACtC,CAAAL,aAAcM,CAAAA,YAAd,CAA6BR,MAAOQ,CAAAA,YAFtC,CAIAN,cAAcO,CAAAA,iBAAd;AAAkCC,QAAS,EAAG,CAC5CV,MAAOS,CAAAA,iBAAkBE,CAAAA,KAAzB,CAA+BX,MAA/B,CAAuCY,SAAvC,CAD4C,CAG9C,OAAOR,MA5BiC,CAf1CC,MAAOQ,CAAAA,cAAP,CAAsBhB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAGAJ,QAAQiB,CAAAA,QAAR,CAIAA,QAAiB,CAACC,KAAD,CAAQ,CACvB,MAAO,EAASC,CAAND,KAAMC,CAAAA,WAAT,EAA8BC,CAANF,KAAME,CAAAA,UAA9B,CADgB,CAHzBpB,QAAQqB,CAAAA,eAAR,CAMAA,QAAwB,CAACH,KAAD,CAAQ,CAC9B,MAAO,CAAC,EAAEA,KAAMI,CAAAA,MAAR,EAAkBJ,KAAMK,CAAAA,MAAxB,EAAkCL,KAAMM,CAAAA,UAAxC,CADsB,CALhCxB,QAAQyB,CAAAA,eAAR,CAwCAA,QAAwB,CAACtB,MAAD,CAASuB,CAAT,CAAYC,QAAZ,CAAsBC,WAAtB,CAAmC,CACzD,GAAKD,QAAL,CAAA,CAGA,IAAIzB,MAAQwB,CACG,QAAf,GAAIA,CAAEG,CAAAA,IAAN,CAaE3B,KAbF,CAaUD,UAAA,CAAWyB,CAAX,CAAcvB,MAAd,CAAsB,EAAtB,CAbV,CAqBoB,MArBpB,GAqBIA,MAAO0B,CAAAA,IArBX,EAqB8CC,IAAAA,EArB9C,GAqB8BF,WArB9B,GAsBE1B,KAtBF,CAsBUD,UAAA,CAAWyB,CAAX;AAAcvB,MAAd,CAAsByB,WAAtB,CAtBV,CAcED,SAAA,CAASzB,KAAT,CAlBF,CADyD,CAvC3DF,QAAQ+B,CAAAA,YAAR,CAwEAA,QAAqB,CAACC,OAAD,CAAUC,MAAV,CAAkB,CACrC,GAAKD,OAAL,GACAA,OAAQE,CAAAA,KAAR,CAAcD,MAAd,CAIEE,CAAAA,MAAAA,CAAcA,CADLF,MACKE,EADK,EACLA,EAAAA,MALhB,EAMY,CACV,IAAIC,IAAMJ,OAAQ5B,CAAAA,KAAMiC,CAAAA,MACxB,QAAQF,MAAR,EACE,KAAK,OAAL,CACEH,OAAQpB,CAAAA,iBAAR,CAA0B,CAA1B,CAA6B,CAA7B,CACA,MACF,MAAK,KAAL,CACEoB,OAAQpB,CAAAA,iBAAR,CAA0BwB,GAA1B,CAA+BA,GAA/B,CACA,MACF,SACEJ,OAAQpB,CAAAA,iBAAR,CAA0B,CAA1B,CAA6BwB,GAA7B,CARJ,CAFU,CAPyB,CAjFwE;",
"sources":["node_modules/rc-input/lib/utils/commonUtils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rc_input$lib$utils$commonUtils\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hasAddon = hasAddon;\nexports.hasPrefixSuffix = hasPrefixSuffix;\nexports.resolveOnChange = resolveOnChange;\nexports.triggerFocus = triggerFocus;\nfunction hasAddon(props) {\n  return !!(props.addonBefore || props.addonAfter);\n}\nfunction hasPrefixSuffix(props) {\n  return !!(props.prefix || props.suffix || props.allowClear);\n}\n\n// TODO: It's better to use `Proxy` replace the `element.value`. But we still need support IE11.\nfunction cloneEvent(event, target, value) {\n  // A bug report filed on WebKit's Bugzilla tracker, dating back to 2009, specifically addresses the issue of cloneNode() not copying files of <input type=\"file\"> elements.\n  // As of the last update, this bug was still marked as \"NEW,\" indicating that it might not have been resolved yet\u200b\u200b.\n  // https://bugs.webkit.org/show_bug.cgi?id=28123\n  var currentTarget = target.cloneNode(true);\n\n  // click clear icon\n  var newEvent = Object.create(event, {\n    target: {\n      value: currentTarget\n    },\n    currentTarget: {\n      value: currentTarget\n    }\n  });\n\n  // Fill data\n  currentTarget.value = value;\n\n  // Fill selection. Some type like `email` not support selection\n  // https://github.com/ant-design/ant-design/issues/47833\n  if (typeof target.selectionStart === 'number' && typeof target.selectionEnd === 'number') {\n    currentTarget.selectionStart = target.selectionStart;\n    currentTarget.selectionEnd = target.selectionEnd;\n  }\n  currentTarget.setSelectionRange = function () {\n    target.setSelectionRange.apply(target, arguments);\n  };\n  return newEvent;\n}\nfunction resolveOnChange(target, e, onChange, targetValue) {\n  if (!onChange) {\n    return;\n  }\n  var event = e;\n  if (e.type === 'click') {\n    // Clone a new target for event.\n    // Avoid the following usage, the setQuery method gets the original value.\n    //\n    // const [query, setQuery] = React.useState('');\n    // <Input\n    //   allowClear\n    //   value={query}\n    //   onChange={(e)=> {\n    //     setQuery((prevStatus) => e.target.value);\n    //   }}\n    // />\n\n    event = cloneEvent(e, target, '');\n    onChange(event);\n    return;\n  }\n\n  // Trigger by composition event, this means we need force change the input value\n  // https://github.com/ant-design/ant-design/issues/45737\n  // https://github.com/ant-design/ant-design/issues/46598\n  if (target.type !== 'file' && targetValue !== undefined) {\n    event = cloneEvent(e, target, targetValue);\n    onChange(event);\n    return;\n  }\n  onChange(event);\n}\nfunction triggerFocus(element, option) {\n  if (!element) return;\n  element.focus(option);\n\n  // Selection content\n  var _ref = option || {},\n    cursor = _ref.cursor;\n  if (cursor) {\n    var len = element.value.length;\n    switch (cursor) {\n      case 'start':\n        element.setSelectionRange(0, 0);\n        break;\n      case 'end':\n        element.setSelectionRange(len, len);\n        break;\n      default:\n        element.setSelectionRange(0, len);\n    }\n  }\n}\n};"],
"names":["shadow$provide","global","require","module","exports","cloneEvent","event","target","value","currentTarget","cloneNode","newEvent","Object","create","selectionStart","selectionEnd","setSelectionRange","currentTarget.setSelectionRange","apply","arguments","defineProperty","hasAddon","props","addonBefore","addonAfter","hasPrefixSuffix","prefix","suffix","allowClear","resolveOnChange","e","onChange","targetValue","type","undefined","triggerFocus","element","option","focus","cursor","len","length"]
}
