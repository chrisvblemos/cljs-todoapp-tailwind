shadow$provide.module$node_modules$rc_tree$lib$TreeNode=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _extends2=global(require("module$node_modules$$babel$runtime$helpers$extends")),_defineProperty2=global(require("module$node_modules$$babel$runtime$helpers$defineProperty")),_objectSpread2=global(require("module$node_modules$$babel$runtime$helpers$objectSpread2")),
_slicedToArray2=global(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),_objectWithoutProperties2=global(require("module$node_modules$$babel$runtime$helpers$objectWithoutProperties")),_react=global(require("module$node_modules$react$index")),_classnames=global(require("module$node_modules$classnames$index")),_pickAttrs=global(require("module$node_modules$rc_util$lib$pickAttrs")),_contextTypes=require("module$node_modules$rc_tree$lib$contextTypes"),_Indent=global(require("module$node_modules$rc_tree$lib$Indent")),
_keyUtil=global(require("module$node_modules$rc_tree$lib$utils$keyUtil")),_treeUtil=require("module$node_modules$rc_tree$lib$utils$treeUtil"),_excluded="eventKey className style dragOver dragOverGapTop dragOverGapBottom isLeaf isStart isEnd expanded selected checked halfChecked loading domRef active data onMouseMove selectable".split(" ");require=function(props){var _context$filterTreeNo,_classNames4,eventKey=props.eventKey,className=props.className,style=props.style,dragOver=props.dragOver,dragOverGapTop=
props.dragOverGapTop,dragOverGapBottom=props.dragOverGapBottom,isLeaf=props.isLeaf,isStart=props.isStart,isEnd=props.isEnd,expanded=props.expanded,selected=props.selected,checked=props.checked,halfChecked=props.halfChecked,loading=props.loading,domRef=props.domRef,active=props.active,data=props.data,onMouseMove=props.onMouseMove,selectable=props.selectable,otherProps=(0,_objectWithoutProperties2.default)(props,_excluded),context=_react.default.useContext(_contextTypes.TreeContext),unstableContext=
_react.default.useContext(_contextTypes.UnstableContext),selectHandleRef=_react.default.useRef(null),_React$useState=_react.default.useState(!1);_React$useState=(0,_slicedToArray2.default)(_React$useState,2);var dragNodeHighlight=_React$useState[0],setDragNodeHighlight=_React$useState[1],isDisabled=_react.default.useMemo(function(){var _unstableContext$node;return!!(context.disabled||props.disabled||null!==(_unstableContext$node=unstableContext.nodeDisabled)&&void 0!==_unstableContext$node&&_unstableContext$node.call(unstableContext,
data))},[context.disabled,props.disabled,unstableContext.nodeDisabled,data]),isCheckable=_react.default.useMemo(function(){return context.checkable&&!1!==props.checkable?context.checkable:!1},[context.checkable,props.checkable]),onCheck=function(e){if(!isDisabled&&isCheckable&&!props.disableCheckbox)context.onNodeCheck(e,(0,_treeUtil.convertNodePropsToEventData)(props),!checked)},isSelectable=_react.default.useMemo(function(){return"boolean"===typeof selectable?selectable:context.selectable},[selectable,
context.selectable]),onSelectorClick=function(e){context.onNodeClick(e,(0,_treeUtil.convertNodePropsToEventData)(props));if(isSelectable){if(!isDisabled)context.onNodeSelect(e,(0,_treeUtil.convertNodePropsToEventData)(props))}else onCheck(e)},onSelectorDoubleClick=function(e){context.onNodeDoubleClick(e,(0,_treeUtil.convertNodePropsToEventData)(props))},onMouseEnter=function(e){context.onNodeMouseEnter(e,(0,_treeUtil.convertNodePropsToEventData)(props))},onMouseLeave=function(e){context.onNodeMouseLeave(e,
(0,_treeUtil.convertNodePropsToEventData)(props))},onContextMenu=function(e){context.onNodeContextMenu(e,(0,_treeUtil.convertNodePropsToEventData)(props))};_React$useState=_react.default.useMemo(function(){return!(!context.draggable||context.draggable.nodeDraggable&&!context.draggable.nodeDraggable(data))},[context.draggable,data]);var onDragStart=function(e){e.stopPropagation();setDragNodeHighlight(!0);context.onNodeDragStart(e,props);try{e.dataTransfer.setData("text/plain","")}catch(_unused){}},
onDragEnter=function(e){e.preventDefault();e.stopPropagation();context.onNodeDragEnter(e,props)},onDragOver=function(e){e.preventDefault();e.stopPropagation();context.onNodeDragOver(e,props)},onDragLeave=function(e){e.stopPropagation();context.onNodeDragLeave(e,props)},onDragEnd=function(e){e.stopPropagation();setDragNodeHighlight(!1);context.onNodeDragEnd(e,props)},onDrop=function(e){e.preventDefault();e.stopPropagation();setDragNodeHighlight(!1);context.onNodeDrop(e,props)},onExpand=function(e){if(!loading)context.onNodeExpand(e,
(0,_treeUtil.convertNodePropsToEventData)(props))},hasChildren=_react.default.useMemo(function(){return!!(((0,_keyUtil.default)(context.keyEntities,eventKey)||{}).children||[]).length},[context.keyEntities,eventKey]),memoizedIsLeaf=_react.default.useMemo(function(){return!1===isLeaf?!1:isLeaf||!context.loadData&&!hasChildren||context.loadData&&props.loaded&&!hasChildren},[isLeaf,context.loadData,hasChildren,props.loaded]);_react.default.useEffect(function(){if(!loading&&"function"===typeof context.loadData&&
expanded&&!memoizedIsLeaf&&!props.loaded)context.onNodeLoad((0,_treeUtil.convertNodePropsToEventData)(props))},[loading,context.loadData,context.onNodeLoad,expanded,memoizedIsLeaf,props]);var dragHandlerNode=_react.default.useMemo(function(){var _context$draggable;return null!==(_context$draggable=context.draggable)&&void 0!==_context$draggable&&_context$draggable.icon?_react.default.createElement("span",{className:"".concat(context.prefixCls,"-draggable-icon")},context.draggable.icon):null},[context.draggable]),
renderSwitcherIconDom=function(isInternalLeaf){var switcherIcon=props.switcherIcon||context.switcherIcon;return"function"===typeof switcherIcon?switcherIcon((0,_objectSpread2.default)((0,_objectSpread2.default)({},props),{},{isLeaf:isInternalLeaf})):switcherIcon},checkboxNode=_react.default.useMemo(function(){if(!isCheckable)return null;var $custom="boolean"!==typeof isCheckable?isCheckable:null;return _react.default.createElement("span",{className:(0,_classnames.default)("".concat(context.prefixCls,
"-checkbox"),(0,_defineProperty2.default)((0,_defineProperty2.default)((0,_defineProperty2.default)({},"".concat(context.prefixCls,"-checkbox-checked"),checked),"".concat(context.prefixCls,"-checkbox-indeterminate"),!checked&&halfChecked),"".concat(context.prefixCls,"-checkbox-disabled"),isDisabled||props.disableCheckbox)),onClick:onCheck,role:"checkbox","aria-checked":halfChecked?"mixed":checked,"aria-disabled":isDisabled||props.disableCheckbox,"aria-label":"Select ".concat("string"===typeof props.title?
props.title:"tree node")},$custom)},[isCheckable,checked,halfChecked,isDisabled,props.disableCheckbox,props.title]),nodeState=_react.default.useMemo(function(){return memoizedIsLeaf?null:expanded?"open":"close"},[memoizedIsLeaf,expanded]),iconNode=_react.default.useMemo(function(){return _react.default.createElement("span",{className:(0,_classnames.default)("".concat(context.prefixCls,"-iconEle"),"".concat(context.prefixCls,"-icon__").concat(nodeState||"docu"),(0,_defineProperty2.default)({},"".concat(context.prefixCls,
"-icon_loading"),loading))})},[context.prefixCls,nodeState,loading]),dropIndicatorNode=_react.default.useMemo(function(){var rootDraggable=!!context.draggable;return props.disabled||!rootDraggable||context.dragOverNodeKey!==eventKey?null:context.dropIndicatorRender({dropPosition:context.dropPosition,dropLevelOffset:context.dropLevelOffset,indent:context.indent,prefixCls:context.prefixCls,direction:context.direction})},[context.dropPosition,context.dropLevelOffset,context.indent,context.prefixCls,
context.direction,context.draggable,context.dragOverNodeKey,context.dropIndicatorRender]),selectorNode=_react.default.useMemo(function(){var _props$title=props.title;_props$title=void 0===_props$title?"---":_props$title;var wrapClass="".concat(context.prefixCls,"-node-content-wrapper");if(context.showIcon)var $icon=($icon=props.icon||context.icon)?_react.default.createElement("span",{className:(0,_classnames.default)("".concat(context.prefixCls,"-iconEle"),"".concat(context.prefixCls,"-icon__customize"))},
"function"===typeof $icon?$icon(props):$icon):iconNode;else context.loadData&&loading&&($icon=iconNode);var titleNode="function"===typeof _props$title?_props$title(data):context.titleRender?context.titleRender(data):_props$title;return _react.default.createElement("span",{ref:selectHandleRef,title:"string"===typeof _props$title?_props$title:"",className:(0,_classnames.default)(wrapClass,"".concat(wrapClass,"-").concat(nodeState||"normal"),(0,_defineProperty2.default)({},"".concat(context.prefixCls,
"-node-selected"),!isDisabled&&(selected||dragNodeHighlight))),onMouseEnter,onMouseLeave,onContextMenu,onClick:onSelectorClick,onDoubleClick:onSelectorDoubleClick},$icon,_react.default.createElement("span",{className:"".concat(context.prefixCls,"-title")},titleNode),dropIndicatorNode)},[context.prefixCls,context.showIcon,props,context.icon,iconNode,context.titleRender,data,nodeState,onMouseEnter,onMouseLeave,onContextMenu,onSelectorClick,onSelectorDoubleClick]);otherProps=(0,_pickAttrs.default)(otherProps,
{aria:!0,data:!0});var level=((0,_keyUtil.default)(context.keyEntities,eventKey)||{}).level,isEndNode=isEnd[isEnd.length-1],draggableWithoutDisabled=!isDisabled&&_React$useState,dragging=context.draggingNodeKey===eventKey,ariaSelected=void 0!==selectable?{"aria-selected":!!selectable}:void 0;return _react.default.createElement("div",(0,_extends2.default)({ref:domRef,role:"treeitem","aria-expanded":isLeaf?void 0:expanded,className:(0,_classnames.default)(className,"".concat(context.prefixCls,"-treenode"),
(_classNames4={},(0,_defineProperty2.default)((0,_defineProperty2.default)((0,_defineProperty2.default)((0,_defineProperty2.default)((0,_defineProperty2.default)((0,_defineProperty2.default)((0,_defineProperty2.default)((0,_defineProperty2.default)((0,_defineProperty2.default)((0,_defineProperty2.default)(_classNames4,"".concat(context.prefixCls,"-treenode-disabled"),isDisabled),"".concat(context.prefixCls,"-treenode-switcher-").concat(expanded?"open":"close"),!isLeaf),"".concat(context.prefixCls,
"-treenode-checkbox-checked"),checked),"".concat(context.prefixCls,"-treenode-checkbox-indeterminate"),halfChecked),"".concat(context.prefixCls,"-treenode-selected"),selected),"".concat(context.prefixCls,"-treenode-loading"),loading),"".concat(context.prefixCls,"-treenode-active"),active),"".concat(context.prefixCls,"-treenode-leaf-last"),isEndNode),"".concat(context.prefixCls,"-treenode-draggable"),_React$useState),"dragging",dragging),(0,_defineProperty2.default)((0,_defineProperty2.default)((0,_defineProperty2.default)((0,_defineProperty2.default)((0,_defineProperty2.default)((0,_defineProperty2.default)((0,_defineProperty2.default)(_classNames4,
"drop-target",context.dropTargetKey===eventKey),"drop-container",context.dropContainerKey===eventKey),"drag-over",!isDisabled&&dragOver),"drag-over-gap-top",!isDisabled&&dragOverGapTop),"drag-over-gap-bottom",!isDisabled&&dragOverGapBottom),"filter-node",null===(_context$filterTreeNo=context.filterTreeNode)||void 0===_context$filterTreeNo?void 0:_context$filterTreeNo.call(context,(0,_treeUtil.convertNodePropsToEventData)(props))),"".concat(context.prefixCls,"-treenode-leaf"),memoizedIsLeaf))),style,
draggable:draggableWithoutDisabled,onDragStart:draggableWithoutDisabled?onDragStart:void 0,onDragEnter:_React$useState?onDragEnter:void 0,onDragOver:_React$useState?onDragOver:void 0,onDragLeave:_React$useState?onDragLeave:void 0,onDrop:_React$useState?onDrop:void 0,onDragEnd:_React$useState?onDragEnd:void 0,onMouseMove},ariaSelected,otherProps),_react.default.createElement(_Indent.default,{prefixCls:context.prefixCls,level,isStart,isEnd}),dragHandlerNode,function(){if(memoizedIsLeaf){var _switcherIconDom=
renderSwitcherIconDom(!0);return!1!==_switcherIconDom?_react.default.createElement("span",{className:(0,_classnames.default)("".concat(context.prefixCls,"-switcher"),"".concat(context.prefixCls,"-switcher-noop"))},_switcherIconDom):null}_switcherIconDom=renderSwitcherIconDom(!1);return!1!==_switcherIconDom?_react.default.createElement("span",{onClick:onExpand,className:(0,_classnames.default)("".concat(context.prefixCls,"-switcher"),"".concat(context.prefixCls,"-switcher_").concat(expanded?"open":
"close"))},_switcherIconDom):null}(),checkboxNode,selectorNode)};require.isTreeNode=1;require.displayName="TreeNode";exports.default=require}
//# sourceMappingURL=module$node_modules$rc_tree$lib$TreeNode.js.map
