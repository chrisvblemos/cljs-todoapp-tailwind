shadow$provide.module$node_modules$antd$lib$radio$radio=function(global,require,module,exports){"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var React=module(require("module$node_modules$react$index")),_classnames=global(require("module$node_modules$classnames$index")),_rcCheckbox=
global(require("module$node_modules$rc_checkbox$lib$index")),_ref=require("module$node_modules$rc_util$lib$ref"),_warning=require("module$node_modules$antd$lib$_util$warning"),_wave=global(require("module$node_modules$antd$lib$_util$wave$index")),_interface=require("module$node_modules$antd$lib$_util$wave$interface"),_useBubbleLock=global(require("module$node_modules$antd$lib$checkbox$useBubbleLock")),_configProvider=require("module$node_modules$antd$lib$config_provider$index"),_DisabledContext=global(require("module$node_modules$antd$lib$config_provider$DisabledContext")),
_useCSSVarCls=global(require("module$node_modules$antd$lib$config_provider$hooks$useCSSVarCls")),_context=require("module$node_modules$antd$lib$form$context"),_context2=module(require("module$node_modules$antd$lib$radio$context")),_style=global(require("module$node_modules$antd$lib$radio$style$index")),__rest=function(s,e){var t={},p;for(p in s)Object.prototype.hasOwnProperty.call(s,p)&&0>e.indexOf(p)&&(t[p]=s[p]);if(null!=s&&"function"===typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<
p.length;i++)0>e.indexOf(p[i])&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};require=React.forwardRef((props,ref)=>{var _a,_b;const groupContext=React.useContext(_context2.default);var radioOptionTypeContext=React.useContext(_context2.RadioOptionTypeContext);const {getPrefixCls,direction,radio}=React.useContext(_configProvider.ConfigContext);var innerRef=React.useRef(null);ref=(0,_ref.composeRef)(ref,innerRef);({isFormItemInput:innerRef}=React.useContext(_context.FormItemInputContext));
(0,_warning.devUseWarning)("Radio")(!("optionType"in props),"usage","`optionType` is only support in Radio.Group.");const onChange=e=>{var _a,_b;null===(_a=props.onChange)||void 0===_a?void 0:_a.call(props,e);null===(_b=null===groupContext||void 0===groupContext?void 0:groupContext.onChange)||void 0===_b?void 0:_b.call(groupContext,e)},{prefixCls:customizePrefixCls,className,rootClassName,children,style,title}=props;var restProps=__rest(props,"prefixCls className rootClassName children style title".split(" ")),
radioPrefixCls=getPrefixCls("radio",customizePrefixCls);const prefixCls=(radioOptionTypeContext="button"===((null===groupContext||void 0===groupContext?void 0:groupContext.optionType)||radioOptionTypeContext))?`${radioPrefixCls}-button`:radioPrefixCls,rootCls=(0,_useCSSVarCls.default)(radioPrefixCls),[wrapCSSVar,hashId,cssVarCls]=(0,_style.default)(radioPrefixCls,rootCls);restProps=Object.assign({},restProps);radioPrefixCls=React.useContext(_DisabledContext.default);groupContext&&(restProps.name=
groupContext.name,restProps.onChange=onChange,restProps.checked=props.value===groupContext.value,restProps.disabled=null!==(_a=restProps.disabled)&&void 0!==_a?_a:groupContext.disabled);restProps.disabled=null!==(_b=restProps.disabled)&&void 0!==_b?_b:radioPrefixCls;_a=(0,_classnames.default)(`${prefixCls}-wrapper`,{[`${prefixCls}-wrapper-checked`]:restProps.checked,[`${prefixCls}-wrapper-disabled`]:restProps.disabled,[`${prefixCls}-wrapper-rtl`]:"rtl"===direction,[`${prefixCls}-wrapper-in-form-item`]:innerRef,
[`${prefixCls}-wrapper-block`]:!(null===groupContext||void 0===groupContext||!groupContext.block)},null===radio||void 0===radio?void 0:radio.className,className,rootClassName,hashId,cssVarCls,rootCls);const [onLabelClick,onInputClick]=(0,_useBubbleLock.default)(restProps.onClick);return wrapCSSVar(React.createElement(_wave.default,{component:"Radio",disabled:restProps.disabled},React.createElement("label",{className:_a,style:Object.assign(Object.assign({},null===radio||void 0===radio?void 0:radio.style),
style),onMouseEnter:props.onMouseEnter,onMouseLeave:props.onMouseLeave,title,onClick:onLabelClick},React.createElement(_rcCheckbox.default,Object.assign({},restProps,{className:(0,_classnames.default)(restProps.className,{[_interface.TARGET_CLS]:!radioOptionTypeContext}),type:"radio",prefixCls,ref,onClick:onInputClick})),void 0!==children?React.createElement("span",null,children):null)))});require.displayName="Radio";exports.default=require}
//# sourceMappingURL=module$node_modules$antd$lib$radio$radio.js.map
