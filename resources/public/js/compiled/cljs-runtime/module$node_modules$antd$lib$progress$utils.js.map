{
"version":3,
"file":"module$node_modules$antd$lib$progress$utils.js",
"lineCount":5,
"mappings":"AAAAA,cAAA,CAAA,2CAAA,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAUxGC,QAASA,cAAa,CAACC,QAAD,CAAW,CAC/B,MAAI,CAACA,QAAL,EAA4B,CAA5B,CAAiBA,QAAjB,CACS,CADT,CAGe,GAAf,CAAIA,QAAJ,CACS,GADT,CAGOA,QAPwB,CASjCC,QAASA,kBAAiB,CAACC,IAAD,CAAO,CAC/B,IAAI,CACFC,OADE,CAEFC,cAFE,CAAA,CAGAF,IACAG,KAAAA,CAAUD,cAEVD,QAAJ,EAAe,UAAf,EAA6BA,QAA7B,GACEE,IADF,CACYF,OAAQH,CAAAA,QADpB,CAGIG,QAAJ,EAAe,SAAf,EAA4BA,QAA5B,GACEE,IADF,CACYF,OAAQE,CAAAA,OADpB,CAGA,OAAOA,KAbwB,CAhBjCC,MAAOC,CAAAA,cAAP,CAAsBT,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CU,MAAO,CAAA,CADoC,CAA7C,CAGAV,QAAQW,CAAAA,cAAR,CAAyBX,OAAQY,CAAAA,OAAjC,CAA2CZ,OAAQa,CAAAA,aAAnD;AAAmE,IAAK,EACxEb,QAAQG,CAAAA,iBAAR,CAA4BA,iBAC5BH,QAAQC,CAAAA,aAAR,CAAwBA,aACxB,KAAIa,QAAUhB,OAAA,CAAQ,kDAAR,CAqCdE,QAAQa,CAAAA,aAAR,CAZsBE,KAAAF,EAAS,CAC7B,IAAI,CACFN,OADE,CAEFF,OAFE,CAGFC,cAHE,CAAA,CAIAS,KACEC,MAAAA,CAAqBf,aAAA,CAAcE,iBAAA,CAAkB,CACzDE,OADyD,CAEzDC,cAFyD,CAAlB,CAAd,CAI3B,OAAO,CAACU,KAAD,CAAqBf,aAAA,CAAcA,aAAA,CAAcM,OAAd,CAAd,CAAuCS,KAAvC,CAArB,CAVsB,CAuB/BhB,QAAQW,CAAAA,cAAR,CAVuBM,KAAAN,EAAS,CAC9B,IAAI,CACFN,OAAA,CAAU,EADR,CAEFa,WAFE,CAAA,CAGAD,KACJ,EAAM,CACJ,YAAaE,KADT,CAAN,CAEId,OAFJ,CAGA,OAAO,CAACc,KAAD,EAAiBL,OAAQM,CAAAA,mBAAoBC,CAAAA,KAA7C,CAAoDH,WAApD;AAAmE,IAAnE,CARuB,CAgDhClB,QAAQY,CAAAA,OAAR,CArCgB,CAACU,IAAD,CAAOC,IAAP,CAAaC,KAAb,CAAAZ,EAAuB,CAAA,IACjCa,EADiC,CAC7BC,EAD6B,CACzBC,EADyB,CACrBC,EAChB,KAAIC,MAAQ,CAAC,CAAb,CACIC,OAAS,CAAC,CACd,IAAa,MAAb,GAAIP,IAAJ,CACQQ,IAUN,CAVcP,KAAMO,CAAAA,KAUpB,CATMC,KASN,CAToBR,KAAMQ,CAAAA,WAS1B,CARoB,QAApB,GAAI,MAAOV,KAAX,EAAgD,WAAhD,GAAgC,MAAOA,KAAvC,EACEO,KACA,CADiB,OAAT,GAAAP,IAAA,CAAmB,CAAnB,CAAuB,EAC/B,CAAAQ,MAAA,CAAyB,IAAhB,GAAAE,KAAA,EAAwC,IAAK,EAA7C,GAAwBA,KAAxB,CAAiDA,KAAjD,CAA+D,CAF1E,EAG2B,QAApB,GAAI,MAAOV,KAAX,CACL,CAACO,KAAD,CAAQC,MAAR,CADK,CACa,CAACR,IAAD,CAAOA,IAAP,CADb,CAGL,CAACO,KAAA,CAAQ,EAAT,CAAaC,MAAA,CAAS,CAAtB,CAHK,CAGsBG,KAAMC,CAAAA,OAAN,CAAcZ,IAAd,CAAA,CAAsBA,IAAtB,CAA6B,CAACA,IAAKO,CAAAA,KAAN,CAAaP,IAAKQ,CAAAA,MAAlB,CAE1D,CAAAD,KAAA,EAASE,IAXX,KAYO,IAAa,MAAb,GAAIR,IAAJ,CACCS,KACN,CAD8B,IAAV,GAAAR,KAAA,EAA4B,IAAK,EAAjC,GAAkBA,KAAlB,CAAqC,IAAK,EAA1C,CAA8CA,KAAMQ,CAAAA,WACxE,CAAoB,QAApB,GAAI,MAAOV,KAAX,EAAgD,WAAhD;AAAgC,MAAOA,KAAvC,CACEQ,MADF,CACWE,KADX,GACoC,OAAT,GAAAV,IAAA,CAAmB,CAAnB,CAAuB,CADlD,EAE2B,QAApB,GAAI,MAAOA,KAAX,CACL,CAACO,KAAD,CAAQC,MAAR,CADK,CACa,CAACR,IAAD,CAAOA,IAAP,CADb,CAGL,CAACO,KAAA,CAAQ,CAAC,CAAV,CAAaC,MAAA,CAAS,CAAtB,CAHK,CAGsBG,KAAMC,CAAAA,OAAN,CAAcZ,IAAd,CAAA,CAAsBA,IAAtB,CAA6B,CAACA,IAAKO,CAAAA,KAAN,CAAaP,IAAKQ,CAAAA,MAAlB,CAPrD,KASA,IAAa,QAAb,GAAIP,IAAJ,EAAkC,WAAlC,GAAyBA,IAAzB,CACe,QAApB,GAAI,MAAOD,KAAX,EAAgD,WAAhD,GAAgC,MAAOA,KAAvC,CACE,CAACO,KAAD,CAAQC,MAAR,CADF,CAC6B,OAAT,GAAAR,IAAA,CAAmB,CAAC,EAAD,CAAK,EAAL,CAAnB,CAA8B,CAAC,GAAD,CAAM,GAAN,CADlD,CAE2B,QAApB,GAAI,MAAOA,KAAX,CACL,CAACO,KAAD,CAAQC,MAAR,CADK,CACa,CAACR,IAAD,CAAOA,IAAP,CADb,CAEIW,KAAMC,CAAAA,OAAN,CAAcZ,IAAd,CAFJ,GAGLO,KACA,CAD2E,IAAnE,IAACH,EAAD,CAAyB,IAAnB,IAACD,EAAD,CAAMH,IAAA,CAAK,CAAL,CAAN,GAAkC,IAAK,EAAvC,GAA2BG,EAA3B,CAA2CA,EAA3C,CAAgDH,IAAA,CAAK,CAAL,CAAtD,GAAkF,IAAK,EAAvF,GAA2EI,EAA3E,CAA2FA,EAA3F,CAAgG,GACxG,CAAAI,MAAA,CAA4E,IAAnE,IAACF,EAAD,CAAyB,IAAnB,IAACD,EAAD,CAAML,IAAA,CAAK,CAAL,CAAN;AAAkC,IAAK,EAAvC,GAA2BK,EAA3B,CAA2CA,EAA3C,CAAgDL,IAAA,CAAK,CAAL,CAAtD,GAAkF,IAAK,EAAvF,GAA2EM,EAA3E,CAA2FA,EAA3F,CAAgG,GAJpG,CAOT,OAAO,CAACC,KAAD,CAAQC,MAAR,CAnC8B,CA1DiE;",
"sources":["node_modules/antd/lib/progress/utils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$lib$progress$utils\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getStrokeColor = exports.getSize = exports.getPercentage = void 0;\nexports.getSuccessPercent = getSuccessPercent;\nexports.validProgress = validProgress;\nvar _colors = require(\"@ant-design/colors\");\nfunction validProgress(progress) {\n  if (!progress || progress < 0) {\n    return 0;\n  }\n  if (progress > 100) {\n    return 100;\n  }\n  return progress;\n}\nfunction getSuccessPercent(_ref) {\n  let {\n    success,\n    successPercent\n  } = _ref;\n  let percent = successPercent;\n  /** @deprecated Use `percent` instead */\n  if (success && 'progress' in success) {\n    percent = success.progress;\n  }\n  if (success && 'percent' in success) {\n    percent = success.percent;\n  }\n  return percent;\n}\nconst getPercentage = _ref2 => {\n  let {\n    percent,\n    success,\n    successPercent\n  } = _ref2;\n  const realSuccessPercent = validProgress(getSuccessPercent({\n    success,\n    successPercent\n  }));\n  return [realSuccessPercent, validProgress(validProgress(percent) - realSuccessPercent)];\n};\nexports.getPercentage = getPercentage;\nconst getStrokeColor = _ref3 => {\n  let {\n    success = {},\n    strokeColor\n  } = _ref3;\n  const {\n    strokeColor: successColor\n  } = success;\n  return [successColor || _colors.presetPrimaryColors.green, strokeColor || null];\n};\nexports.getStrokeColor = getStrokeColor;\nconst getSize = (size, type, extra) => {\n  var _a, _b, _c, _d;\n  let width = -1;\n  let height = -1;\n  if (type === 'step') {\n    const steps = extra.steps;\n    const strokeWidth = extra.strokeWidth;\n    if (typeof size === 'string' || typeof size === 'undefined') {\n      width = size === 'small' ? 2 : 14;\n      height = strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 8;\n    } else if (typeof size === 'number') {\n      [width, height] = [size, size];\n    } else {\n      [width = 14, height = 8] = Array.isArray(size) ? size : [size.width, size.height];\n    }\n    width *= steps;\n  } else if (type === 'line') {\n    const strokeWidth = extra === null || extra === void 0 ? void 0 : extra.strokeWidth;\n    if (typeof size === 'string' || typeof size === 'undefined') {\n      height = strokeWidth || (size === 'small' ? 6 : 8);\n    } else if (typeof size === 'number') {\n      [width, height] = [size, size];\n    } else {\n      [width = -1, height = 8] = Array.isArray(size) ? size : [size.width, size.height];\n    }\n  } else if (type === 'circle' || type === 'dashboard') {\n    if (typeof size === 'string' || typeof size === 'undefined') {\n      [width, height] = size === 'small' ? [60, 60] : [120, 120];\n    } else if (typeof size === 'number') {\n      [width, height] = [size, size];\n    } else if (Array.isArray(size)) {\n      width = (_b = (_a = size[0]) !== null && _a !== void 0 ? _a : size[1]) !== null && _b !== void 0 ? _b : 120;\n      height = (_d = (_c = size[0]) !== null && _c !== void 0 ? _c : size[1]) !== null && _d !== void 0 ? _d : 120;\n    }\n  }\n  return [width, height];\n};\nexports.getSize = getSize;\n};"],
"names":["shadow$provide","global","require","module","exports","validProgress","progress","getSuccessPercent","_ref","success","successPercent","percent","Object","defineProperty","value","getStrokeColor","getSize","getPercentage","_colors","_ref2","realSuccessPercent","_ref3","strokeColor","successColor","presetPrimaryColors","green","size","type","extra","_a","_b","_c","_d","width","height","steps","strokeWidth","Array","isArray"]
}
