{
"version":3,
"file":"module$node_modules$rc_tree_select$lib$utils$warningPropsUtil.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAA,6DAAA,CAAkF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGtHC,MAAAA,CAAyBH,OAAA,CAAQ,kEAAR,CAAwDI,CAAAA,OACrFC,OAAOC,CAAAA,cAAP,CAAsBJ,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CK,MAAO,CAAA,CADoC,CAA7C,CAGAL,QAAQE,CAAAA,OAAR,CAAkB,IAAK,EACvB,KAAII,SAAWL,MAAA,CAAuBH,OAAA,CAAQ,mDAAR,CAAvB,CAAf,CACIS,SAAWN,MAAA,CAAuBH,OAAA,CAAQ,yCAAR,CAAvB,CADf,CAEIU,WAAaV,OAAA,CAAQ,wDAAR,CA4BFE;OAAQE,CAAAA,OAAR,CA3BfO,QAAqB,CAACC,KAAD,CAAQ,CAAA,IAEzBC,kBAAoBD,KAAMC,CAAAA,iBAFD,CAGzBC,cAAgBF,KAAME,CAAAA,aAHG,CAIzBC,aAAeH,KAAMG,CAAAA,YAJI,CAKzBR,MAAQK,KAAML,CAAAA,KALW,CAMzBS,SAAWJ,KAAMI,CAAAA,QANQ,CAOzBC,oBAAsBL,KAAMK,CAAAA,mBAPH,CAQzBC,SAAWN,KAAMM,CAAAA,QACnB,IAAIT,QAASL,CAAAA,OAAb,EAAsB,CAREQ,KAAMO,CAAAA,iBAQ9B,CAA0C,uCAA1C,CACIN,kBAAJ,EAA0C,CAAA,CAA1C,GAAyBE,YAAzB,EACE,GAAIN,QAASL,CAAAA,OAAb,EAAsB,CAAA,CAAtB,CAA6B,8DAA7B,CAEF,EAAIW,YAAJ,EAAoBF,iBAApB;AACE,GAAIJ,QAASL,CAAAA,OAAb,EAAsB,GAAIM,UAAWU,CAAAA,OAAf,EAAwBb,KAAxB,CAA+Bc,CAAAA,KAA/B,CAAqC,QAAS,CAACC,GAAD,CAAM,CACxE,MAAOA,IAAP,EAA6C,QAA7C,GAAc,GAAId,QAASJ,CAAAA,OAAb,EAAsBkB,GAAtB,CAAd,EAAyD,OAAzD,EAAoEA,IADI,CAApD,CAAtB,CAEI,iKAFJ,CAIET,kBAAJ,EAAyBG,QAAzB,EAAqCF,aAArC,CACE,GAAIL,QAASL,CAAAA,OAAb,EAAsB,CAACG,KAAvB,EAAgCgB,KAAMC,CAAAA,OAAN,CAAcjB,KAAd,CAAhC,CAAsD,wEAAtD,CADF,CAGE,GAAIE,QAASL,CAAAA,OAAb,EAAsB,CAACmB,KAAMC,CAAAA,OAAN,CAAcjB,KAAd,CAAvB;AAA6C,+DAA7C,CAEEW,SAAJ,GAAyC,UAAzC,GAAiBD,mBAAjB,EAAuD,CAACJ,iBAAxD,EAAqG,aAArG,GAA6EI,mBAA7E,GACE,GAAIR,QAASL,CAAAA,OAAb,EAAsB,CAAA,CAAtB,CAA6B,yIAA7B,CAxByB,CAX6F;",
"sources":["node_modules/rc-tree-select/lib/utils/warningPropsUtil.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rc_tree_select$lib$utils$warningPropsUtil\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _warning = _interopRequireDefault(require(\"rc-util/lib/warning\"));\nvar _valueUtil = require(\"./valueUtil\");\nfunction warningProps(props) {\n  var searchPlaceholder = props.searchPlaceholder,\n    treeCheckStrictly = props.treeCheckStrictly,\n    treeCheckable = props.treeCheckable,\n    labelInValue = props.labelInValue,\n    value = props.value,\n    multiple = props.multiple,\n    showCheckedStrategy = props.showCheckedStrategy,\n    maxCount = props.maxCount;\n  (0, _warning.default)(!searchPlaceholder, '`searchPlaceholder` has been removed.');\n  if (treeCheckStrictly && labelInValue === false) {\n    (0, _warning.default)(false, '`treeCheckStrictly` will force set `labelInValue` to `true`.');\n  }\n  if (labelInValue || treeCheckStrictly) {\n    (0, _warning.default)((0, _valueUtil.toArray)(value).every(function (val) {\n      return val && (0, _typeof2.default)(val) === 'object' && 'value' in val;\n    }), 'Invalid prop `value` supplied to `TreeSelect`. You should use { label: string, value: string | number } or [{ label: string, value: string | number }] instead.');\n  }\n  if (treeCheckStrictly || multiple || treeCheckable) {\n    (0, _warning.default)(!value || Array.isArray(value), '`value` should be an array when `TreeSelect` is checkable or multiple.');\n  } else {\n    (0, _warning.default)(!Array.isArray(value), '`value` should not be array when `TreeSelect` is single mode.');\n  }\n  if (maxCount && (showCheckedStrategy === 'SHOW_ALL' && !treeCheckStrictly || showCheckedStrategy === 'SHOW_PARENT')) {\n    (0, _warning.default)(false, '`maxCount` not work with `showCheckedStrategy=SHOW_ALL` (when `treeCheckStrictly=false`) or `showCheckedStrategy=SHOW_PARENT`.');\n  }\n}\nvar _default = exports.default = warningProps;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","default","Object","defineProperty","value","_typeof2","_warning","_valueUtil","warningProps","props","treeCheckStrictly","treeCheckable","labelInValue","multiple","showCheckedStrategy","maxCount","searchPlaceholder","toArray","every","val","Array","isArray"]
}
