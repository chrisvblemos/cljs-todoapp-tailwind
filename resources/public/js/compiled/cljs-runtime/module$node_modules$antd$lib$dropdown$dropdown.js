shadow$provide.module$node_modules$antd$lib$dropdown$dropdown=function(global,require,module,exports){"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var React=module(require("module$node_modules$react$index")),_RightOutlined=global(require("module$node_modules$$ant_design$icons$RightOutlined")),
_classnames=global(require("module$node_modules$classnames$index")),_rcDropdown=global(require("module$node_modules$rc_dropdown$lib$index")),_useEvent=global(require("module$node_modules$rc_util$lib$hooks$useEvent")),_useMergedState=global(require("module$node_modules$rc_util$lib$hooks$useMergedState")),_omit=global(require("module$node_modules$rc_util$lib$omit")),_useZIndex=require("module$node_modules$antd$lib$_util$hooks$useZIndex"),_isPrimitive=global(require("module$node_modules$antd$lib$_util$isPrimitive")),
_placements=global(require("module$node_modules$antd$lib$_util$placements"));module=global(require("module$node_modules$antd$lib$_util$PurePanel"));var _reactNode=require("module$node_modules$antd$lib$_util$reactNode"),_warning=require("module$node_modules$antd$lib$_util$warning"),_zindexContext=global(require("module$node_modules$antd$lib$_util$zindexContext")),_configProvider=require("module$node_modules$antd$lib$config_provider$index"),_useCSSVarCls=global(require("module$node_modules$antd$lib$config_provider$hooks$useCSSVarCls")),
_menu=global(require("module$node_modules$antd$lib$menu$index")),_OverrideContext=require("module$node_modules$antd$lib$menu$OverrideContext"),_internal=require("module$node_modules$antd$lib$theme$internal"),_style=global(require("module$node_modules$antd$lib$dropdown$style$index"));require=props=>{var _a;const {menu,arrow,prefixCls:customizePrefixCls,children,trigger,disabled,dropdownRender,getPopupContainer,overlayClassName,rootClassName,overlayStyle,open,onOpenChange,visible,onVisibleChange,mouseEnterDelay=
.15,mouseLeaveDelay=.1,autoAdjustOverflow=!0,placement="",overlay,transitionName}=props,{getPopupContainer:getContextPopupContainer,getPrefixCls,direction,dropdown}=React.useContext(_configProvider.ConfigContext),warning=(0,_warning.devUseWarning)("Dropdown");[["visible","open"],["onVisibleChange","onOpenChange"]].forEach(_ref=>{let [deprecatedName,newName]=_ref;warning.deprecated(!(deprecatedName in props),deprecatedName,newName)});warning.deprecated(!("overlay"in props),"overlay","menu");var memoTransitionName=
React.useMemo(()=>{const rootPrefixCls=getPrefixCls();return void 0!==transitionName?transitionName:placement.includes("top")?`${rootPrefixCls}-slide-down`:`${rootPrefixCls}-slide-up`},[getPrefixCls,placement,transitionName]);const memoPlacement=React.useMemo(()=>placement?placement.includes("Center")?placement.slice(0,placement.indexOf("Center")):placement:"rtl"===direction?"bottomRight":"bottomLeft",[placement,direction]);if(placement.includes("Center")){var newPlacement=placement.slice(0,placement.indexOf("Center"));
warning(!placement.includes("Center"),"deprecated",`You are using '${placement}' placement in Dropdown, which is deprecated. Try to use '${newPlacement}' instead.`)}[["visible","open"],["onVisibleChange","onOpenChange"]].forEach(_ref2=>{let [deprecatedName,newName]=_ref2;warning.deprecated(!(deprecatedName in props),deprecatedName,newName)});const prefixCls=getPrefixCls("dropdown",customizePrefixCls),rootCls=(0,_useCSSVarCls.default)(prefixCls),[wrapCSSVar,hashId,cssVarCls]=(0,_style.default)(prefixCls,
rootCls);[,newPlacement]=(0,_internal.useToken)();var child=React.Children.only((0,_isPrimitive.default)(children)?React.createElement("span",null,children):children);child=(0,_reactNode.cloneElement)(child,{className:(0,_classnames.default)(`${prefixCls}-trigger`,{[`${prefixCls}-rtl`]:"rtl"===direction},child.props.className),disabled:null!==(_a=child.props.disabled)&&void 0!==_a?_a:disabled});_a=disabled?[]:trigger;const alignPoint=!(null===_a||void 0===_a||!_a.includes("contextMenu")),[mergedOpen,
setOpen]=(0,_useMergedState.default)(!1,{value:null!==open&&void 0!==open?open:visible}),onInnerOpenChange=(0,_useEvent.default)(nextOpen=>{null===onOpenChange||void 0===onOpenChange?void 0:onOpenChange(nextOpen,{source:"trigger"});null===onVisibleChange||void 0===onVisibleChange?void 0:onVisibleChange(nextOpen);setOpen(nextOpen)}),overlayClassNameCustomized=(0,_classnames.default)(overlayClassName,rootClassName,hashId,cssVarCls,rootCls,null===dropdown||void 0===dropdown?void 0:dropdown.className,
{[`${prefixCls}-rtl`]:"rtl"===direction});newPlacement=(0,_placements.default)({arrowPointAtCenter:"object"===typeof arrow&&arrow.pointAtCenter,autoAdjustOverflow,offset:newPlacement.marginXXS,arrowWidth:arrow?newPlacement.sizePopupArrow:0,borderRadius:newPlacement.borderRadius});const onMenuClick=React.useCallback(()=>{(null===menu||void 0===menu?0:menu.selectable)&&(null===menu||void 0===menu?0:menu.multiple)||(null===onOpenChange||void 0===onOpenChange?void 0:onOpenChange(!1,{source:"menu"}),setOpen(!1))},
[null===menu||void 0===menu?void 0:menu.selectable,null===menu||void 0===menu?void 0:menu.multiple]),[zIndex,contextZIndex]=(0,_useZIndex.useZIndex)("Dropdown",null===overlayStyle||void 0===overlayStyle?void 0:overlayStyle.zIndex);memoTransitionName=React.createElement(_rcDropdown.default,Object.assign({alignPoint},(0,_omit.default)(props,["rootClassName"]),{mouseEnterDelay,mouseLeaveDelay,visible:mergedOpen,builtinPlacements:newPlacement,arrow:!!arrow,overlayClassName:overlayClassNameCustomized,
prefixCls,getPopupContainer:getPopupContainer||getContextPopupContainer,transitionName:memoTransitionName,trigger:_a,overlay:()=>{let overlayNode;overlayNode=(null===menu||void 0===menu?0:menu.items)?React.createElement(_menu.default,Object.assign({},menu)):"function"===typeof overlay?overlay():overlay;dropdownRender&&(overlayNode=dropdownRender(overlayNode));overlayNode=React.Children.only("string"===typeof overlayNode?React.createElement("span",null,overlayNode):overlayNode);return React.createElement(_OverrideContext.OverrideProvider,
{prefixCls:`${prefixCls}-menu`,rootClassName:(0,_classnames.default)(cssVarCls,rootCls),expandIcon:React.createElement("span",{className:`${prefixCls}-menu-submenu-arrow`},React.createElement(_RightOutlined.default,{className:`${prefixCls}-menu-submenu-arrow-icon`})),mode:"vertical",selectable:!1,onClick:onMenuClick,validator:_ref3=>{({mode:_ref3}=_ref3);warning(!_ref3||"vertical"===_ref3,"usage",`mode="${_ref3}" is not supported for Dropdown's Menu.`)}},overlayNode)},placement:memoPlacement,onVisibleChange:onInnerOpenChange,
overlayStyle:Object.assign(Object.assign(Object.assign({},null===dropdown||void 0===dropdown?void 0:dropdown.style),overlayStyle),{zIndex})}),child);zIndex&&(memoTransitionName=React.createElement(_zindexContext.default.Provider,{value:contextZIndex},memoTransitionName));return wrapCSSVar(memoTransitionName)};const PurePanel=(0,module.default)(require,"align",void 0,"dropdown",prefixCls=>prefixCls);require._InternalPanelDoNotUseOrYouWillBeFired=props=>React.createElement(PurePanel,Object.assign({},
props),React.createElement("span",null));require.displayName="Dropdown";exports.default=require}
//# sourceMappingURL=module$node_modules$antd$lib$dropdown$dropdown.js.map
