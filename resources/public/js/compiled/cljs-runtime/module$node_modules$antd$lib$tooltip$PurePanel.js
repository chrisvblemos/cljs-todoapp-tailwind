shadow$provide.module$node_modules$antd$lib$tooltip$PurePanel=function(global,require,module,exports){"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var React=module(require("module$node_modules$react$index")),_classnames=global(require("module$node_modules$classnames$index")),
_rcTooltip=require("module$node_modules$rc_tooltip$lib$index"),_configProvider=require("module$node_modules$antd$lib$config_provider$index"),_style=global(require("module$node_modules$antd$lib$tooltip$style$index")),_util=require("module$node_modules$antd$lib$tooltip$util");exports.default=props=>{const {prefixCls:customizePrefixCls,className,placement="top",title,color,overlayInnerStyle}=props;var {getPrefixCls}=React.useContext(_configProvider.ConfigContext);getPrefixCls=getPrefixCls("tooltip",
customizePrefixCls);const [wrapCSSVar,hashId,cssVarCls]=(0,_style.default)(getPrefixCls);var colorInfo=(0,_util.parseColor)(getPrefixCls,color);const arrowContentStyle=colorInfo.arrowStyle,formattedOverlayInnerStyle=Object.assign(Object.assign({},overlayInnerStyle),colorInfo.overlayStyle);colorInfo=(0,_classnames.default)(hashId,cssVarCls,getPrefixCls,`${getPrefixCls}-pure`,`${getPrefixCls}-placement-${placement}`,className,colorInfo.className);return wrapCSSVar(React.createElement("div",{className:colorInfo,
style:arrowContentStyle},React.createElement("div",{className:`${getPrefixCls}-arrow`}),React.createElement(_rcTooltip.Popup,Object.assign({},props,{className:hashId,prefixCls:getPrefixCls,overlayInnerStyle:formattedOverlayInnerStyle}),title)))}}
//# sourceMappingURL=module$node_modules$antd$lib$tooltip$PurePanel.js.map
