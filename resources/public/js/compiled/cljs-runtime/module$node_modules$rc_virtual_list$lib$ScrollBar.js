shadow$provide.module$node_modules$rc_virtual_list$lib$ScrollBar=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _objectSpread2=module(require("module$node_modules$$babel$runtime$helpers$objectSpread2")),_defineProperty2=module(require("module$node_modules$$babel$runtime$helpers$defineProperty")),
_slicedToArray2=module(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),_classnames=module(require("module$node_modules$classnames$index")),_raf=module(require("module$node_modules$rc_util$lib$raf")),React=global(require("module$node_modules$react$index")),_useScrollDrag=require("module$node_modules$rc_virtual_list$lib$hooks$useScrollDrag");require=React.forwardRef(function(props,ref){var prefixCls=props.prefixCls,rtl=props.rtl,scrollOffset=props.scrollOffset,scrollRange=props.scrollRange,
onStartMove=props.onStartMove,onStopMove=props.onStopMove,onScroll=props.onScroll,horizontal=props.horizontal,spinSize=props.spinSize,containerSize=props.containerSize,style=props.style,propsThumbStyle=props.thumbStyle,showScrollBar=props.showScrollBar;props=React.useState(!1);props=(0,_slicedToArray2.default)(props,2);var dragging=props[0],setDragging=props[1];props=React.useState(null);var _React$useState4=(0,_slicedToArray2.default)(props,2);props=_React$useState4[0];var setPageXY=_React$useState4[1];
_React$useState4=React.useState(null);var _React$useState6=(0,_slicedToArray2.default)(_React$useState4,2);_React$useState4=_React$useState6[0];var setStartTop=_React$useState6[1],isLTR=!rtl,scrollbarRef=React.useRef(),thumbRef=React.useRef();rtl=React.useState(showScrollBar);_React$useState6=(0,_slicedToArray2.default)(rtl,2);rtl=_React$useState6[0];var setVisible=_React$useState6[1],visibleTimeoutRef=React.useRef(),delayHidden=function(){!0!==showScrollBar&&!1!==showScrollBar&&(clearTimeout(visibleTimeoutRef.current),
setVisible(!0),visibleTimeoutRef.current=setTimeout(function(){setVisible(!1)},3E3))},enableScrollRange=scrollRange-containerSize||0,enableOffsetRange=containerSize-spinSize||0;scrollRange=React.useMemo(function(){return 0===scrollOffset||0===enableScrollRange?0:scrollOffset/enableScrollRange*enableOffsetRange},[scrollOffset,enableScrollRange,enableOffsetRange]);var stateRef=React.useRef({top:scrollRange,dragging,pageY:props,startTop:_React$useState4});stateRef.current={top:scrollRange,dragging,pageY:props,
startTop:_React$useState4};var onThumbMouseDown=function(e){setDragging(!0);setPageXY((0,_useScrollDrag.getPageXY)(e,horizontal));setStartTop(stateRef.current.top);onStartMove();e.stopPropagation();e.preventDefault()};React.useEffect(function(){var onScrollbarTouchStart=function(e){e.preventDefault()},scrollbarEle=scrollbarRef.current,thumbEle=thumbRef.current;scrollbarEle.addEventListener("touchstart",onScrollbarTouchStart,{passive:!1});thumbEle.addEventListener("touchstart",onThumbMouseDown,{passive:!1});
return function(){scrollbarEle.removeEventListener("touchstart",onScrollbarTouchStart);thumbEle.removeEventListener("touchstart",onThumbMouseDown)}},[]);var enableScrollRangeRef=React.useRef();enableScrollRangeRef.current=enableScrollRange;var enableOffsetRangeRef=React.useRef();enableOffsetRangeRef.current=enableOffsetRange;React.useEffect(function(){if(dragging){var moveRafId,onMouseMove=function(e){var _stateRef$current=stateRef.current,stateDragging=_stateRef$current.dragging,statePageY=_stateRef$current.pageY;
_stateRef$current=_stateRef$current.startTop;_raf.default.cancel(moveRafId);var rect=scrollbarRef.current.getBoundingClientRect();rect=containerSize/(horizontal?rect.width:rect.height);if(stateDragging){stateDragging=((0,_useScrollDrag.getPageXY)(e,horizontal)-statePageY)*rect;e=_stateRef$current;e=!isLTR&&horizontal?e-stateDragging:e+stateDragging;stateDragging=enableScrollRangeRef.current;statePageY=enableOffsetRangeRef.current;var newScrollTop=Math.ceil((statePageY?e/statePageY:0)*stateDragging);
newScrollTop=Math.max(newScrollTop,0);newScrollTop=Math.min(newScrollTop,stateDragging);moveRafId=(0,_raf.default)(function(){onScroll(newScrollTop,horizontal)})}},onMouseUp=function(){setDragging(!1);onStopMove()};window.addEventListener("mousemove",onMouseMove,{passive:!0});window.addEventListener("touchmove",onMouseMove,{passive:!0});window.addEventListener("mouseup",onMouseUp,{passive:!0});window.addEventListener("touchend",onMouseUp,{passive:!0});return function(){window.removeEventListener("mousemove",
onMouseMove);window.removeEventListener("touchmove",onMouseMove);window.removeEventListener("mouseup",onMouseUp);window.removeEventListener("touchend",onMouseUp);_raf.default.cancel(moveRafId)}}},[dragging]);React.useEffect(function(){delayHidden();return function(){clearTimeout(visibleTimeoutRef.current)}},[scrollOffset]);React.useImperativeHandle(ref,function(){return{delayHidden}});ref="".concat(prefixCls,"-scrollbar");prefixCls={position:"absolute",visibility:rtl?null:"hidden"};props={position:"absolute",
background:"rgba(0, 0, 0, 0.5)",borderRadius:99,cursor:"pointer",userSelect:"none"};horizontal?(prefixCls.height=8,prefixCls.left=0,prefixCls.right=0,prefixCls.bottom=0,props.height="100%",props.width=spinSize,isLTR?props.left=scrollRange:props.right=scrollRange):(prefixCls.width=8,prefixCls.top=0,prefixCls.bottom=0,isLTR?prefixCls.right=0:prefixCls.left=0,props.width="100%",props.height=spinSize,props.top=scrollRange);return React.createElement("div",{ref:scrollbarRef,className:(0,_classnames.default)(ref,
(0,_defineProperty2.default)((0,_defineProperty2.default)((0,_defineProperty2.default)({},"".concat(ref,"-horizontal"),horizontal),"".concat(ref,"-vertical"),!horizontal),"".concat(ref,"-visible"),rtl)),style:(0,_objectSpread2.default)((0,_objectSpread2.default)({},prefixCls),style),onMouseDown:function(e){e.stopPropagation();e.preventDefault()},onMouseMove:delayHidden},React.createElement("div",{ref:thumbRef,className:(0,_classnames.default)("".concat(ref,"-thumb"),(0,_defineProperty2.default)({},
"".concat(ref,"-thumb-moving"),dragging)),style:(0,_objectSpread2.default)((0,_objectSpread2.default)({},props),propsThumbStyle),onMouseDown:onThumbMouseDown}))});require.displayName="ScrollBar";exports.default=require}
//# sourceMappingURL=module$node_modules$rc_virtual_list$lib$ScrollBar.js.map
