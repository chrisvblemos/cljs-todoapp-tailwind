shadow$provide.module$node_modules$rc_image$lib$hooks$useTouchEvent=function(global,require,module,exports){function getDistance(a,b){return Math.hypot(a.x-b.x,a.y-b.y)}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=function(imgRef,movable,visible,minScale,transform,updateTransform,dispatchZoomChange){var rotate=transform.rotate,scale=transform.scale,x=transform.x,y=transform.y;transform=(0,_react.useState)(!1);
transform=(0,_slicedToArray2.default)(transform,2);var isTouching=transform[0],setIsTouching=transform[1],touchPointInfo=(0,_react.useRef)({point1:{x:0,y:0},point2:{x:0,y:0},eventType:"none"}),updateTouchPointInfo=function(values){touchPointInfo.current=(0,_objectSpread2.default)((0,_objectSpread2.default)({},touchPointInfo.current),values)};(0,_react.useEffect)(function(){var onTouchMoveListener;visible&&movable&&(onTouchMoveListener=(0,_addEventListener.default)(window,"touchmove",function(e){return e.preventDefault()},
{passive:!1}));return function(){var _onTouchMoveListener;null===(_onTouchMoveListener=onTouchMoveListener)||void 0===_onTouchMoveListener||_onTouchMoveListener.remove()}},[visible,movable]);return{isTouching,onTouchStart:function(event){movable&&(event.stopPropagation(),setIsTouching(!0),event=event.touches,event=void 0===event?[]:event,1<event.length?updateTouchPointInfo({point1:{x:event[0].clientX,y:event[0].clientY},point2:{x:event[1].clientX,y:event[1].clientY},eventType:"touchZoom"}):updateTouchPointInfo({point1:{x:event[0].clientX-
x,y:event[0].clientY-y},eventType:"move"}))},onTouchMove:function(event){event=event.touches;var touches=void 0===event?[]:event,_touchPointInfo$curre=touchPointInfo.current;event=_touchPointInfo$curre.point1;var point2=_touchPointInfo$curre.point2;_touchPointInfo$curre=_touchPointInfo$curre.eventType;if(1<touches.length&&"touchZoom"===_touchPointInfo$curre){_touchPointInfo$curre={x:touches[0].clientX,y:touches[0].clientY};touches={x:touches[1].clientX,y:touches[1].clientY};var _getCenter=getDistance(event,
_touchPointInfo$curre);var distance2=getDistance(point2,touches);0===_getCenter&&0===distance2?_getCenter=[event.x,event.y]:(_getCenter/=_getCenter+distance2,_getCenter=[event.x+_getCenter*(point2.x-event.x),event.y+_getCenter*(point2.y-event.y)]);distance2=(0,_slicedToArray2.default)(_getCenter,2);_getCenter=distance2[0];distance2=distance2[1];event=getDistance(_touchPointInfo$curre,touches)/getDistance(event,point2);dispatchZoomChange(event,"touchZoom",_getCenter,distance2,!0);updateTouchPointInfo({point1:_touchPointInfo$curre,
point2:touches,eventType:"touchZoom"})}else"move"===_touchPointInfo$curre&&(updateTransform({x:touches[0].clientX-event.x,y:touches[0].clientY-event.y},"move"),updateTouchPointInfo({eventType:"move"}))},onTouchEnd:function(){if(visible){isTouching&&setIsTouching(!1);updateTouchPointInfo({eventType:"none"});if(minScale>scale)return updateTransform({x:0,y:0,scale:minScale},"touchZoom");var width=imgRef.current.offsetWidth*scale,height=imgRef.current.offsetHeight*scale,_imgRef$current$getBo=imgRef.current.getBoundingClientRect(),
isRotate=0!==rotate%180;(width=(0,_getFixScaleEleTransPosition.default)(isRotate?height:width,isRotate?width:height,_imgRef$current$getBo.left,_imgRef$current$getBo.top))&&updateTransform((0,_objectSpread2.default)({},width),"dragRebound")}}}};var _objectSpread2=global(require("module$node_modules$$babel$runtime$helpers$objectSpread2")),_slicedToArray2=global(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),_addEventListener=global(require("module$node_modules$rc_util$lib$Dom$addEventListener")),
_react=require("module$node_modules$react$index"),_getFixScaleEleTransPosition=global(require("module$node_modules$rc_image$lib$getFixScaleEleTransPosition"))}
//# sourceMappingURL=module$node_modules$rc_image$lib$hooks$useTouchEvent.js.map
