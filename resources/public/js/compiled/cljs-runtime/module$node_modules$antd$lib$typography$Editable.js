shadow$provide.module$node_modules$antd$lib$typography$Editable=function(global,require,module,exports){"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var React=module(require("module$node_modules$react$index")),_EnterOutlined=global(require("module$node_modules$$ant_design$icons$EnterOutlined")),
_classnames=global(require("module$node_modules$classnames$index")),_KeyCode=global(require("module$node_modules$rc_util$lib$KeyCode")),_reactNode=require("module$node_modules$antd$lib$_util$reactNode"),_TextArea=global(require("module$node_modules$antd$lib$input$TextArea")),_style=global(require("module$node_modules$antd$lib$typography$style$index"));exports.default=props=>{const {prefixCls,"aria-label":ariaLabel,className,style,direction,maxLength,autoSize=!0,value,onSave,onCancel,onEnd,component,
enterIcon=React.createElement(_EnterOutlined.default,null)}=props,ref=React.useRef(null),inComposition=React.useRef(!1),lastKeyCode=React.useRef(null),[current,setCurrent]=React.useState(value);React.useEffect(()=>{setCurrent(value)},[value]);React.useEffect(()=>{var _a;if(null===(_a=ref.current)||void 0===_a?0:_a.resizableTextArea){({textArea:_a}=ref.current.resizableTextArea);_a.focus();const {length}=_a.value;_a.setSelectionRange(length,length)}},[]);const [wrapCSSVar,hashId,cssVarCls]=(0,_style.default)(prefixCls);
props=(0,_classnames.default)(prefixCls,`${prefixCls}-edit-content`,{[`${prefixCls}-rtl`]:"rtl"===direction,[`${prefixCls}-${component}`]:!!component},className,hashId,cssVarCls);return wrapCSSVar(React.createElement("div",{className:props,style},React.createElement(_TextArea.default,{ref,maxLength,value:current,onChange:_ref=>{({target:_ref}=_ref);setCurrent(_ref.value.replace(/[\n\r]/g,""))},onKeyDown:_ref2=>{({keyCode:_ref2}=_ref2);inComposition.current||(lastKeyCode.current=_ref2)},onKeyUp:_ref3=>
{let {keyCode,ctrlKey,altKey,metaKey,shiftKey}=_ref3;lastKeyCode.current!==keyCode||inComposition.current||ctrlKey||altKey||metaKey||shiftKey||(keyCode===_KeyCode.default.ENTER?(onSave(current.trim()),null===onEnd||void 0===onEnd?void 0:onEnd()):keyCode===_KeyCode.default.ESC&&onCancel())},onCompositionStart:()=>{inComposition.current=!0},onCompositionEnd:()=>{inComposition.current=!1},onBlur:()=>{onSave(current.trim())},"aria-label":ariaLabel,rows:1,autoSize}),null!==enterIcon?(0,_reactNode.cloneElement)(enterIcon,
{className:`${prefixCls}-edit-content-confirm`}):null))}}
//# sourceMappingURL=module$node_modules$antd$lib$typography$Editable.js.map
