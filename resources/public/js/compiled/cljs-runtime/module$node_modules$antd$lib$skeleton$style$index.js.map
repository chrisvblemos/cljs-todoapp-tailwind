{
"version":3,
"file":"module$node_modules$antd$lib$skeleton$style$index.js",
"lineCount":26,
"mappings":"AAAAA,cAAA,CAAA,iDAAA,CAAsE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG9GC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,qBAAR,CAAgCJ,OAAQK,CAAAA,OAAxC,CAAkD,IAAK,EACvD,KAAIC,SAAWR,OAAA,CAAQ,mDAAR,CAAf,CACIS,UAAYT,OAAA,CAAQ,6CAAR,CAChB,OAAMU,mBAAqB,IAAIF,QAASG,CAAAA,SAAb,CAAwB,sBAAxB,CAA+C,CACxE,KAAM,CACJC,mBAAoB,UADhB,CADkE,CAIxE,OAAQ,CACNA,mBAAoB,OADd,CAJgE,CAA/C,CAA3B,CAQMC;AAA+BC,IAAAD,EAAS,EAC5CE,OAAQD,IADoC,CAE5CE,WAAY,GAAIR,QAASS,CAAAA,IAAb,EAAmBH,IAAnB,CAFgC,EAR9C,CAYMI,6BAA+BJ,IAAAI,EAAQf,MAAOgB,CAAAA,MAAP,CAAc,CACzDC,MAAON,IADkD,CAAd,CAE1CD,4BAAA,CAA6BC,IAA7B,CAF0C,CAZ7C,CAuBMO,4BAA8B,CAACP,IAAD,CAAOQ,IAAP,CAAAD,EAAgBlB,MAAOgB,CAAAA,MAAP,CAAc,CAChEC,MAAOE,IAAA,CAAKR,IAAL,CAAWS,CAAAA,GAAX,CAAe,CAAf,CAAkBC,CAAAA,KAAlB,EADyD,CAEhEC,SAAUH,IAAA,CAAKR,IAAL,CAAWS,CAAAA,GAAX,CAAe,CAAf,CAAkBC,CAAAA,KAAlB,EAFsD,CAAd,CAGjDX,4BAAA,CAA6BC,IAA7B,CAHiD,CAvBpD,CAyGMY,8BAAgC,CAACC,KAAD,CAAQb,IAAR,CAAcc,SAAd,CAAAF,EAA4B,CAChE,CAAM,CACJ,kBAAAG,KADI,CAAN,CAEIF,KAFJ,CAGA,OAAO,CACL,CAAE,GAAEC,SAAF,GAAcC,KAAd,SAAF,EAA6C,CAC3CT,MAAON,IADoC,CAE3CW,SAAUX,IAFiC,CAG3CgB,aAAc,KAH6B,CADxC,CAML,CAAE,GAAEF,SAAF,GAAcC,KAAd,QAAF,EAA4C,CAC1CC,aAAchB,IAD4B,CANvC,CAJyD,CAzGlE;AAwHMiB,6BAA+B,CAACjB,IAAD,CAAOQ,IAAP,CAAAS,EAAgB5B,MAAOgB,CAAAA,MAAP,CAAc,CACjEC,MAAOE,IAAA,CAAKR,IAAL,CAAWS,CAAAA,GAAX,CAAe,CAAf,CAAkBC,CAAAA,KAAlB,EAD0D,CAEjEC,SAAUH,IAAA,CAAKR,IAAL,CAAWS,CAAAA,GAAX,CAAe,CAAf,CAAkBC,CAAAA,KAAlB,EAFuD,CAAd,CAGlDX,4BAAA,CAA6BC,IAA7B,CAHkD,CAoJ/CR,OAAAA,CAAwBqB,KAAArB,EAAS,CACrC,MAAM,CACJ0B,gBADI,CAEJC,SAFI,CAAA,CAGFN,KAGJ,OAAO,CACLO,MAHwBF,gBAEnB,CAELG,iBAHsBF,SACjB,CAGLG,kBALwBJ,gBAEnB,CAILK,gBALsBJ,SACjB,CAKLK,YAAaX,KAAMY,CAAAA,aAAnBD,CAAmC,CAL9B,CAMLE,YAAab,KAAMc,CAAAA,cANd,CAOLC,mBAAoBf,KAAMgB,CAAAA,QAA1BD,CAAqCf,KAAMiB,CAAAA,SAPtC,CAQLC,kBAAmBlB,KAAMY,CAAAA,aAAzBM,CAAyC,CARpC,CAP8B,CAkBvC3C,QAAQI,CAAAA,qBAAR;AAAgCA,MACjBJ,QAAQK,CAAAA,OAAR,CAAkB,GAAIE,SAAUqC,CAAAA,aAAd,EAA6B,UAA7B,CAAyCnB,KAAA,EAAS,CACjF,MAAM,CACJoB,YADI,CAEJzB,IAFI,CAAA,CAGFK,KACEqB,MAAAA,CAAgB,GAAIvC,SAAUwC,CAAAA,UAAd,EAA0BtB,KAA1B,CAAiC,CACrDuB,kBAAoB,GAAEH,YAAF,SADiC,CAErDI,iBAAmB,GAAEJ,YAAF,QAFkC,CAGrDK,qBAAuB,GAAEL,YAAF,YAH8B,CAIrDlB,kBAAoB,GAAEkB,YAAF,SAJiC,CAKrDM,iBAAmB,GAAEN,YAAF,QALkC,CAMrDO,iBAAmB,GAAEP,YAAF,QANkC,CAOrDQ,cAAejC,IAAA,CAAKK,KAAMY,CAAAA,aAAX,CAA0BhB,CAAAA,GAA1B,CAA8B,GAA9B,CAAmCC,CAAAA,KAAnC,EAPsC,CAQrDM,aAAc,GARuC,CAUrD0B,0BAA4B,0BAAyB7B,KAAMS,CAAAA,iBAA/B,SAAyDT,KAAMU,CAAAA,eAA/D,SAAuFV,KAAMS,CAAAA,iBAA7F,OAVyB;AAWrDqB,8BAA+B,MAXsB,CAAjC,CA7ItB,OAAM,CACJ,aAAAV,qBADI,CAEJG,iBAFI,CAGJC,gBAHI,CAIJC,oBAJI,CAKJvB,iBALI,CAMJwB,gBANI,CAOJC,gBAPI,CAQJf,aARI,CASJmB,eATI,CAUJC,eAVI,CAWJvB,iBAXI,CAYJwB,OAZI,CAaJC,QAbI,CAcJ/B,YAdI,CAeJQ,WAfI,CAgBJE,WAhBI,CAiBJK,iBAjBI,CAkBJiB,eAlBI,CAmBJpB,kBAnBI,CAAA,CA0JeM,KApIH,KAAA,sBAAA,CACde,QAAS,OADK,CAEd3C,MAAO,MAFO,CAGd,CAAE,GAAE2B,qBAAF,SAAF,EAA4B,CAC1BgB,QAAS,YADiB,CAE1BC,iBAAkBJ,OAFQ;AAG1BK,cAAe,KAHW,CAK1B,CAACf,iBAAD,EAAqB/C,MAAOgB,CAAAA,MAAP,CAAc,CACjC4C,QAAS,cADwB,CAEjCE,cAAe,KAFkB,CAGjCC,WAAY9B,iBAHqB,CAAd,CAIlBlB,4BAAA,CAA6BqB,aAA7B,CAJkB,CALK,CAU1B,CAAE,GAAEW,iBAAF,SAAF,EAAiC,CAC/BpB,aAAc,KADiB,CAVP,CAa1B,CAAE,GAAEoB,iBAAF,KAAF,EAA6B/C,MAAOgB,CAAAA,MAAP,CAAc,EAAd,CAAkBD,4BAAA,CAA6BwC,eAA7B,CAAlB,CAbH,CAc1B,CAAE,GAAER,iBAAF,KAAF,EAA6B/C,MAAOgB,CAAAA,MAAP,CAAc,EAAd,CAAkBD,4BAAA,CAA6ByC,eAA7B,CAAlB,CAdH,CAHd,CAmBd,CAAE,GAAEZ,qBAAF,UAAF,EAA6B,CAC3BgB,QAAS,YADkB,CAE3B3C,MAAO,MAFoB,CAG3B6C,cAAe,KAHY;AAK3B,CAACd,gBAAD,EAAoB,CAClB/B,MAAO,MADW,CAElBL,OAAQuB,WAFU,CAGlB4B,WAAY9B,iBAHM,CAIlBN,aAAcU,WAJI,CAKlB,CAAE,KAAIY,oBAAJ,EAAF,EAA+B,CAC7Be,iBAAkBR,eADW,CALb,CALO,CAe3B,CAACP,oBAAD,EAAwB,CACtBQ,QAAS,CADa,CAEtB,UAAQ,CACNxC,MAAO,MADD,CAENL,OAAQ8B,iBAFF,CAGNuB,UAAW,MAHL,CAINF,WAAY9B,iBAJN,CAKNN,aAAcU,WALR,CAMN,OAAQ,CACN2B,iBAAkBL,eADZ,CANF,CAFc,CAfG,CA4B3B,CAAE,GAAEV,oBAAF,sDAAF,EAAiF,CAC/EhC,MAAO,KADwE,CA5BtD,CAnBf,CAmDd,CAAE,WAAU2B,qBAAV,UAAF,EAAqC,CACnC,CAAE,GAAEI,gBAAF,KAAuBC,oBAAvB,OAAF,EAAuD,CACrDtB,YADqD,CADpB,CAnDvB,CAAA;AAmE4B3B,+BAAAA,MAnE5B,CAmEmCgB,+BAAPhB,8BAAOgB,CAAAA,MAnEnC,CAmE0ChB,+BAAAA,MAnE1C,CAmEiDgB,+BAAPhB,8BAAOgB,CAAAA,MAnEjD,CAmEwDhB,+BAAAA,MAnExD,CAmE+DgB,+BAAPhB,8BAAOgB,CAAAA,MAnE/D,CAmEsEhB,+BAAAA,MAnEtE,CAmE6EgB,+BAAPhB,8BAAOgB,CAAAA,MAnH/F,OAAM,CACJsB,cADI,CAEJ,kBAAAZ,0BAFI,CAGJ,cAAAU,sBAHI;AAIJ,gBAAAmB,wBAJI,CAKJ,gBAAAC,wBALI,CAMJ,kBAAAvB,0BANI,CAOJ,KAAAd,aAPI,CAAA,CAoLe0B,KA3KrB,KAAA,yBAAO7C,MAAOgB,CAAAA,MAAP,CAAchB,MAAOgB,CAAAA,MAAP,CAAchB,MAAOgB,CAAAA,MAAP,CAAchB,MAAOgB,CAAAA,MAAP,CAAchB,MAAOgB,CAAAA,MAAP,CAAc,CAC3E,CAACU,0BAAD,EAAqB1B,MAAOgB,CAAAA,MAAP,CAAc,CACjC4C,QAAS,cADwB,CAEjCE,cAAe,KAFkB,CAGjCC,WAAY9B,0BAHqB,CAIjCN,aAAcW,cAJmB,CAKjCrB,MAAOE,aAAA,CAAKiB,sBAAL,CAAoBhB,CAAAA,GAApB,CAAwB,CAAxB,CAA2BC,CAAAA,KAA3B,EAL0B,CAMjCC,SAAUH,aAAA,CAAKiB,sBAAL,CAAoBhB,CAAAA,GAApB,CAAwB,CAAxB,CAA2BC,CAAAA,KAA3B,EANuB,CAAd;AAOlBO,4BAAA,CAA6BQ,sBAA7B,CAA4CjB,aAA5C,CAPkB,CADsD,CAAd,CAS5DI,6BAAA,CAkKkBsB,KAlKlB,CAAqCT,sBAArC,CAAoDV,0BAApD,CAT4D,CAAd,CAS2B,CAC1E,CAAE,GAAEA,0BAAF,KAAF,EAA6B1B,MAAOgB,CAAAA,MAAP,CAAc,EAAd,CAAkBY,4BAAA,CAA6B2B,wBAA7B,CAA8CpC,aAA9C,CAAlB,CAD6C,CAT3B,CAAd,CAW/BI,6BAAA,CAgKiBsB,KAhKjB,CAAqCU,wBAArC,CAAuD,GAAE7B,0BAAF,KAAvD,CAX+B,CAAd,CAWkE,CACrF,CAAE,GAAEA,0BAAF,KAAF,EAA6B1B,MAAOgB,CAAAA,MAAP,CAAc,EAAd,CAAkBY,4BAAA,CAA6B4B,wBAA7B,CAA8CrC,aAA9C,CAAlB,CADwD,CAXlE,CAAd;AAaHI,6BAAA,CA8JiBsB,KA9JjB,CAAqCW,wBAArC,CAAuD,GAAE9B,0BAAF,KAAvD,CAbG,CA0GiF,+BAAA,CAAOV,8BAAP,CAAA,IAAA,CAAAhB,8BAAA,CAAc,CAClG4D,QAAS,cADyF,CAElG3C,MAAO,MAF2F,CAAd,CAGnF,wBAHmF,CApNxF,OAAM,CACJ,kBAAA8B,0BADI,CAEJ,kBAAAd,0BAFI,CAGJ,cAAAG,sBAHI,CAIJ,gBAAAmB,wBAJI,CAKJ,gBAAAC,wBALI,CAAA,CAqReX,KA9QrB,+BAAA;AAAO,CACL,CAACE,0BAAD,EAAqB/C,MAAOgB,CAAAA,MAAP,CAAc,CACjC4C,QAAS,cADwB,CAEjCE,cAAe,KAFkB,CAGjCC,WAAY9B,0BAHqB,CAAd,CAIlBlB,4BAAA,CAA6BqB,sBAA7B,CAJkB,CADhB,CAML,CAAE,GAAEW,0BAAF,GAAsBA,0BAAtB,SAAF,EAAqD,CACnDpB,aAAc,KADqC,CANhD,CASL,CAAE,GAAEoB,0BAAF,GAAsBA,0BAAtB,KAAF,EAAiD/C,MAAOgB,CAAAA,MAAP,CAAc,EAAd,CAAkBD,4BAAA,CAA6BwC,wBAA7B,CAAlB,CAT5C,CAUL,CAAE,GAAER,0BAAF,GAAsBA,0BAAtB,KAAF,EAAiD/C,MAAOgB,CAAAA,MAAP,CAAc,EAAd,CAAkBD,4BAAA,CAA6ByC,wBAA7B,CAAlB,CAV5C,CA6MmE;8BAAA,CAAOxC,8BAAP,CAAA,IAAA,CAAAhB,8BAAA,CAAc,8BAAd,CAGnC,8BAHmC,CA/L1E,OAAM,CACJ,cAAAoC,sBADI,CAEJ,eAAAE,uBAFI,CAGJ,iBAAAY,yBAHI,CAIJ,gBAAAK,wBAJI,CAKJ,gBAAAC,wBALI,CAMJ,kBAAAvB,0BANI,CAOJ,KAAAd,aAPI,CAAA,CAgQe0B,KAvPrB,+BAAA,CAAO,CACL,CAACK,yBAAD,EAAoBlD,MAAOgB,CAAAA,MAAP,CAAc,CAChC4C,QAAS,cADuB;AAEhCE,cAAe,KAFiB,CAGhCC,WAAY9B,0BAHoB,CAIhCN,aAAcW,uBAJkB,CAAd,CAKjBpB,2BAAA,CAA4BkB,sBAA5B,CAA2CjB,aAA3C,CALiB,CADf,CAOL,CAAE,GAAE+B,yBAAF,KAAF,EAA4BlD,MAAOgB,CAAAA,MAAP,CAAc,EAAd,CAAkBE,2BAAA,CAA4BqC,wBAA5B,CAA6CpC,aAA7C,CAAlB,CAPvB,CAQL,CAAE,GAAE+B,yBAAF,KAAF,EAA4BlD,MAAOgB,CAAAA,MAAP,CAAc,EAAd,CAAkBE,2BAAA,CAA4BsC,wBAA5B,CAA6CrC,aAA7C,CAAlB,CARvB,CAsLqD,+BAAA,CAAOH,8BAAP,CAAA,IAAA,CAAAhB,8BAAA;AAAc,8BAAd,CAGa,8BAHb,CAvK5D,OAAM,CACJ,iBAAAmD,yBADI,CAEJC,aAFI,CAGJ,kBAAAnB,0BAHI,CAIJ,eAAAK,uBAJI,CAKJ,KAAAnB,aALI,CAAA,CAwOe0B,KAhOC7C,+BAAAA,CAAAA,MAAOgB,+BAAAA,CAAPhB,8BAAOgB,CAAAA,MAAOhB,+BAAAA,CAAAA,MAAOgB,+BAAAA,CAAPhB,8BAAOgB,CAAAA,MAOV,+BAAA,CAAAG,aAAA,CAAKiC,aAAL,CAAoBhC,CAAAA,GAApB,CAAwB,CAAxB,CAA2BC,CAAAA,KAA3B,EAnBS;8BAAA,CAAArB,MAAOgB,CAAAA,MAAP,CAAc,CACxDC,MAAON,8BADiD,CAAd,CAEzCD,4BAAA,CAA6BC,8BAA7B,CAFyC,CAW1C,+BAAA,CAAO,CACL,CAACwC,yBAAD,EAA2BnC,8BAAP,CAAA,IAAA,CAAAhB,8BAAA,CAAqBgB,8BAAP,CAAA,IAAA,CAAAhB,8BAAA,CAAc,CAC9C4D,QAAS,aADqC,CAE9CM,WAAY,QAFkC,CAG9CC,eAAgB,QAH8B,CAI9CL,cAAe,QAJ+B,CAK9CC,WAAY9B,0BALkC,CAM9CN,aAAcW,uBANgC,CAAd;AAO/B,8BAP+B,CAAd,CAOiD,CACnE,CAAE,GAAEa,yBAAF,OAAF,EAA8B,CAC5BiB,KAAM,SADsB,CADqC,CAInE,CAAE,GAAEjB,yBAAF,MAAF,EAA6BnD,MAAOgB,CAAAA,MAAP,CAAchB,MAAOgB,CAAAA,MAAP,CAAc,EAAd,CAvBLhB,MAAOgB,CAAAA,MAAP,CAAc,CACxDC,MAsB6FmC,aAvBrC,CAAd,CAEzC1C,4BAAA,CAqB4F0C,aArB5F,CAFyC,CAuBK,CAAd,CAA6E,CACxGiB,SAAUlD,aAAA,CAAKiC,aAAL,CAAoBhC,CAAAA,GAApB,CAAwB,CAAxB,CAA2BC,CAAAA,KAA3B,EAD8F,CAExGiD,UAAWnD,aAAA,CAAKiC,aAAL,CAAoBhC,CAAAA,GAApB,CAAwB,CAAxB,CAA2BC,CAAAA,KAA3B,EAF6F,CAA7E,CAJsC,CAQnE,CAAE,GAAE8B,yBAAF,OAAyBA,yBAAzB,aAAF,EAA2D,CACzDxB,aAAc,KAD2C,CARQ,CAPjD,CADf,CAoBL,CAAE,GAAEwB,yBAAF,GAAqBA,yBAArB,SAAF,EAAmD,CACjDxB,aAAc,KADmC,CApB9C,CAiOP;MAAO,CArIA,CACL,CAACiB,qBAAD,EAAgB,qBADX,CA0DL,CAAE,GAAEA,qBAAF,gBAA8BA,qBAA9B,UAAF,EAAyD,CAEvD,CAACI,gBAAD,EAAoB,CAClBgB,iBAAkBN,QADA,CAElB,CAAE,KAAIT,oBAAJ,EAAF,EAA+B,CAC7Be,iBAAkBzB,kBADW,CAFb,CAFmC,CA1DpD,CAoEL,CAAE,GAAEK,qBAAF,GAAiBA,qBAAjB,UAAF,EAAmD5B,8BAAP,CAAA,IAAA,CAAAhB,8BAAA,CAAc,8BAAd,CAG4D,8BAH5D,CApEvC,CAyEL,CAAE,GAAE4C,qBAAF,GAAiBA,qBAAjB,QAAF,EAA0C,CACxC3B,MAAO,MADiC;AAExC,CAACS,iBAAD,EAAqB,CACnBT,MAAO,MADY,CAFmB,CAKxC,CAACiC,gBAAD,EAAoB,CAClBjC,MAAO,MADW,CALoB,CAzErC,CAmFL,CAAE,GAAE2B,qBAAF,GAAiBA,qBAAjB,SAAF,EAA2C,CACzC,CAAE;UACEI,gBADF;UAEEC,oBAFF;UAGEF,iBAHF;UAIErB,iBAJF;UAKEwB,gBALF;UAMEC,gBANF;OAAF,EAOInD,MAAOgB,CAAAA,MAAP,CAAc,EAAd,CAxPyB,CACjC+C,WAiSqBlB,KAjSHQ,CAAAA,yBADe,CAEjCkB,eAAgB,WAFiB,CAGjCC,cAAejE,kBAHkB,CAIjCkE,kBA8RqB5B,KA9RIS,CAAAA,6BAJQ,CAKjCoB,wBAAyB,MALQ,CAMjCC,wBAAyB,UANQ,CAwPzB,CARqC,CAnFtC,CAqIA,CAlB0E,CAAlD,CAmB9BxE,MAnB8B,CAmBP,CACxByE,iBAAkB,CAAC,CAAC,OAAD,CAAU,mBAAV,CAAD,CAAiC,CAAC,kBAAD,CAAqB,iBAArB,CAAjC,CADM,CAnBO,CAxS6E;",
"sources":["node_modules/antd/lib/skeleton/style/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$lib$skeleton$style$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.prepareComponentToken = exports.default = void 0;\nvar _cssinjs = require(\"@ant-design/cssinjs\");\nvar _internal = require(\"../../theme/internal\");\nconst skeletonClsLoading = new _cssinjs.Keyframes(`ant-skeleton-loading`, {\n  '0%': {\n    backgroundPosition: '100% 50%'\n  },\n  '100%': {\n    backgroundPosition: '0 50%'\n  }\n});\nconst genSkeletonElementCommonSize = size => ({\n  height: size,\n  lineHeight: (0, _cssinjs.unit)(size)\n});\nconst genSkeletonElementAvatarSize = size => Object.assign({\n  width: size\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonColor = token => ({\n  background: token.skeletonLoadingBackground,\n  backgroundSize: '400% 100%',\n  animationName: skeletonClsLoading,\n  animationDuration: token.skeletonLoadingMotionDuration,\n  animationTimingFunction: 'ease',\n  animationIterationCount: 'infinite'\n});\nconst genSkeletonElementInputSize = (size, calc) => Object.assign({\n  width: calc(size).mul(5).equal(),\n  minWidth: calc(size).mul(5).equal()\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementAvatar = token => {\n  const {\n    skeletonAvatarCls,\n    gradientFromColor,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM\n  } = token;\n  return {\n    [skeletonAvatarCls]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: gradientFromColor\n    }, genSkeletonElementAvatarSize(controlHeight)),\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-circle`]: {\n      borderRadius: '50%'\n    },\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-lg`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightLG)),\n    [`${skeletonAvatarCls}${skeletonAvatarCls}-sm`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightSM))\n  };\n};\nconst genSkeletonElementInput = token => {\n  const {\n    controlHeight,\n    borderRadiusSM,\n    skeletonInputCls,\n    controlHeightLG,\n    controlHeightSM,\n    gradientFromColor,\n    calc\n  } = token;\n  return {\n    [skeletonInputCls]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: gradientFromColor,\n      borderRadius: borderRadiusSM\n    }, genSkeletonElementInputSize(controlHeight, calc)),\n    [`${skeletonInputCls}-lg`]: Object.assign({}, genSkeletonElementInputSize(controlHeightLG, calc)),\n    [`${skeletonInputCls}-sm`]: Object.assign({}, genSkeletonElementInputSize(controlHeightSM, calc))\n  };\n};\nconst genSkeletonElementImageSize = size => Object.assign({\n  width: size\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementImage = token => {\n  const {\n    skeletonImageCls,\n    imageSizeBase,\n    gradientFromColor,\n    borderRadiusSM,\n    calc\n  } = token;\n  return {\n    [skeletonImageCls]: Object.assign(Object.assign({\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      verticalAlign: 'middle',\n      background: gradientFromColor,\n      borderRadius: borderRadiusSM\n    }, genSkeletonElementImageSize(calc(imageSizeBase).mul(2).equal())), {\n      [`${skeletonImageCls}-path`]: {\n        fill: '#bfbfbf'\n      },\n      [`${skeletonImageCls}-svg`]: Object.assign(Object.assign({}, genSkeletonElementImageSize(imageSizeBase)), {\n        maxWidth: calc(imageSizeBase).mul(4).equal(),\n        maxHeight: calc(imageSizeBase).mul(4).equal()\n      }),\n      [`${skeletonImageCls}-svg${skeletonImageCls}-svg-circle`]: {\n        borderRadius: '50%'\n      }\n    }),\n    [`${skeletonImageCls}${skeletonImageCls}-circle`]: {\n      borderRadius: '50%'\n    }\n  };\n};\nconst genSkeletonElementButtonShape = (token, size, buttonCls) => {\n  const {\n    skeletonButtonCls\n  } = token;\n  return {\n    [`${buttonCls}${skeletonButtonCls}-circle`]: {\n      width: size,\n      minWidth: size,\n      borderRadius: '50%'\n    },\n    [`${buttonCls}${skeletonButtonCls}-round`]: {\n      borderRadius: size\n    }\n  };\n};\nconst genSkeletonElementButtonSize = (size, calc) => Object.assign({\n  width: calc(size).mul(2).equal(),\n  minWidth: calc(size).mul(2).equal()\n}, genSkeletonElementCommonSize(size));\nconst genSkeletonElementButton = token => {\n  const {\n    borderRadiusSM,\n    skeletonButtonCls,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    gradientFromColor,\n    calc\n  } = token;\n  return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({\n    [skeletonButtonCls]: Object.assign({\n      display: 'inline-block',\n      verticalAlign: 'top',\n      background: gradientFromColor,\n      borderRadius: borderRadiusSM,\n      width: calc(controlHeight).mul(2).equal(),\n      minWidth: calc(controlHeight).mul(2).equal()\n    }, genSkeletonElementButtonSize(controlHeight, calc))\n  }, genSkeletonElementButtonShape(token, controlHeight, skeletonButtonCls)), {\n    [`${skeletonButtonCls}-lg`]: Object.assign({}, genSkeletonElementButtonSize(controlHeightLG, calc))\n  }), genSkeletonElementButtonShape(token, controlHeightLG, `${skeletonButtonCls}-lg`)), {\n    [`${skeletonButtonCls}-sm`]: Object.assign({}, genSkeletonElementButtonSize(controlHeightSM, calc))\n  }), genSkeletonElementButtonShape(token, controlHeightSM, `${skeletonButtonCls}-sm`));\n};\n// =============================== Base ===============================\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    skeletonAvatarCls,\n    skeletonTitleCls,\n    skeletonParagraphCls,\n    skeletonButtonCls,\n    skeletonInputCls,\n    skeletonImageCls,\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    gradientFromColor,\n    padding,\n    marginSM,\n    borderRadius,\n    titleHeight,\n    blockRadius,\n    paragraphLiHeight,\n    controlHeightXS,\n    paragraphMarginTop\n  } = token;\n  return {\n    [componentCls]: {\n      display: 'table',\n      width: '100%',\n      [`${componentCls}-header`]: {\n        display: 'table-cell',\n        paddingInlineEnd: padding,\n        verticalAlign: 'top',\n        // Avatar\n        [skeletonAvatarCls]: Object.assign({\n          display: 'inline-block',\n          verticalAlign: 'top',\n          background: gradientFromColor\n        }, genSkeletonElementAvatarSize(controlHeight)),\n        [`${skeletonAvatarCls}-circle`]: {\n          borderRadius: '50%'\n        },\n        [`${skeletonAvatarCls}-lg`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightLG)),\n        [`${skeletonAvatarCls}-sm`]: Object.assign({}, genSkeletonElementAvatarSize(controlHeightSM))\n      },\n      [`${componentCls}-content`]: {\n        display: 'table-cell',\n        width: '100%',\n        verticalAlign: 'top',\n        // Title\n        [skeletonTitleCls]: {\n          width: '100%',\n          height: titleHeight,\n          background: gradientFromColor,\n          borderRadius: blockRadius,\n          [`+ ${skeletonParagraphCls}`]: {\n            marginBlockStart: controlHeightSM\n          }\n        },\n        // paragraph\n        [skeletonParagraphCls]: {\n          padding: 0,\n          '> li': {\n            width: '100%',\n            height: paragraphLiHeight,\n            listStyle: 'none',\n            background: gradientFromColor,\n            borderRadius: blockRadius,\n            '+ li': {\n              marginBlockStart: controlHeightXS\n            }\n          }\n        },\n        [`${skeletonParagraphCls}> li:last-child:not(:first-child):not(:nth-child(2))`]: {\n          width: '61%'\n        }\n      },\n      [`&-round ${componentCls}-content`]: {\n        [`${skeletonTitleCls}, ${skeletonParagraphCls} > li`]: {\n          borderRadius\n        }\n      }\n    },\n    [`${componentCls}-with-avatar ${componentCls}-content`]: {\n      // Title\n      [skeletonTitleCls]: {\n        marginBlockStart: marginSM,\n        [`+ ${skeletonParagraphCls}`]: {\n          marginBlockStart: paragraphMarginTop\n        }\n      }\n    },\n    // Skeleton element\n    [`${componentCls}${componentCls}-element`]: Object.assign(Object.assign(Object.assign(Object.assign({\n      display: 'inline-block',\n      width: 'auto'\n    }, genSkeletonElementButton(token)), genSkeletonElementAvatar(token)), genSkeletonElementInput(token)), genSkeletonElementImage(token)),\n    // Skeleton Block Button, Input\n    [`${componentCls}${componentCls}-block`]: {\n      width: '100%',\n      [skeletonButtonCls]: {\n        width: '100%'\n      },\n      [skeletonInputCls]: {\n        width: '100%'\n      }\n    },\n    // With active animation\n    [`${componentCls}${componentCls}-active`]: {\n      [`\n        ${skeletonTitleCls},\n        ${skeletonParagraphCls} > li,\n        ${skeletonAvatarCls},\n        ${skeletonButtonCls},\n        ${skeletonInputCls},\n        ${skeletonImageCls}\n      `]: Object.assign({}, genSkeletonColor(token))\n    }\n  };\n};\n// ============================== Export ==============================\nconst prepareComponentToken = token => {\n  const {\n    colorFillContent,\n    colorFill\n  } = token;\n  const gradientFromColor = colorFillContent;\n  const gradientToColor = colorFill;\n  return {\n    color: gradientFromColor,\n    colorGradientEnd: gradientToColor,\n    gradientFromColor,\n    gradientToColor,\n    titleHeight: token.controlHeight / 2,\n    blockRadius: token.borderRadiusSM,\n    paragraphMarginTop: token.marginLG + token.marginXXS,\n    paragraphLiHeight: token.controlHeight / 2\n  };\n};\nexports.prepareComponentToken = prepareComponentToken;\nvar _default = exports.default = (0, _internal.genStyleHooks)('Skeleton', token => {\n  const {\n    componentCls,\n    calc\n  } = token;\n  const skeletonToken = (0, _internal.mergeToken)(token, {\n    skeletonAvatarCls: `${componentCls}-avatar`,\n    skeletonTitleCls: `${componentCls}-title`,\n    skeletonParagraphCls: `${componentCls}-paragraph`,\n    skeletonButtonCls: `${componentCls}-button`,\n    skeletonInputCls: `${componentCls}-input`,\n    skeletonImageCls: `${componentCls}-image`,\n    imageSizeBase: calc(token.controlHeight).mul(1.5).equal(),\n    borderRadius: 100,\n    // Large number to make capsule shape\n    skeletonLoadingBackground: `linear-gradient(90deg, ${token.gradientFromColor} 25%, ${token.gradientToColor} 37%, ${token.gradientFromColor} 63%)`,\n    skeletonLoadingMotionDuration: '1.4s'\n  });\n  return [genBaseStyle(skeletonToken)];\n}, prepareComponentToken, {\n  deprecatedTokens: [['color', 'gradientFromColor'], ['colorGradientEnd', 'gradientToColor']]\n});\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","prepareComponentToken","default","_cssinjs","_internal","skeletonClsLoading","Keyframes","backgroundPosition","genSkeletonElementCommonSize","size","height","lineHeight","unit","genSkeletonElementAvatarSize","assign","width","genSkeletonElementInputSize","calc","mul","equal","minWidth","genSkeletonElementButtonShape","token","buttonCls","skeletonButtonCls","borderRadius","genSkeletonElementButtonSize","colorFillContent","colorFill","color","colorGradientEnd","gradientFromColor","gradientToColor","titleHeight","controlHeight","blockRadius","borderRadiusSM","paragraphMarginTop","marginLG","marginXXS","paragraphLiHeight","genStyleHooks","componentCls","skeletonToken","mergeToken","skeletonAvatarCls","skeletonTitleCls","skeletonParagraphCls","skeletonInputCls","skeletonImageCls","imageSizeBase","skeletonLoadingBackground","skeletonLoadingMotionDuration","controlHeightLG","controlHeightSM","padding","marginSM","controlHeightXS","display","paddingInlineEnd","verticalAlign","background","marginBlockStart","listStyle","alignItems","justifyContent","fill","maxWidth","maxHeight","backgroundSize","animationName","animationDuration","animationTimingFunction","animationIterationCount","deprecatedTokens"]
}
