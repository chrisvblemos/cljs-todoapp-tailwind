{
"version":3,
"file":"module$node_modules$rc_select$lib$utils$valueUtil.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/rc-select/lib/utils/valueUtil.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rc_select$lib$utils$valueUtil\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fillFieldNames = fillFieldNames;\nexports.flattenOptions = flattenOptions;\nexports.getSeparatedContent = void 0;\nexports.injectPropsWithOption = injectPropsWithOption;\nexports.isValidCount = isValidCount;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _toArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toArray\"));\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _warning = _interopRequireDefault(require(\"rc-util/lib/warning\"));\nfunction getKey(data, index) {\n  var key = data.key;\n  var value;\n  if ('value' in data) {\n    value = data.value;\n  }\n  if (key !== null && key !== undefined) {\n    return key;\n  }\n  if (value !== undefined) {\n    return value;\n  }\n  return \"rc-index-key-\".concat(index);\n}\nfunction isValidCount(value) {\n  return typeof value !== 'undefined' && !Number.isNaN(value);\n}\nfunction fillFieldNames(fieldNames, childrenAsData) {\n  var _ref = fieldNames || {},\n    label = _ref.label,\n    value = _ref.value,\n    options = _ref.options,\n    groupLabel = _ref.groupLabel;\n  var mergedLabel = label || (childrenAsData ? 'children' : 'label');\n  return {\n    label: mergedLabel,\n    value: value || 'value',\n    options: options || 'options',\n    groupLabel: groupLabel || mergedLabel\n  };\n}\n\n/**\n * Flat options into flatten list.\n * We use `optionOnly` here is aim to avoid user use nested option group.\n * Here is simply set `key` to the index if not provided.\n */\nfunction flattenOptions(options) {\n  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    fieldNames = _ref2.fieldNames,\n    childrenAsData = _ref2.childrenAsData;\n  var flattenList = [];\n  var _fillFieldNames = fillFieldNames(fieldNames, false),\n    fieldLabel = _fillFieldNames.label,\n    fieldValue = _fillFieldNames.value,\n    fieldOptions = _fillFieldNames.options,\n    groupLabel = _fillFieldNames.groupLabel;\n  function dig(list, isGroupOption) {\n    if (!Array.isArray(list)) {\n      return;\n    }\n    list.forEach(function (data) {\n      if (isGroupOption || !(fieldOptions in data)) {\n        var value = data[fieldValue];\n\n        // Option\n        flattenList.push({\n          key: getKey(data, flattenList.length),\n          groupOption: isGroupOption,\n          data: data,\n          label: data[fieldLabel],\n          value: value\n        });\n      } else {\n        var grpLabel = data[groupLabel];\n        if (grpLabel === undefined && childrenAsData) {\n          grpLabel = data.label;\n        }\n\n        // Option Group\n        flattenList.push({\n          key: getKey(data, flattenList.length),\n          group: true,\n          data: data,\n          label: grpLabel\n        });\n        dig(data[fieldOptions], true);\n      }\n    });\n  }\n  dig(options, false);\n  return flattenList;\n}\n\n/**\n * Inject `props` into `option` for legacy usage\n */\nfunction injectPropsWithOption(option) {\n  var newOption = (0, _objectSpread2.default)({}, option);\n  if (!('props' in newOption)) {\n    Object.defineProperty(newOption, 'props', {\n      get: function get() {\n        (0, _warning.default)(false, 'Return type is option instead of Option instance. Please read value directly instead of reading from `props`.');\n        return newOption;\n      }\n    });\n  }\n  return newOption;\n}\nvar getSeparatedContent = exports.getSeparatedContent = function getSeparatedContent(text, tokens, end) {\n  if (!tokens || !tokens.length) {\n    return null;\n  }\n  var match = false;\n  var separate = function separate(str, _ref3) {\n    var _ref4 = (0, _toArray2.default)(_ref3),\n      token = _ref4[0],\n      restTokens = _ref4.slice(1);\n    if (!token) {\n      return [str];\n    }\n    var list = str.split(token);\n    match = match || list.length > 1;\n    return list.reduce(function (prevList, unitStr) {\n      return [].concat((0, _toConsumableArray2.default)(prevList), (0, _toConsumableArray2.default)(separate(unitStr, restTokens)));\n    }, []).filter(Boolean);\n  };\n  var list = separate(text, tokens);\n  if (match) {\n    return typeof end !== 'undefined' ? list.slice(0, end) : list;\n  } else {\n    return null;\n  }\n};\n};"],
"names":["shadow$provide","global","require","module","exports","getKey","data","index","key","value","undefined","concat","fillFieldNames","fieldNames","childrenAsData","_ref","mergedLabel","label","options","groupLabel","_interopRequireDefault","Object","defineProperty","flattenOptions","dig","list","isGroupOption","Array","isArray","forEach","fieldOptions","grpLabel","flattenList","push","length","group","fieldValue","groupOption","fieldLabel","_ref2","arguments","_fillFieldNames","getSeparatedContent","injectPropsWithOption","option","newOption","_objectSpread2","default","get","_warning","isValidCount","Number","isNaN","_toConsumableArray2","_toArray2","exports.getSeparatedContent","text","tokens","end","match","separate","str","_ref3","_ref4","token","restTokens","slice","split","reduce","prevList","unitStr","filter","Boolean"]
}
