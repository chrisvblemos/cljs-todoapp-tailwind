{
"version":3,
"file":"module$node_modules$rc_image$lib$hooks$useImageTransform.js",
"lineCount":6,
"mappings":"AAAAA,cAAA,CAAA,wDAAA,CAA6E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGjHC,MAAAA,CAAyBH,OAAA,CAAQ,kEAAR,CAC7BI,OAAOC,CAAAA,cAAP,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAGAJ,QAAQK,CAAAA,OAAR,CAeAC,QAA0B,CAACC,MAAD,CAASC,QAAT,CAAmBC,QAAnB,CAA6BC,WAA7B,CAA0C,CAClE,IAAIC,MAAQ,GAAIC,MAAOC,CAAAA,MAAX,EAAmB,IAAnB,CAAZ,CACIC,MAAQ,GAAIF,MAAOC,CAAAA,MAAX,EAAmB,EAAnB,CADZ,CAEIE,UAAY,GAAIH,MAAOI,CAAAA,QAAX,EAAqBC,gBAArB,CACdC,UAAAA,CAAa,GAAIC,eAAgBd,CAAAA,OAApB,EAA6BU,SAA7B,CAAwC,CAAxC,CAJmD,KAKhEK,UAAYF,SAAA,CAAW,CAAX,CALoD;AAMhEG,aAAeH,SAAA,CAAW,CAAX,CANiD,CAkB9DI,gBAAkBA,QAAwB,CAACC,YAAD,CAAeC,MAAf,CAAuB,CAC7C,IAAtB,GAAIb,KAAMc,CAAAA,OAAV,GACEX,KAAMW,CAAAA,OACN,CADgB,EAChB,CAAAd,KAAMc,CAAAA,OAAN,CAAgB,GAAIC,IAAKrB,CAAAA,OAAT,EAAkB,QAAS,EAAG,CAC5CgB,YAAA,CAAa,QAAS,CAACM,QAAD,CAAW,CAC/B,IAAIC,UAAYD,QAChBb,MAAMW,CAAAA,OAAQI,CAAAA,OAAd,CAAsB,QAAS,CAACC,UAAD,CAAa,CAC1CF,SAAA,CAAY,GAAIG,cAAe1B,CAAAA,OAAnB,EAA4B,GAAI0B,cAAe1B,CAAAA,OAAnB,EAA4B,EAA5B,CAAgCuB,SAAhC,CAA5B,CAAwEE,UAAxE,CAD8B,CAA5C,CAGAnB,MAAMc,CAAAA,OAAN,CAAgB,IACA,KAAhB,GAAAf,WAAA,EAAwC,IAAK,EAA7C,GAAwBA,WAAxB,EAAkDA,WAAA,CAAY,CAC5DU,UAAWQ,SADiD,CAEpDJ,MAFoD,CAAZ,CAIlD,OAAOI,UAVwB,CAAjC,CAD4C,CAA9B,CAFlB,CAiBAd,MAAMW,CAAAA,OAAQO,CAAAA,IAAd,CAAmB,GAAID,cAAe1B,CAAAA,OAAnB,EAA4B,GAAI0B,cAAe1B,CAAAA,OAAnB,EAA4B,EAA5B;AAAgCe,SAAhC,CAA5B,CAAwEG,YAAxE,CAAnB,CAlBmE,CA4ErE,OAAO,CACMH,SADN,CAELa,eAzFmBA,QAAuB,CAACT,MAAD,CAAS,CACnDH,YAAA,CAAaJ,gBAAb,CACK,IAAIiB,QAAS7B,CAAAA,OAAb,EAAsBY,gBAAtB,CAAwCG,SAAxC,CAAL,EACkB,IADlB,GACEV,WADF,EAC0C,IAAK,EAD/C,GAC0BA,WAD1B,EACoDA,WAAA,CAAY,CAC5DU,UAAWH,gBADiD,CAEpDO,MAFoD,CAAZ,CAHD,CAuF9C,CAGYF,eAHZ,CAILa,mBA1DuBA,QAA2B,CAACC,KAAD,CAAQZ,MAAR,CAAgBa,OAAhB,CAAyBC,OAAzB,CAAkCC,OAAlC,CAA2C,CAAA,IACzFC,gBAAkBjC,MAAOkB,CAAAA,OADgE,CAE3FgB,MAAQD,eAAgBC,CAAAA,KAFmE,CAG3FC,OAASF,eAAgBE,CAAAA,MAHkE,CAI3FC,YAAcH,eAAgBG,CAAAA,WAJ6D,CAK3FC,aAAeJ,eAAgBI,CAAAA,YAL4D;AAM3FC,WAAaL,eAAgBK,CAAAA,UAN8D,CAO3FC,UAAYN,eAAgBM,CAAAA,SAP+D,CAQzFC,SAAWX,KACXY,gBAAAA,CAAW5B,SAAU6B,CAAAA,KAArBD,CAA6BZ,KAC7BY,gBAAJ,CAAevC,QAAf,EACEuC,eACA,CADWvC,QACX,CAAAsC,QAAA,CAAWtC,QAAX,CAAsBW,SAAU6B,CAAAA,KAFlC,EAGWD,eAHX,CAGsBxC,QAHtB,GAKEwC,eACA,CADWT,OAAA,CAAUS,eAAV,CAAqBxC,QAChC,CAAAuC,QAAA,CAAWC,eAAX,CAAsB5B,SAAU6B,CAAAA,KANlC,CAYIC,QAAAA,CAAYH,QAAZG,CAAuB,CAQvBC,QAAAA,CAAO/B,SAAUgC,CAAAA,CAAjBD,EAHiBD,OAGjBC,GAV4B,IAAZE,GAAAhB,OAAAgB,EAAgC,IAAK,EAArCA,GAAoBhB,OAApBgB,CAAyChB,OAAzCgB,CAAmDC,UAAnDD,CAAgE,CAUhFF,EAH8C/B,SAAUgC,CAAAA,CAGxDD,CAH4DN,UAG5DM,EANWD,OAMXC,CANuBV,KAMvBU,CAN+B,EAM/BA,CACAI,QAAAA,CAAOnC,SAAUoC,CAAAA,CAAjBD,EAHgBL,OAGhBK;EAV4B,IAAZE,GAAAnB,OAAAmB,EAAgC,IAAK,EAArCA,GAAoBnB,OAApBmB,CAAyCnB,OAAzCmB,CAAmDC,WAAnDD,CAAiE,CAUjFF,EAH6CnC,SAAUoC,CAAAA,CAGvDD,CAH2DT,SAG3DS,EANWL,OAMXK,CANuBb,MAMvBa,CANgC,EAMhCA,CAMQ,EAAZ,CAAInB,KAAJ,EAA8B,CAA9B,GAAiBY,eAAjB,GACMW,KAKJ,CALkBhB,WAKlB,CALgCK,eAKhC,CAJmBJ,YAInB,EAJkCI,eAIlC,CAHIY,WAGJ,CAHqB,GAAIC,IAAKC,CAAAA,aAAT,GAGrB,CADEC,MACF,CADiBH,WAAelB,CAAAA,MAChC,CAAIiB,KAAJ,EAFgBC,WAAenB,CAAAA,KAE/B,EAAkCuB,YAAlC,EAAkDD,MAAlD,GAEER,OAFF,CACEJ,OADF,CACS,CADT,CANF,CAWA7B,gBAAA,CAAgB,CACd8B,EAAGD,OADW,CAEdK,EAAGD,OAFW,CAGdN,MAAOD,eAHO,CAAhB,CAIGxB,MAJH,CAhD6F,CAsDxF,CA9F2D,CAdpE,KAAIO,eAAiB9B,MAAA,CAAuBH,OAAA,CAAQ,0DAAR,CAAvB,CAArB,CACIqB;AAAkBlB,MAAA,CAAuBH,OAAA,CAAQ,0DAAR,CAAvB,CADtB,CAEI+D,KAAO/D,OAAA,CAAQ,yCAAR,CAFX,CAGIoC,SAAWjC,MAAA,CAAuBH,OAAA,CAAQ,yCAAR,CAAvB,CAHf,CAII4B,KAAOzB,MAAA,CAAuBH,OAAA,CAAQ,qCAAR,CAAvB,CAJX,CAKIc,OAASd,OAAA,CAAQ,iCAAR,CALb,CAMImB,iBAAmB,CACrBmC,EAAG,CADkB,CAErBI,EAAG,CAFkB,CAGrBS,OAAQ,CAHa,CAIrBhB,MAAO,CAJc,CAKrBiB,MAAO,CAAA,CALc,CAMrBC,MAAO,CAAA,CANc,CAd8F;",
"sources":["node_modules/rc-image/lib/hooks/useImageTransform.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rc_image$lib$hooks$useImageTransform\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useImageTransform;\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _css = require(\"rc-util/lib/Dom/css\");\nvar _isEqual = _interopRequireDefault(require(\"rc-util/lib/isEqual\"));\nvar _raf = _interopRequireDefault(require(\"rc-util/lib/raf\"));\nvar _react = require(\"react\");\nvar initialTransform = {\n  x: 0,\n  y: 0,\n  rotate: 0,\n  scale: 1,\n  flipX: false,\n  flipY: false\n};\nfunction useImageTransform(imgRef, minScale, maxScale, onTransform) {\n  var frame = (0, _react.useRef)(null);\n  var queue = (0, _react.useRef)([]);\n  var _useState = (0, _react.useState)(initialTransform),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    transform = _useState2[0],\n    setTransform = _useState2[1];\n  var resetTransform = function resetTransform(action) {\n    setTransform(initialTransform);\n    if (!(0, _isEqual.default)(initialTransform, transform)) {\n      onTransform === null || onTransform === void 0 || onTransform({\n        transform: initialTransform,\n        action: action\n      });\n    }\n  };\n\n  /** Direct update transform */\n  var updateTransform = function updateTransform(newTransform, action) {\n    if (frame.current === null) {\n      queue.current = [];\n      frame.current = (0, _raf.default)(function () {\n        setTransform(function (preState) {\n          var memoState = preState;\n          queue.current.forEach(function (queueState) {\n            memoState = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, memoState), queueState);\n          });\n          frame.current = null;\n          onTransform === null || onTransform === void 0 || onTransform({\n            transform: memoState,\n            action: action\n          });\n          return memoState;\n        });\n      });\n    }\n    queue.current.push((0, _objectSpread2.default)((0, _objectSpread2.default)({}, transform), newTransform));\n  };\n\n  /** Scale according to the position of centerX and centerY */\n  var dispatchZoomChange = function dispatchZoomChange(ratio, action, centerX, centerY, isTouch) {\n    var _imgRef$current = imgRef.current,\n      width = _imgRef$current.width,\n      height = _imgRef$current.height,\n      offsetWidth = _imgRef$current.offsetWidth,\n      offsetHeight = _imgRef$current.offsetHeight,\n      offsetLeft = _imgRef$current.offsetLeft,\n      offsetTop = _imgRef$current.offsetTop;\n    var newRatio = ratio;\n    var newScale = transform.scale * ratio;\n    if (newScale > maxScale) {\n      newScale = maxScale;\n      newRatio = maxScale / transform.scale;\n    } else if (newScale < minScale) {\n      // For mobile interactions, allow scaling down to the minimum scale.\n      newScale = isTouch ? newScale : minScale;\n      newRatio = newScale / transform.scale;\n    }\n\n    /** Default center point scaling */\n    var mergedCenterX = centerX !== null && centerX !== void 0 ? centerX : innerWidth / 2;\n    var mergedCenterY = centerY !== null && centerY !== void 0 ? centerY : innerHeight / 2;\n    var diffRatio = newRatio - 1;\n    /** Deviation calculated from image size */\n    var diffImgX = diffRatio * width * 0.5;\n    var diffImgY = diffRatio * height * 0.5;\n    /** The difference between the click position and the edge of the document */\n    var diffOffsetLeft = diffRatio * (mergedCenterX - transform.x - offsetLeft);\n    var diffOffsetTop = diffRatio * (mergedCenterY - transform.y - offsetTop);\n    /** Final positioning */\n    var newX = transform.x - (diffOffsetLeft - diffImgX);\n    var newY = transform.y - (diffOffsetTop - diffImgY);\n\n    /**\n     * When zooming the image\n     * When the image size is smaller than the width and height of the window, the position is initialized\n     */\n    if (ratio < 1 && newScale === 1) {\n      var mergedWidth = offsetWidth * newScale;\n      var mergedHeight = offsetHeight * newScale;\n      var _getClientSize = (0, _css.getClientSize)(),\n        clientWidth = _getClientSize.width,\n        clientHeight = _getClientSize.height;\n      if (mergedWidth <= clientWidth && mergedHeight <= clientHeight) {\n        newX = 0;\n        newY = 0;\n      }\n    }\n    updateTransform({\n      x: newX,\n      y: newY,\n      scale: newScale\n    }, action);\n  };\n  return {\n    transform: transform,\n    resetTransform: resetTransform,\n    updateTransform: updateTransform,\n    dispatchZoomChange: dispatchZoomChange\n  };\n}\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","Object","defineProperty","value","default","useImageTransform","imgRef","minScale","maxScale","onTransform","frame","_react","useRef","queue","_useState","useState","initialTransform","_useState2","_slicedToArray2","transform","setTransform","updateTransform","newTransform","action","current","_raf","preState","memoState","forEach","queueState","_objectSpread2","push","resetTransform","_isEqual","dispatchZoomChange","ratio","centerX","centerY","isTouch","_imgRef$current","width","height","offsetWidth","offsetHeight","offsetLeft","offsetTop","newRatio","newScale","scale","diffRatio","newX","x","mergedCenterX","innerWidth","newY","y","mergedCenterY","innerHeight","mergedWidth","_getClientSize","_css","getClientSize","clientHeight","mergedHeight","rotate","flipX","flipY"]
}
