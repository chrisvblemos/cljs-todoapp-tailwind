shadow$provide.module$node_modules$antd$lib$avatar$group=function(global,require,module,exports){"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var React=module(require("module$node_modules$react$index")),_classnames=global(require("module$node_modules$classnames$index")),_toArray=
global(require("module$node_modules$rc_util$lib$Children$toArray")),_reactNode=require("module$node_modules$antd$lib$_util$reactNode"),_warning=require("module$node_modules$antd$lib$_util$warning"),_configProvider=require("module$node_modules$antd$lib$config_provider$index"),_useCSSVarCls=global(require("module$node_modules$antd$lib$config_provider$hooks$useCSSVarCls")),_popover=global(require("module$node_modules$antd$lib$popover$index")),_avatar=global(require("module$node_modules$antd$lib$avatar$avatar")),
_AvatarContext=global(require("module$node_modules$antd$lib$avatar$AvatarContext")),_style=global(require("module$node_modules$antd$lib$avatar$style$index"));const AvatarContextProvider=props=>{const {size,shape}=React.useContext(_AvatarContext.default),avatarContextValue=React.useMemo(()=>({size:props.size||size,shape:props.shape||shape}),[props.size,props.shape,size,shape]);return React.createElement(_AvatarContext.default.Provider,{value:avatarContextValue},props.children)};exports.default=props=>
{var _a,_b,_c,_d;const {getPrefixCls,direction}=React.useContext(_configProvider.ConfigContext),{prefixCls:customizePrefixCls,className,rootClassName,style,maxCount,maxStyle,size,shape,maxPopoverPlacement,maxPopoverTrigger,children,max}=props;props=(0,_warning.devUseWarning)("Avatar.Group");props.deprecated(!maxCount,"maxCount","max\x3d{{ count: number }}");props.deprecated(!maxStyle,"maxStyle","max\x3d{{ style: CSSProperties }}");props.deprecated(!maxPopoverPlacement,"maxPopoverPlacement","max\x3d{{ popover: PopoverProps }}");
props.deprecated(!maxPopoverTrigger,"maxPopoverTrigger","max\x3d{{ popover: PopoverProps }}");var prefixCls=getPrefixCls("avatar",customizePrefixCls);props=`${prefixCls}-group`;var rootCls=(0,_useCSSVarCls.default)(prefixCls);const [wrapCSSVar,hashId,cssVarCls]=(0,_style.default)(prefixCls,rootCls);prefixCls=(0,_classnames.default)(props,{[`${props}-rtl`]:"rtl"===direction},cssVarCls,rootCls,className,rootClassName,hashId);var childrenWithProps=(0,_toArray.default)(children).map((child,index)=>(0,_reactNode.cloneElement)(child,
{key:`avatar-key-${index}`}));rootCls=(null===max||void 0===max?void 0:max.count)||maxCount;const numOfChildren=childrenWithProps.length;if(rootCls&&rootCls<numOfChildren){const childrenShow=childrenWithProps.slice(0,rootCls),childrenHidden=childrenWithProps.slice(rootCls,numOfChildren);childrenWithProps=(null===max||void 0===max?void 0:max.style)||maxStyle;const mergePopoverTrigger=(null===(_a=null===max||void 0===max?void 0:max.popover)||void 0===_a?void 0:_a.trigger)||maxPopoverTrigger||"hover";
_a=(null===(_b=null===max||void 0===max?void 0:max.popover)||void 0===_b?void 0:_b.placement)||maxPopoverPlacement||"top";_b=Object.assign(Object.assign({content:childrenHidden},null===max||void 0===max?void 0:max.popover),{classNames:{root:(0,_classnames.default)(`${props}-popover`,null===(_d=null===(_c=null===max||void 0===max?void 0:max.popover)||void 0===_c?void 0:_c.classNames)||void 0===_d?void 0:_d.root)},placement:_a,trigger:mergePopoverTrigger});childrenShow.push(React.createElement(_popover.default,
Object.assign({key:"avatar-popover-key",destroyTooltipOnHide:!0},_b),React.createElement(_avatar.default,{style:childrenWithProps},`+${numOfChildren-rootCls}`)));return wrapCSSVar(React.createElement(AvatarContextProvider,{shape,size},React.createElement("div",{className:prefixCls,style},childrenShow)))}return wrapCSSVar(React.createElement(AvatarContextProvider,{shape,size},React.createElement("div",{className:prefixCls,style},childrenWithProps)))}}
//# sourceMappingURL=module$node_modules$antd$lib$avatar$group.js.map
