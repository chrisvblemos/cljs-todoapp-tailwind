{
"version":3,
"file":"module$node_modules$antd$lib$qr_code$QrcodeStatus.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,iDAAA,CAAsE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAE9G,YAEIC,OAAAA,CAAyBH,OAAA,CAAQ,kEAAR,CAAwDI,CAAAA,OACrFC,OAAOC,CAAAA,cAAP,CAAsBJ,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CK,MAAO,CAAA,CADoC,CAA7C,CAGAL,QAAQE,CAAAA,OAAR,CAMAI,QAAqB,CAACC,IAAD,CAAO,CAC1B,IAAI,CACFC,SADE,CAEFC,MAFE,CAGFC,SAHE,CAIFC,YAJE,CAKFC,MALE,CAAA,CAMAL,IACEM,KAAAA,CAAkCC,MAAOZ,CAAAA,OAAQa,CAAAA,aAAf,CAA6BD,MAAOZ,CAAAA,OAAQc,CAAAA,QAA5C,CAAsD,IAAtD,CAAyEF,MAAOZ,CAAAA,OAAQa,CAAAA,aAAf,CAA6B,GAA7B,CAAkC,CACjJE,UAAY,GAAET,SAAF,UADqI,CAAlC,CAEnG,IAAX,GAAAC,MAAA,EAA8B,IAAK,EAAnC;AAAmBA,MAAnB,CAAuC,IAAK,EAA5C,CAAgDA,MAAOS,CAAAA,OAFuD,CAAzE,CAE4BR,SAF5B,EAEuDI,MAAOZ,CAAAA,OAAQa,CAAAA,aAAf,CAA6BI,OAAQjB,CAAAA,OAArC,CAA8C,CAC3IkB,KAAM,MADqI,CAE3IC,KAAmBP,MAAOZ,CAAAA,OAAQa,CAAAA,aAAf,CAA6BO,MAAOC,CAAAA,cAApC,CAAoD,IAApD,CAFwH,CAG3IC,QAASd,SAHkI,CAA9C,CAIjF,IAAX,GAAAD,MAAA,EAA8B,IAAK,EAAnC,GAAmBA,MAAnB,CAAuC,IAAK,EAA5C,CAAgDA,MAAOgB,CAAAA,OAJqC,CAFvD,CAOxC,OAAMC,mBAAkCZ,MAAOZ,CAAAA,OAAQa,CAAAA,aAAf,CAA6B,GAA7B,CAAkC,CACxEE,UAAY,GAAET,SAAF,UAD4D,CAAlC,CAE1B,IAAX,GAAAC,MAAA,EAA8B,IAAK,EAAnC,GAAmBA,MAAnB,CAAuC,IAAK,EAA5C,CAAgDA,MAAOkB,CAAAA,OAFlB,CAAxC,CAGMC,aAAe,CACnBV,QAASL,IADU,CAEnBgB,QAASC,WAFU,CAGnBH,QAASD,kBAHU,CAKfK,KAAAA,CAAsBC,IAAAD,EAAQH,YAAA,CAAaI,IAAKpB,CAAAA,MAAlB,CAEpC,OAAO,CADqC,IAAjBqB;AAAAtB,YAAAsB,EAA0C,IAAK,EAA/CA,GAAyBtB,YAAzBsB,CAAmDtB,YAAnDsB,CAAkEF,IACtF,EAAmB,CACxBnB,MADwB,CAExBH,MAFwB,CAGxBC,SAHwB,CAAnB,CAzBmB,CAL5B,KAAII,OAASb,MAAA,CAAuBH,OAAA,CAAQ,iCAAR,CAAvB,CAAb,CACIwB,OAASxB,OAAA,CAAQ,iDAAR,CADb,CAEIqB,QAAUlB,MAAA,CAAuBH,OAAA,CAAQ,2CAAR,CAAvB,CACVoC,QAAAA,CAAQjC,MAAA,CAAuBH,OAAA,CAAQ,yCAAR,CAAvB,CACZ,OAAMgC,YAA2BhB,MAAOZ,CAAAA,OAAQa,CAAAA,aAAf,CAA6BmB,OAAMhC,CAAAA,OAAnC,CAA4C,IAA5C,CAb6E;",
"sources":["node_modules/antd/lib/qr-code/QrcodeStatus.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$lib$qr_code$QrcodeStatus\"] = function(global,require,module,exports) {\n\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = QRcodeStatus;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _icons = require(\"@ant-design/icons\");\nvar _button = _interopRequireDefault(require(\"../button\"));\nvar _spin = _interopRequireDefault(require(\"../spin\"));\nconst defaultSpin = /*#__PURE__*/_react.default.createElement(_spin.default, null);\nfunction QRcodeStatus(_ref) {\n  let {\n    prefixCls,\n    locale,\n    onRefresh,\n    statusRender,\n    status\n  } = _ref;\n  const defaultExpiredNode = /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(\"p\", {\n    className: `${prefixCls}-expired`\n  }, locale === null || locale === void 0 ? void 0 : locale.expired), onRefresh && (/*#__PURE__*/_react.default.createElement(_button.default, {\n    type: \"link\",\n    icon: /*#__PURE__*/_react.default.createElement(_icons.ReloadOutlined, null),\n    onClick: onRefresh\n  }, locale === null || locale === void 0 ? void 0 : locale.refresh)));\n  const defaultScannedNode = /*#__PURE__*/_react.default.createElement(\"p\", {\n    className: `${prefixCls}-scanned`\n  }, locale === null || locale === void 0 ? void 0 : locale.scanned);\n  const defaultNodes = {\n    expired: defaultExpiredNode,\n    loading: defaultSpin,\n    scanned: defaultScannedNode\n  };\n  const defaultStatusRender = info => defaultNodes[info.status];\n  const mergedStatusRender = statusRender !== null && statusRender !== void 0 ? statusRender : defaultStatusRender;\n  return mergedStatusRender({\n    status,\n    locale,\n    onRefresh\n  });\n}\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","default","Object","defineProperty","value","QRcodeStatus","_ref","prefixCls","locale","onRefresh","statusRender","status","defaultExpiredNode","_react","createElement","Fragment","className","expired","_button","type","icon","_icons","ReloadOutlined","onClick","refresh","defaultScannedNode","scanned","defaultNodes","loading","defaultSpin","defaultStatusRender","info","mergedStatusRender","_spin"]
}
