shadow$provide.module$node_modules$antd$lib$spin$index=function(global,require,module,exports){"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var React=module(require("module$node_modules$react$index")),_classnames=global(require("module$node_modules$classnames$index")),_throttleDebounce=
require("module$node_modules$throttle_debounce$cjs$index"),_warning=require("module$node_modules$antd$lib$_util$warning"),_configProvider=require("module$node_modules$antd$lib$config_provider$index"),_Indicator=global(require("module$node_modules$antd$lib$spin$Indicator$index")),_index=global(require("module$node_modules$antd$lib$spin$style$index")),_usePercent=global(require("module$node_modules$antd$lib$spin$usePercent")),__rest=function(s,e){var t={},p;for(p in s)Object.prototype.hasOwnProperty.call(s,
p)&&0>e.indexOf(p)&&(t[p]=s[p]);if(null!=s&&"function"===typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)0>e.indexOf(p[i])&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};let defaultIndicator;require=props=>{var _a;const {prefixCls:customizePrefixCls,spinning:customSpinning=!0,delay=0,className,rootClassName,size="default",tip,wrapperClassName,style,children,fullscreen=!1,indicator,percent}=props;props=__rest(props,
"prefixCls spinning delay className rootClassName size tip wrapperClassName style children fullscreen indicator percent".split(" "));const {getPrefixCls,direction,spin}=React.useContext(_configProvider.ConfigContext),prefixCls=getPrefixCls("spin",customizePrefixCls),[wrapCSSVar,hashId,cssVarCls]=(0,_index.default)(prefixCls),[spinning,setSpinning]=React.useState(()=>customSpinning&&!(customSpinning&&delay&&!Number.isNaN(Number(delay)))),mergedPercent=(0,_usePercent.default)(spinning,percent);React.useEffect(()=>
{if(customSpinning){const showSpinning=(0,_throttleDebounce.debounce)(delay,()=>{setSpinning(!0)});showSpinning();return()=>{var _a;null===(_a=null===showSpinning||void 0===showSpinning?void 0:showSpinning.cancel)||void 0===_a?void 0:_a.call(showSpinning)}}setSpinning(!1)},[delay,customSpinning]);const isNestedPattern=React.useMemo(()=>"undefined"!==typeof children&&!fullscreen,[children,fullscreen]);(0,_warning.devUseWarning)("Spin")(!tip||isNestedPattern||fullscreen,"usage","`tip` only work in nest or fullscreen pattern.");
const spinClassName=(0,_classnames.default)(prefixCls,null===spin||void 0===spin?void 0:spin.className,{[`${prefixCls}-sm`]:"small"===size,[`${prefixCls}-lg`]:"large"===size,[`${prefixCls}-spinning`]:spinning,[`${prefixCls}-show-text`]:!!tip,[`${prefixCls}-rtl`]:"rtl"===direction},className,!fullscreen&&rootClassName,hashId,cssVarCls),containerClassName=(0,_classnames.default)(`${prefixCls}-container`,{[`${prefixCls}-blur`]:spinning}),mergedIndicator=null!==(_a=null!==indicator&&void 0!==indicator?
indicator:null===spin||void 0===spin?void 0:spin.indicator)&&void 0!==_a?_a:defaultIndicator;_a=Object.assign(Object.assign({},null===spin||void 0===spin?void 0:spin.style),style);_a=React.createElement("div",Object.assign({},props,{style:_a,className:spinClassName,"aria-live":"polite","aria-busy":spinning}),React.createElement(_Indicator.default,{prefixCls,indicator:mergedIndicator,percent:mergedPercent}),tip&&(isNestedPattern||fullscreen)?React.createElement("div",{className:`${prefixCls}-text`},
tip):null);return isNestedPattern?wrapCSSVar(React.createElement("div",Object.assign({},props,{className:(0,_classnames.default)(`${prefixCls}-nested-loading`,wrapperClassName,hashId,cssVarCls)}),spinning&&React.createElement("div",{key:"loading"},_a),React.createElement("div",{className:containerClassName,key:"container"},children))):fullscreen?wrapCSSVar(React.createElement("div",{className:(0,_classnames.default)(`${prefixCls}-fullscreen`,{[`${prefixCls}-fullscreen-show`]:spinning},rootClassName,
hashId,cssVarCls)},_a)):wrapCSSVar(_a)};require.setDefaultIndicator=indicator=>{defaultIndicator=indicator};require.displayName="Spin";exports.default=require}
//# sourceMappingURL=module$node_modules$antd$lib$spin$index.js.map
