shadow$provide.module$node_modules$$rc_component$async_validator$lib$rule$type=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _typeof2=global(require("module$node_modules$$babel$runtime$helpers$typeof")),_util=require("module$node_modules$$rc_component$async_validator$lib$util"),_required=global(require("module$node_modules$$rc_component$async_validator$lib$rule$required")),
_url=global(require("module$node_modules$$rc_component$async_validator$lib$rule$url")),JSCompiler_object_inline_email_1959=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+\.)+[a-zA-Z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]{2,}))$/,JSCompiler_object_inline_hex_1960=/^#?([a-f0-9]{6}|[a-f0-9]{3})$/i,types={integer:function(value){return types.number(value)&&parseInt(value,10)===
value},float:function(value){return types.number(value)&&!types.integer(value)},array:function(value){return Array.isArray(value)},regexp:function(value){return!0},date:function(value){return"function"===typeof value.getTime&&"function"===typeof value.getMonth&&"function"===typeof value.getYear&&!isNaN(value.getTime())},number:function(value){return isNaN(value)?!1:"number"===typeof value},object:function(value){return"object"===(0,_typeof2.default)(value)&&!types.array(value)},method:function(value){return"function"===
typeof value},email:function(value){return"string"===typeof value&&320>=value.length&&!!value.match(JSCompiler_object_inline_email_1959)},url:function(value){return"string"===typeof value&&2048>=value.length&&!!value.match((0,_url.default)())},hex:function(value){return"string"===typeof value&&!!value.match(JSCompiler_object_inline_hex_1960)}};exports.default=function(rule,value,source,errors,options){rule.required&&void 0===value?(0,_required.default)(rule,value,source,errors,options):(source=rule.type,
-1<"integer float array regexp object method email number date url hex".split(" ").indexOf(source)?types[source](value)||errors.push((0,_util.format)(options.messages.types[source],rule.fullField,rule.type)):source&&(0,_typeof2.default)(value)!==rule.type&&errors.push((0,_util.format)(options.messages.types[source],rule.fullField,rule.type)))}}
//# sourceMappingURL=module$node_modules$$rc_component$async_validator$lib$rule$type.js.map
