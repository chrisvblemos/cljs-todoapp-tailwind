{
"version":3,
"file":"module$node_modules$antd$lib$_util$warning.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,0CAAA,CAA+D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYvGC,QAASA,KAAI,EAAG,EATZC,MAAAA,CAA0BJ,OAAA,CAAQ,mEAAR,CAAyDK,CAAAA,OACvFC,OAAOC,CAAAA,cAAP,CAAsBL,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CM,MAAO,CAAA,CADoC,CAA7C,CAGAN,QAAQO,CAAAA,aAAR,CAAwBP,OAAQG,CAAAA,OAAhC,CAA0CH,OAAQQ,CAAAA,cAAlD,CAAmE,IAAK,EACxER,QAAQC,CAAAA,IAAR,CAAeA,IACfD,QAAQS,CAAAA,WAAR,CAKAA,QAAoB,EAAG,CACrBC,kBAAA,CAAqB,IACrB,IAAIC,QAASF,CAAAA,WAAb,GAFqB,CAJvB,KAAIG,MAAQV,MAAA,CAAwBJ,OAAA,CAAQ,iCAAR,CAAxB,CAAZ,CACIa;AAAWT,MAAA,CAAwBJ,OAAA,CAAQ,yCAAR,CAAxB,CAEf,KAAIY,mBAAqB,IAAzB,CAMIG,QAAUZ,IAEZY,QAAA,CAAU,CAACC,KAAD,CAAQC,SAAR,CAAmBC,OAAnB,CAAAH,EAA+B,CACvC,GAAIF,QAASR,CAAAA,OAAb,EAAsBW,KAAtB,CAA8B,UAASC,SAAT,KAAuBC,OAAvB,EAA9B,CADuC,CAQ3C,OAAMR,eAAiBR,OAAQQ,CAAAA,cAAzBA,CAAuDI,KAAMK,CAAAA,aAAN,CAAoB,EAApB,CAMvCjB,QAAQO,CAAAA,aAAR,CAAgEQ,SAAA,EAAa,CACjG,MAAM,CACJG,MADI,CAAA,CAEFN,KAAMO,CAAAA,UAAN,CAAiBX,cAAjB,CAFJ,CAGMY,YAAc,CAACN,KAAD,CAAQO,IAAR,CAAcL,OAAd,CAAAI,EAA0B,CACvCN,KAAL,GACiB,CAAA,CAAf,GAAII,MAAJ,EAAiC,YAAjC,GAAwBG,IAAxB,EAUE,CATMC,KASN,CATqBZ,kBASrB,IAPEA,kBAOF,CAPuB,EAOvB,EALAA,kBAAA,CAAmBK,SAAnB,CAKA;AALgCL,kBAAA,CAAmBK,SAAnB,CAKhC,EALiE,EAKjE,CAJKL,kBAAA,CAAmBK,SAAnB,CAA8BQ,CAAAA,QAA9B,CAAuCP,OAAvC,EAAkD,EAAlD,CAIL,EAHEN,kBAAA,CAAmBK,SAAnB,CAA8BS,CAAAA,IAA9B,CAAmCR,OAAnC,EAA8C,EAA9C,CAGF,CAAKM,KAAL,EACEG,OAAQC,CAAAA,IAAR,CAAa,oDAAb,CAAmEhB,kBAAnE,CAXJ,EAc0CG,OAAA,CAAQC,KAAR,CAAeC,SAAf,CAA0BC,OAA1B,CAf5C,CAD4C,CAoB9CI,YAAYO,CAAAA,UAAZ,CAAyB,CAACb,KAAD,CAAQc,OAAR,CAAiBC,OAAjB,CAA0Bb,OAA1B,CAAAc,EAAsC,CAC7DV,WAAA,CAAYN,KAAZ,CAAmB,YAAnB,CAAkC,KAAIc,OAAJ,kCAA6CC,OAA7C,cAAkEb,OAAA,CAAW,IAAGA,OAAH,EAAX,CAA0B,EAA5F,EAAlC,CAD6D,CAG/D,OAAOI,YA3B0F,CAiCpFpB,QAAQG,CAAAA,OAAR,CAAkBU,OApEsE;",
"sources":["node_modules/antd/lib/_util/warning.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$lib$_util$warning\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.devUseWarning = exports.default = exports.WarningContext = void 0;\nexports.noop = noop;\nexports.resetWarned = resetWarned;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _warning = _interopRequireWildcard(require(\"rc-util/lib/warning\"));\nfunction noop() {}\nlet deprecatedWarnList = null;\nfunction resetWarned() {\n  deprecatedWarnList = null;\n  (0, _warning.resetWarned)();\n}\n// eslint-disable-next-line import/no-mutable-exports\nlet warning = noop;\nif (process.env.NODE_ENV !== 'production') {\n  warning = (valid, component, message) => {\n    (0, _warning.default)(valid, `[antd: ${component}] ${message}`);\n    // StrictMode will inject console which will not throw warning in React 17.\n    if (process.env.NODE_ENV === 'test') {\n      resetWarned();\n    }\n  };\n}\nconst WarningContext = exports.WarningContext = /*#__PURE__*/React.createContext({});\n/**\n * This is a hook but we not named as `useWarning`\n * since this is only used in development.\n * We should always wrap this in `if (process.env.NODE_ENV !== 'production')` condition\n */\nconst devUseWarning = exports.devUseWarning = process.env.NODE_ENV !== 'production' ? component => {\n  const {\n    strict\n  } = React.useContext(WarningContext);\n  const typeWarning = (valid, type, message) => {\n    if (!valid) {\n      if (strict === false && type === 'deprecated') {\n        const existWarning = deprecatedWarnList;\n        if (!deprecatedWarnList) {\n          deprecatedWarnList = {};\n        }\n        deprecatedWarnList[component] = deprecatedWarnList[component] || [];\n        if (!deprecatedWarnList[component].includes(message || '')) {\n          deprecatedWarnList[component].push(message || '');\n        }\n        // Warning for the first time\n        if (!existWarning) {\n          console.warn('[antd] There exists deprecated usage in your code:', deprecatedWarnList);\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(valid, component, message) : void 0;\n      }\n    }\n  };\n  typeWarning.deprecated = (valid, oldProp, newProp, message) => {\n    typeWarning(valid, 'deprecated', `\\`${oldProp}\\` is deprecated. Please use \\`${newProp}\\` instead.${message ? ` ${message}` : ''}`);\n  };\n  return typeWarning;\n} : () => {\n  const noopWarning = () => {};\n  noopWarning.deprecated = noop;\n  return noopWarning;\n};\nvar _default = exports.default = warning;\n};"],
"names":["shadow$provide","global","require","module","exports","noop","_interopRequireWildcard","default","Object","defineProperty","value","devUseWarning","WarningContext","resetWarned","deprecatedWarnList","_warning","React","warning","valid","component","message","createContext","strict","useContext","typeWarning","type","existWarning","includes","push","console","warn","deprecated","oldProp","newProp","typeWarning.deprecated"]
}
