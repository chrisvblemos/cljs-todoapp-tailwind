{
"version":3,
"file":"module$node_modules$rc_tree_select$lib$hooks$useCache.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,qDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG9GC,MAAAA,CAA0BH,OAAA,CAAQ,mEAAR,CAAyDI,CAAAA,OACnFC,OAAAA,CAAyBL,OAAA,CAAQ,kEAAR,CAAwDI,CAAAA,OACrFE,OAAOC,CAAAA,cAAP,CAAsBL,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CM,MAAO,CAAA,CADoC,CAA7C,CAGAN,QAAQE,CAAAA,OAAR,CAAkB,IAAK,EACvB,KAAIK,eAAiBJ,MAAA,CAAuBL,OAAA,CAAQ,0DAAR,CAAvB,CAArB,CACIU,MAAQP,MAAA,CAAwBH,OAAA,CAAQ,iCAAR,CAAxB,CAKGE;OAAQE,CAAAA,OAAR,CAAkBO,QAAiB,CAACC,MAAD,CAAS,CACzD,IAAIC,SAAWH,KAAMI,CAAAA,MAAN,CAAa,CAC1BC,YAAa,IAAIC,GADS,CAAb,CAGf,OAAON,MAAMO,CAAAA,OAAN,CAAc,QAAS,EAAG,CAC/B,IAAIF,YAAcF,QAASK,CAAAA,OAAQH,CAAAA,WAAnC,CACII,iBAAmB,IAAIH,GAD3B,CAEII,aAAeR,MAAOS,CAAAA,GAAP,CAAW,QAAS,CAACC,IAAD,CAAO,CAAA,IACxCd,MAAQc,IAAKd,CAAAA,KAD2B,CAE1Ce,MAAQD,IAAKC,CAAAA,KACXC,MAAAA,CAAwB,IAAV,GAAAD,KAAA,EAA4B,IAAK,EAAjC,GAAkBA,KAAlB,CAAqCA,KAArC,CAA6CR,WAAYU,CAAAA,GAAZ,CAAgBjB,KAAhB,CAG/DW,iBAAiBO,CAAAA,GAAjB,CAAqBlB,KAArB,CAA4BgB,KAA5B,CACA,OAAO,GAAIf,cAAeL,CAAAA,OAAnB,EAA4B,GAAIK,cAAeL,CAAAA,OAAnB,EAA4B,EAA5B,CAAgCkB,IAAhC,CAA5B,CAAmE,EAAnE,CAAuE,CACrEE,KADqE,CAAvE,CAPqC,CAA3B,CAWnBX,SAASK,CAAAA,OAAQH,CAAAA,WAAjB,CAA+BI,gBAC/B,OAAO,CAACC,YAAD,CAfwB,CAA1B;AAgBJ,CAACR,MAAD,CAhBI,CAJkD,CAfuD;",
"sources":["node_modules/rc-tree-select/lib/hooks/useCache.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rc_tree_select$lib$hooks$useCache\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar React = _interopRequireWildcard(require(\"react\"));\n/**\n * This function will try to call requestIdleCallback if available to save performance.\n * No need `getLabel` here since already fetch on `rawLabeledValue`.\n */\nvar _default = exports.default = function _default(values) {\n  var cacheRef = React.useRef({\n    valueLabels: new Map()\n  });\n  return React.useMemo(function () {\n    var valueLabels = cacheRef.current.valueLabels;\n    var valueLabelsCache = new Map();\n    var filledValues = values.map(function (item) {\n      var value = item.value,\n        label = item.label;\n      var mergedLabel = label !== null && label !== void 0 ? label : valueLabels.get(value);\n\n      // Save in cache\n      valueLabelsCache.set(value, mergedLabel);\n      return (0, _objectSpread2.default)((0, _objectSpread2.default)({}, item), {}, {\n        label: mergedLabel\n      });\n    });\n    cacheRef.current.valueLabels = valueLabelsCache;\n    return [filledValues];\n  }, [values]);\n};\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireWildcard","default","_interopRequireDefault","Object","defineProperty","value","_objectSpread2","React","exports.default","values","cacheRef","useRef","valueLabels","Map","useMemo","current","valueLabelsCache","filledValues","map","item","label","mergedLabel","get","set"]
}
