shadow$provide.module$node_modules$antd$lib$typography$Typography=function(global,require,module,exports){"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var React=module(require("module$node_modules$react$index")),_classnames=global(require("module$node_modules$classnames$index")),
_ref=require("module$node_modules$rc_util$lib$ref"),_warning=require("module$node_modules$antd$lib$_util$warning"),_configProvider=require("module$node_modules$antd$lib$config_provider$index"),_style=global(require("module$node_modules$antd$lib$typography$style$index"));require=React.forwardRef((props,ref)=>{const {prefixCls:customizePrefixCls,component:Component="article",className,rootClassName,setContentRef,children,direction:typographyDirection,style}=props;var e="prefixCls component className rootClassName setContentRef children direction style".split(" "),
t={},p;for(p in props)Object.prototype.hasOwnProperty.call(props,p)&&0>e.indexOf(p)&&(t[p]=props[p]);if(null!=props&&"function"===typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(props);i<p.length;i++)0>e.indexOf(p[i])&&Object.prototype.propertyIsEnumerable.call(props,p[i])&&(t[p[i]]=props[p[i]])}const {getPrefixCls,direction:contextDirection,typography}=React.useContext(_configProvider.ConfigContext);props=null!==typographyDirection&&void 0!==typographyDirection?typographyDirection:
contextDirection;ref=setContentRef?(0,_ref.composeRef)(ref,setContentRef):ref;e=getPrefixCls("typography",customizePrefixCls);(0,_warning.devUseWarning)("Typography").deprecated(!setContentRef,"setContentRef","ref");const [wrapCSSVar,hashId,cssVarCls]=(0,_style.default)(e);props=(0,_classnames.default)(e,null===typography||void 0===typography?void 0:typography.className,{[`${e}-rtl`]:"rtl"===props},className,rootClassName,hashId,cssVarCls);e=Object.assign(Object.assign({},null===typography||void 0===
typography?void 0:typography.style),style);return wrapCSSVar(React.createElement(Component,Object.assign({className:props,style:e,ref},t),children))});require.displayName="Typography";exports.default=require}
//# sourceMappingURL=module$node_modules$antd$lib$typography$Typography.js.map
