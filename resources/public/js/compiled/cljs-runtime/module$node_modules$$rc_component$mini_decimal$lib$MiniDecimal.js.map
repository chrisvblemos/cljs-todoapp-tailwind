{
"version":3,
"file":"module$node_modules$$rc_component$mini_decimal$lib$MiniDecimal.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/@rc-component/mini-decimal/lib/MiniDecimal.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$rc_component$mini_decimal$lib$MiniDecimal\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"BigIntDecimal\", {\n  enumerable: true,\n  get: function get() {\n    return _BigIntDecimal.default;\n  }\n});\nObject.defineProperty(exports, \"NumberDecimal\", {\n  enumerable: true,\n  get: function get() {\n    return _NumberDecimal.default;\n  }\n});\nexports.default = getMiniDecimal;\nexports.toFixed = toFixed;\nvar _BigIntDecimal = _interopRequireDefault(require(\"./BigIntDecimal\"));\nvar _NumberDecimal = _interopRequireDefault(require(\"./NumberDecimal\"));\nvar _numberUtil = require(\"./numberUtil\");\nvar _supportUtil = require(\"./supportUtil\");\n/* eslint-disable max-classes-per-file */\n\n// Still support origin export\n\nfunction getMiniDecimal(value) {\n  // We use BigInt here.\n  // Will fallback to Number if not support.\n  if ((0, _supportUtil.supportBigInt)()) {\n    return new _BigIntDecimal.default(value);\n  }\n  return new _NumberDecimal.default(value);\n}\n\n/**\n * Align the logic of toFixed to around like 1.5 => 2.\n * If set `cutOnly`, will just remove the over decimal part.\n */\nfunction toFixed(numStr, separatorStr, precision) {\n  var cutOnly = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  if (numStr === '') {\n    return '';\n  }\n  var _trimNumber = (0, _numberUtil.trimNumber)(numStr),\n    negativeStr = _trimNumber.negativeStr,\n    integerStr = _trimNumber.integerStr,\n    decimalStr = _trimNumber.decimalStr;\n  var precisionDecimalStr = \"\".concat(separatorStr).concat(decimalStr);\n  var numberWithoutDecimal = \"\".concat(negativeStr).concat(integerStr);\n  if (precision >= 0) {\n    // We will get last + 1 number to check if need advanced number\n    var advancedNum = Number(decimalStr[precision]);\n    if (advancedNum >= 5 && !cutOnly) {\n      var advancedDecimal = getMiniDecimal(numStr).add(\"\".concat(negativeStr, \"0.\").concat('0'.repeat(precision)).concat(10 - advancedNum));\n      return toFixed(advancedDecimal.toString(), separatorStr, precision, cutOnly);\n    }\n    if (precision === 0) {\n      return numberWithoutDecimal;\n    }\n    return \"\".concat(numberWithoutDecimal).concat(separatorStr).concat(decimalStr.padEnd(precision, '0').slice(0, precision));\n  }\n  if (precisionDecimalStr === '.0') {\n    return numberWithoutDecimal;\n  }\n  return \"\".concat(numberWithoutDecimal).concat(precisionDecimalStr);\n}\n};"],
"names":["shadow$provide","global","require","module","exports","getMiniDecimal","value","_supportUtil","supportBigInt","_BigIntDecimal","default","_NumberDecimal","toFixed","numStr","separatorStr","precision","cutOnly","arguments","length","undefined","_trimNumber","_numberUtil","trimNumber","negativeStr","integerStr","decimalStr","precisionDecimalStr","concat","numberWithoutDecimal","advancedNum","Number","advancedDecimal","add","repeat","toString","padEnd","slice","_interopRequireDefault","Object","defineProperty","enumerable","get"]
}
