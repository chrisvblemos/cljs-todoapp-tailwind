{
"version":3,
"file":"module$node_modules$antd$lib$form$util.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,sCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGnGC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,UAAR,CAYAA,QAAmB,CAACC,QAAD,CAAWC,QAAX,CAAqB,CACtC,GAAKD,QAASE,CAAAA,MAAd,CAIA,MADMC,SACN,CADiBH,QAASI,CAAAA,IAAT,CAAc,GAAd,CACjB,CAAIH,QAAJ,CACU,GAAEA,QAAF,IAAcE,QAAd,EADV,CAGsBE,qBAAsBC,CAAAA,QAAtBC,CAA+BJ,QAA/BI,CACf,CAAiB,GAdOC,WAcP,IAA8BL,QAA9B,EAAjB,CAA4DA,QAT7B,CAXxCR,QAAQc,CAAAA,SAAR,CAyBAA,QAAkB,CAACC,MAAD,CAASC,QAAT,CAAmBC,IAAnB,CAAyBC,qBAAzB,CAAgDC,WAAhD,CAA6DC,cAA7D,CAA6E,CAE7F,GAAuBC,IAAAA,EAAvB,GAAID,cAAJ,CACEE,qBAAA;AAASF,cADX,KAEO,IAAIH,IAAKM,CAAAA,UAAT,CACLD,qBAAA,CAAS,YADJ,KAEA,IAAIP,MAAOR,CAAAA,MAAX,CACLe,qBAAA,CAAS,OADJ,KAEA,IAAIN,QAAST,CAAAA,MAAb,CACLe,qBAAA,CAAS,SADJ,KAEA,IAAIL,IAAKO,CAAAA,OAAT,EAAoBL,WAApB,EAAmCF,IAAKQ,CAAAA,SAAxC,CAELH,qBAAA,CAAS,SAEX,OAAOA,sBAdsF,CAxB/FtB,QAAQ0B,CAAAA,OAAR,CAMAA,QAAgB,CAACC,SAAD,CAAY,CAC1B,MAAkBN,KAAAA,EAAlB,GAAIM,SAAJ,EAA6C,CAAA,CAA7C,GAA+BA,SAA/B,CAA2D,EAA3D,CACOC,KAAMC,CAAAA,OAAN,CAAcF,SAAd,CAAA,CAA2BA,SAA3B,CAAuC,CAACA,SAAD,CAFpB,CAH5B,OAAMjB,sBAAwB,CAAC,YAAD,CAXqE;",
"sources":["node_modules/antd/lib/form/util.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$lib$form$util\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFieldId = getFieldId;\nexports.getStatus = getStatus;\nexports.toArray = toArray;\n// form item name black list.  in form ,you can use form.id get the form item element.\n// use object hasOwnProperty will get better performance if black list is longer.\nconst formItemNameBlackList = ['parentNode'];\n// default form item id prefix.\nconst defaultItemNamePrefixCls = 'form_item';\nfunction toArray(candidate) {\n  if (candidate === undefined || candidate === false) return [];\n  return Array.isArray(candidate) ? candidate : [candidate];\n}\nfunction getFieldId(namePath, formName) {\n  if (!namePath.length) {\n    return undefined;\n  }\n  const mergedId = namePath.join('_');\n  if (formName) {\n    return `${formName}_${mergedId}`;\n  }\n  const isIllegalName = formItemNameBlackList.includes(mergedId);\n  return isIllegalName ? `${defaultItemNamePrefixCls}_${mergedId}` : mergedId;\n}\n/**\n * Get merged status by meta or passed `validateStatus`.\n */\nfunction getStatus(errors, warnings, meta, defaultValidateStatus, hasFeedback, validateStatus) {\n  let status = defaultValidateStatus;\n  if (validateStatus !== undefined) {\n    status = validateStatus;\n  } else if (meta.validating) {\n    status = 'validating';\n  } else if (errors.length) {\n    status = 'error';\n  } else if (warnings.length) {\n    status = 'warning';\n  } else if (meta.touched || hasFeedback && meta.validated) {\n    // success feedback should display when pass hasFeedback prop and current value is valid value\n    status = 'success';\n  }\n  return status;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","getFieldId","namePath","formName","length","mergedId","join","formItemNameBlackList","includes","isIllegalName","defaultItemNamePrefixCls","getStatus","errors","warnings","meta","defaultValidateStatus","hasFeedback","validateStatus","undefined","status","validating","touched","validated","toArray","candidate","Array","isArray"]
}
