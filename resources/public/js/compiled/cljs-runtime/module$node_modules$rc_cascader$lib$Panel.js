shadow$provide.module$node_modules$rc_cascader$lib$Panel=function(global,require,module,exports){function noop(){}global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=function(props){var _classNames,_ref$prefixCls=props.prefixCls;_ref$prefixCls=void 0===_ref$prefixCls?"rc-cascader":_ref$prefixCls;var style=
props.style,className=props.className,options=props.options,checkable=props.checkable,fieldNames=props.fieldNames,changeOnSelect=props.changeOnSelect,onChange=props.onChange,showCheckedStrategy=props.showCheckedStrategy,loadData=props.loadData,expandTrigger=props.expandTrigger,_ref$expandIcon=props.expandIcon,expandIcon=void 0===_ref$expandIcon?"\x3e":_ref$expandIcon,loadingIcon=props.loadingIcon;_ref$expandIcon=props.direction;var _ref$notFoundContent=props.notFoundContent;_ref$notFoundContent=void 0===
_ref$notFoundContent?"Not Found":_ref$notFoundContent;var disabled=props.disabled,multiple=!!checkable;props=(0,_rcUtil.useMergedState)(props.defaultValue,{value:props.value,postState:_commonUtil.toRawValues});var _useMergedState2=(0,_slicedToArray2.default)(props,2);props=_useMergedState2[0];var setRawValues=_useMergedState2[1],mergedFieldNames=React.useMemo(function(){return(0,_commonUtil.fillFieldNames)(fieldNames)},[JSON.stringify(fieldNames)]);options=(0,_useOptions3.default)(mergedFieldNames,
options);_useMergedState2=(0,_slicedToArray2.default)(options,3);var mergedOptions=_useMergedState2[0];options=_useMergedState2[1];_useMergedState2=_useMergedState2[2];var getMissingValues=(0,_useMissingValues.default)(mergedOptions,mergedFieldNames);props=(0,_useValues3.default)(multiple,props,options,_useMergedState2,getMissingValues);props=(0,_slicedToArray2.default)(props,3);var checkedValues=props[0],halfCheckedValues=props[1];props=props[2];getMissingValues=(0,_rcUtil.useEvent)(function(nextValues){setRawValues(nextValues);
if(onChange){nextValues=(0,_commonUtil.toRawValues)(nextValues);var valueOptions=nextValues.map(function(valueCells){return(0,_treeUtil.toPathOptions)(valueCells,mergedOptions,mergedFieldNames).map(function(valueOpt){return valueOpt.option})});onChange(multiple?nextValues:nextValues[0],multiple?valueOptions:valueOptions[0])}});var handleSelection=(0,_useSelect.default)(multiple,getMissingValues,checkedValues,halfCheckedValues,props,options,_useMergedState2,showCheckedStrategy),onInternalSelect=(0,_rcUtil.useEvent)(function(valuePath){handleSelection(valuePath)});
showCheckedStrategy=React.useMemo(function(){return{options:mergedOptions,fieldNames:mergedFieldNames,values:checkedValues,halfValues:halfCheckedValues,changeOnSelect,onSelect:onInternalSelect,checkable,searchOptions:[],dropdownPrefixCls:void 0,loadData,expandTrigger,expandIcon,loadingIcon,dropdownMenuColumnStyle:void 0}},[mergedOptions,mergedFieldNames,checkedValues,halfCheckedValues,changeOnSelect,onInternalSelect,checkable,loadData,expandTrigger,expandIcon,loadingIcon]);options="".concat(_ref$prefixCls,
"-panel");props=!mergedOptions.length;return React.createElement(_context.default.Provider,{value:showCheckedStrategy},React.createElement("div",{className:(0,_classnames.default)(options,(_classNames={},(0,_defineProperty2.default)(_classNames,"".concat(options,"-rtl"),"rtl"===_ref$expandIcon),(0,_defineProperty2.default)(_classNames,"".concat(options,"-empty"),props),_classNames),className),style},props?_ref$notFoundContent:React.createElement(_List.default,{prefixCls:_ref$prefixCls,searchValue:"",
multiple,toggleOpen:noop,open:!0,direction:_ref$expandIcon,disabled})))};var _defineProperty2=module(require("module$node_modules$$babel$runtime$helpers$defineProperty")),_slicedToArray2=module(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),_classnames=module(require("module$node_modules$classnames$index")),_rcUtil=require("module$node_modules$rc_util$lib$index"),React=global(require("module$node_modules$react$index")),_context=module(require("module$node_modules$rc_cascader$lib$context")),
_useMissingValues=module(require("module$node_modules$rc_cascader$lib$hooks$useMissingValues")),_useOptions3=module(require("module$node_modules$rc_cascader$lib$hooks$useOptions")),_useSelect=module(require("module$node_modules$rc_cascader$lib$hooks$useSelect")),_useValues3=module(require("module$node_modules$rc_cascader$lib$hooks$useValues")),_List=module(require("module$node_modules$rc_cascader$lib$OptionList$List")),_commonUtil=require("module$node_modules$rc_cascader$lib$utils$commonUtil"),_treeUtil=
require("module$node_modules$rc_cascader$lib$utils$treeUtil")}
//# sourceMappingURL=module$node_modules$rc_cascader$lib$Panel.js.map
