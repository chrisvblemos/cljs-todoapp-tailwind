shadow$provide.module$node_modules$rc_picker$lib$PickerInput$RangePicker=function(global,require,module,exports){function separateConfig(config,defaultConfig){config=null!==config&&void 0!==config?config:defaultConfig;return Array.isArray(config)?config:[config,config]}function getActiveRange(activeIndex){return 1===activeIndex?"end":"start"}global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;
Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _extends2=module(require("module$node_modules$$babel$runtime$helpers$extends")),_toConsumableArray2=module(require("module$node_modules$$babel$runtime$helpers$toConsumableArray")),_objectSpread2=module(require("module$node_modules$$babel$runtime$helpers$objectSpread2")),_slicedToArray2=module(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),_rcUtil=require("module$node_modules$rc_util$lib$index"),
_useLayoutEffect=module(require("module$node_modules$rc_util$lib$hooks$useLayoutEffect")),_omit=module(require("module$node_modules$rc_util$lib$omit")),_pickAttrs=module(require("module$node_modules$rc_util$lib$pickAttrs")),_warning=module(require("module$node_modules$rc_util$lib$warning")),React=global(require("module$node_modules$react$index")),_PickerTrigger=module(require("module$node_modules$rc_picker$lib$PickerTrigger$index")),_util=require("module$node_modules$rc_picker$lib$PickerTrigger$util"),
_miscUtil=require("module$node_modules$rc_picker$lib$utils$miscUtil"),_context=module(require("module$node_modules$rc_picker$lib$PickerInput$context")),_useCellRender=module(require("module$node_modules$rc_picker$lib$PickerInput$hooks$useCellRender")),_useFieldsInvalidate3=module(require("module$node_modules$rc_picker$lib$PickerInput$hooks$useFieldsInvalidate")),_useFilledProps3=module(require("module$node_modules$rc_picker$lib$PickerInput$hooks$useFilledProps")),_useOpen3=module(require("module$node_modules$rc_picker$lib$PickerInput$hooks$useOpen")),
_usePickerRef=module(require("module$node_modules$rc_picker$lib$PickerInput$hooks$usePickerRef")),_usePresets=module(require("module$node_modules$rc_picker$lib$PickerInput$hooks$usePresets")),_useRangeActive3=module(require("module$node_modules$rc_picker$lib$PickerInput$hooks$useRangeActive")),_useRangeDisabledDate=module(require("module$node_modules$rc_picker$lib$PickerInput$hooks$useRangeDisabledDate")),_useRangePickerValue3=module(require("module$node_modules$rc_picker$lib$PickerInput$hooks$useRangePickerValue")),
_useRangeValue3=global(require("module$node_modules$rc_picker$lib$PickerInput$hooks$useRangeValue")),_useShowNow=module(require("module$node_modules$rc_picker$lib$PickerInput$hooks$useShowNow")),_Popup=module(require("module$node_modules$rc_picker$lib$PickerInput$Popup$index")),_RangeSelector=module(require("module$node_modules$rc_picker$lib$PickerInput$Selector$RangeSelector"));require=React.forwardRef(function(props,ref){var _useFilledProps=(0,_useFilledProps3.default)(props,function(){var allowEmpty=
props.allowEmpty,mergedDisabled=separateConfig(props.disabled,!1);allowEmpty=separateConfig(allowEmpty,!1);return{disabled:mergedDisabled,allowEmpty}}),_useFilledProps2=(0,_slicedToArray2.default)(_useFilledProps,6),filledProps=_useFilledProps2[0],internalPicker=_useFilledProps2[1],complexPicker=_useFilledProps2[2],formatList=_useFilledProps2[3],maskFormat=_useFilledProps2[4],isInvalidateDate=_useFilledProps2[5],prefixCls=filledProps.prefixCls,styles=filledProps.styles,classNames=filledProps.classNames,
placement=filledProps.placement,defaultValue=filledProps.defaultValue,value=filledProps.value,needConfirm=filledProps.needConfirm,onKeyDown=filledProps.onKeyDown,disabled=filledProps.disabled,allowEmpty=filledProps.allowEmpty,disabledDate=filledProps.disabledDate,minDate=filledProps.minDate,maxDate=filledProps.maxDate,defaultOpen=filledProps.defaultOpen,open=filledProps.open,onOpenChange=filledProps.onOpenChange,locale=filledProps.locale,generateConfig=filledProps.generateConfig,picker=filledProps.picker,
showNow=filledProps.showNow,showToday=filledProps.showToday,showTime=filledProps.showTime,mode=filledProps.mode,onPanelChange=filledProps.onPanelChange,onCalendarChange=filledProps.onCalendarChange,onOk=filledProps.onOk,defaultPickerValue=filledProps.defaultPickerValue,pickerValue=filledProps.pickerValue,onPickerValueChange=filledProps.onPickerValueChange,inputReadOnly=filledProps.inputReadOnly,suffixIcon=filledProps.suffixIcon,onFocus=filledProps.onFocus,onBlur=filledProps.onBlur,presets=filledProps.presets,
ranges=filledProps.ranges,components=filledProps.components,cellRender=filledProps.cellRender,dateRender=filledProps.dateRender,monthCellRender=filledProps.monthCellRender,onClick=filledProps.onClick,selectorRef=(0,_usePickerRef.default)(ref),_useOpen=(0,_useOpen3.default)(open,defaultOpen,disabled,onOpenChange),_useOpen2=(0,_slicedToArray2.default)(_useOpen,2),mergedOpen=_useOpen2[0],setMergeOpen=_useOpen2[1],triggerOpen=function(nextOpen,config){!disabled.some(function(fieldDisabled){return!fieldDisabled})&&
nextOpen||setMergeOpen(nextOpen,config)},_useInnerValue=(0,_useRangeValue3.useInnerValue)(generateConfig,locale,formatList,!0,!1,defaultValue,value,onCalendarChange,onOk),_useInnerValue2=(0,_slicedToArray2.default)(_useInnerValue,5),mergedValue=_useInnerValue2[0],setInnerValue=_useInnerValue2[1],getCalendarValue=_useInnerValue2[2],triggerCalendarChange=_useInnerValue2[3],triggerOk=_useInnerValue2[4],calendarValue=getCalendarValue(),_useRangeActive=(0,_useRangeActive3.default)(disabled,allowEmpty,
mergedOpen),_useRangeActive2=(0,_slicedToArray2.default)(_useRangeActive,9),focused=_useRangeActive2[0],triggerFocus=_useRangeActive2[1],lastOperation=_useRangeActive2[2],activeIndex=_useRangeActive2[3],setActiveIndex=_useRangeActive2[4],nextActiveIndex=_useRangeActive2[5],activeIndexList=_useRangeActive2[6],updateSubmitIndex=_useRangeActive2[7],hasActiveSubmitValue=_useRangeActive2[8],onSharedFocus=function(event,index){triggerFocus(!0);null===onFocus||void 0===onFocus||onFocus(event,{range:getActiveRange(null!==
index&&void 0!==index?index:activeIndex)})},onSharedBlur=function(event,index){triggerFocus(!1);null===onBlur||void 0===onBlur||onBlur(event,{range:getActiveRange(null!==index&&void 0!==index?index:activeIndex)})},mergedShowTime=React.useMemo(function(){if(!showTime)return null;var disabledTime=showTime.disabledTime,proxyDisabledTime=disabledTime?function(date){var range=getActiveRange(activeIndex),fromDate=(0,_miscUtil.getFromDate)(calendarValue,activeIndexList,activeIndex);return disabledTime(date,
range,{from:fromDate})}:void 0;return(0,_objectSpread2.default)((0,_objectSpread2.default)({},showTime),{},{disabledTime:proxyDisabledTime})},[showTime,activeIndex,calendarValue,activeIndexList]),_useMergedState=(0,_rcUtil.useMergedState)([picker,picker],{value:mode}),_useMergedState2=(0,_slicedToArray2.default)(_useMergedState,2),modes=_useMergedState2[0],setModes=_useMergedState2[1],mergedMode=modes[activeIndex]||picker,internalMode="date"===mergedMode&&mergedShowTime?"datetime":mergedMode,multiplePanel=
internalMode===picker&&"time"!==internalMode,mergedShowNow=(0,_useShowNow.default)(picker,mergedMode,showNow,showToday,!0),_useRangeValue=(0,_useRangeValue3.default)(filledProps,mergedValue,setInnerValue,getCalendarValue,triggerCalendarChange,disabled,formatList,focused,mergedOpen,isInvalidateDate),_useRangeValue2=(0,_slicedToArray2.default)(_useRangeValue,2),flushSubmit=_useRangeValue2[0],triggerSubmitChange=_useRangeValue2[1],mergedDisabledDate=(0,_useRangeDisabledDate.default)(calendarValue,disabled,
activeIndexList,generateConfig,locale,disabledDate),_useFieldsInvalidate=(0,_useFieldsInvalidate3.default)(calendarValue,isInvalidateDate,allowEmpty),_useFieldsInvalidate2=(0,_slicedToArray2.default)(_useFieldsInvalidate,2),submitInvalidates=_useFieldsInvalidate2[0],onSelectorInvalid=_useFieldsInvalidate2[1],_useRangePickerValue=(0,_useRangePickerValue3.default)(generateConfig,locale,calendarValue,modes,mergedOpen,activeIndex,internalPicker,multiplePanel,defaultPickerValue,pickerValue,null===mergedShowTime||
void 0===mergedShowTime?void 0:mergedShowTime.defaultOpenValue,onPickerValueChange,minDate,maxDate),_useRangePickerValue2=(0,_slicedToArray2.default)(_useRangePickerValue,2),currentPickerValue=_useRangePickerValue2[0],setCurrentPickerValue=_useRangePickerValue2[1],triggerModeChange=(0,_rcUtil.useEvent)(function(nextPickerValue,nextMode,triggerEvent){nextMode=(0,_miscUtil.fillIndex)(modes,activeIndex,nextMode);nextMode[0]===modes[0]&&nextMode[1]===modes[1]||setModes(nextMode);onPanelChange&&!1!==triggerEvent&&
(triggerEvent=(0,_toConsumableArray2.default)(calendarValue),nextPickerValue&&(triggerEvent[activeIndex]=nextPickerValue),onPanelChange(triggerEvent,nextMode))}),triggerPartConfirm=function(date,skipFocus){var nextValue=calendarValue;date&&(nextValue=(0,_miscUtil.fillIndex)(calendarValue,activeIndex,date));updateSubmitIndex(activeIndex);date=nextActiveIndex(nextValue);triggerCalendarChange(nextValue);flushSubmit(activeIndex,null===date);null===date?triggerOpen(!1,{force:!0}):skipFocus||selectorRef.current.focus({index:date})},
_React$useState=React.useState(null),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),hoverSource=_React$useState2[0],setHoverSource=_React$useState2[1],_React$useState3=React.useState(null),_React$useState4=(0,_slicedToArray2.default)(_React$useState3,2),internalHoverValues=_React$useState4[0],setInternalHoverValues=_React$useState4[1],hoverValues=React.useMemo(function(){return internalHoverValues||calendarValue},[calendarValue,internalHoverValues]);React.useEffect(function(){mergedOpen||
setInternalHoverValues(null)},[mergedOpen]);var _React$useState5=React.useState(0),_React$useState6=(0,_slicedToArray2.default)(_React$useState5,2),activeOffset=_React$useState6[0],setActiveOffset=_React$useState6[1],presetList=(0,_usePresets.default)(presets,ranges),onInternalCellRender=(0,_useCellRender.default)(cellRender,dateRender,monthCellRender,getActiveRange(activeIndex)),panelValue=calendarValue[activeIndex]||null,isPopupInvalidateDate=(0,_rcUtil.useEvent)(function(date){return isInvalidateDate(date,
{activeIndex})}),panelProps=React.useMemo(function(){var domProps=(0,_pickAttrs.default)(filledProps,!1);return(0,_omit.default)(filledProps,[].concat((0,_toConsumableArray2.default)(Object.keys(domProps)),"onChange onCalendarChange style className onPanelChange disabledTime".split(" ")))},[filledProps]),panel=React.createElement(_Popup.default,(0,_extends2.default)({},panelProps,{showNow:mergedShowNow,showTime:mergedShowTime,range:!0,multiplePanel,activeOffset,placement,disabledDate:mergedDisabledDate,
onFocus:function(event){triggerOpen(!0);onSharedFocus(event)},onBlur:onSharedBlur,onPanelMouseDown:function(){lastOperation("panel")},picker,mode:mergedMode,internalMode,onPanelChange:triggerModeChange,format:maskFormat,value:panelValue,isInvalid:isPopupInvalidateDate,onChange:null,onSelect:function(date){var clone=(0,_miscUtil.fillIndex)(calendarValue,activeIndex,date);triggerCalendarChange(clone);needConfirm||complexPicker||internalPicker!==internalMode||triggerPartConfirm(date)},pickerValue:currentPickerValue,
defaultOpenValue:(0,_miscUtil.toArray)(null===showTime||void 0===showTime?void 0:showTime.defaultOpenValue)[activeIndex],onPickerValueChange:setCurrentPickerValue,hoverValue:hoverValues,onHover:function(date){setInternalHoverValues(date?(0,_miscUtil.fillIndex)(calendarValue,activeIndex,date):null);setHoverSource("cell")},needConfirm,onSubmit:triggerPartConfirm,onOk:triggerOk,presets:presetList,onPresetHover:function(nextValues){setInternalHoverValues(nextValues);setHoverSource("preset")},onPresetSubmit:function(nextValues){triggerSubmitChange(nextValues)&&
triggerOpen(!1,{force:!0})},onNow:function(now){triggerPartConfirm(now)},cellRender:onInternalCellRender})),context=React.useMemo(function(){return{prefixCls,locale,generateConfig,button:components.button,input:components.input}},[prefixCls,locale,generateConfig,components.button,components.input]);(0,_useLayoutEffect.default)(function(){mergedOpen&&void 0!==activeIndex&&triggerModeChange(null,picker,!1)},[mergedOpen,activeIndex,picker]);(0,_useLayoutEffect.default)(function(){var lastOp=lastOperation();
mergedOpen||"input"!==lastOp||(triggerOpen(!1),triggerPartConfirm(null,!0));mergedOpen||!complexPicker||needConfirm||"panel"!==lastOp||(triggerOpen(!0),triggerPartConfirm())},[mergedOpen]);disabled.some(function(fieldDisabled,index){return fieldDisabled&&!(null!==value&&void 0!==value&&value[index])&&!(null!==defaultValue&&void 0!==defaultValue&&defaultValue[index])&&!allowEmpty[index]})&&(0,_warning.default)(!1,"`disabled` should not set with empty `value`. You should set `allowEmpty` or `value` instead.");
return React.createElement(_context.default.Provider,{value:context},React.createElement(_PickerTrigger.default,(0,_extends2.default)({},(0,_util.pickTriggerProps)(filledProps),{popupElement:panel,popupStyle:styles.popup,popupClassName:classNames.popup,visible:mergedOpen,onClose:function(){triggerOpen(!1)},range:!0}),React.createElement(_RangeSelector.default,(0,_extends2.default)({},filledProps,{ref:selectorRef,suffixIcon,activeIndex:focused||mergedOpen?activeIndex:null,activeHelp:!!internalHoverValues,
allHelp:!!internalHoverValues&&"preset"===hoverSource,focused,onFocus:function(event,index){var activeListLen=activeIndexList.length,lastActiveIndex=activeIndexList[activeListLen-1];activeListLen&&lastActiveIndex!==index&&needConfirm&&!allowEmpty[lastActiveIndex]&&!hasActiveSubmitValue(lastActiveIndex)&&calendarValue[lastActiveIndex]?selectorRef.current.focus({index:lastActiveIndex}):(lastOperation("input"),triggerOpen(!0,{inherit:!0}),activeIndex!==index&&mergedOpen&&!needConfirm&&complexPicker&&
triggerPartConfirm(null,!0),setActiveIndex(index),onSharedFocus(event,index))},onBlur:function(event,index){triggerOpen(!1);if(!needConfirm&&"input"===lastOperation()){var nextIndex=nextActiveIndex(calendarValue);flushSubmit(activeIndex,null===nextIndex)}onSharedBlur(event,index)},onKeyDown:function(event,preventDefault){"Tab"===event.key&&triggerPartConfirm(null,!0);null===onKeyDown||void 0===onKeyDown||onKeyDown(event,preventDefault)},onSubmit:triggerPartConfirm,value:hoverValues,maskFormat,onChange:function(date,
index){date=(0,_miscUtil.fillIndex)(calendarValue,index,date);triggerCalendarChange(date)},onInputChange:function(){lastOperation("input")},format:formatList,inputReadOnly,disabled,open:mergedOpen,onOpenChange:triggerOpen,onClick:function(event){var _activeElement,rootNode=event.target.getRootNode();selectorRef.current.nativeElement.contains(null!==(_activeElement=rootNode.activeElement)&&void 0!==_activeElement?_activeElement:document.activeElement)||(_activeElement=disabled.findIndex(function(d){return!d}),
0<=_activeElement&&selectorRef.current.focus({index:_activeElement}));triggerOpen(!0);null===onClick||void 0===onClick||onClick(event)},onClear:function(){triggerSubmitChange(null);triggerOpen(!1,{force:!0})},invalid:submitInvalidates,onInvalid:onSelectorInvalid,onActiveOffset:setActiveOffset}))))});require.displayName="RefRangePicker";exports.default=require}
//# sourceMappingURL=module$node_modules$rc_picker$lib$PickerInput$RangePicker.js.map
