shadow$provide.module$node_modules$antd$lib$input$style$variants=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.genOutlinedStyle=exports.genOutlinedGroupStyle=exports.genHoverStyle=exports.genFilledStyle=exports.genFilledGroupStyle=exports.genDisabledStyle=exports.genBorderlessStyle=exports.genBaseOutlinedStyle=void 0;var _cssinjs=require("module$node_modules$$ant_design$cssinjs$lib$index"),_internal=require("module$node_modules$antd$lib$theme$internal");
const genHoverStyle=token=>({borderColor:token.hoverBorderColor,backgroundColor:token.hoverBg});exports.genHoverStyle=genHoverStyle;const genDisabledStyle=token=>({color:token.colorTextDisabled,backgroundColor:token.colorBgContainerDisabled,borderColor:token.colorBorder,boxShadow:"none",cursor:"not-allowed",opacity:1,"input[disabled], textarea[disabled]":{cursor:"not-allowed"},"\x26:hover:not([disabled])":Object.assign({},genHoverStyle((0,_internal.mergeToken)(token,{hoverBorderColor:token.colorBorder,
hoverBg:token.colorBgContainerDisabled})))});exports.genDisabledStyle=genDisabledStyle;const genBaseOutlinedStyle=(token,options)=>({background:token.colorBgContainer,borderWidth:token.lineWidth,borderStyle:token.lineType,borderColor:options.borderColor,"\x26:hover":{borderColor:options.hoverBorderColor,backgroundColor:token.hoverBg},"\x26:focus, \x26:focus-within":{borderColor:options.activeBorderColor,boxShadow:options.activeShadow,outline:0,backgroundColor:token.activeBg}});exports.genBaseOutlinedStyle=
genBaseOutlinedStyle;const genOutlinedStatusStyle=(token,options)=>({[`&${token.componentCls}-status-${options.status}:not(${token.componentCls}-disabled)`]:Object.assign(Object.assign({},genBaseOutlinedStyle(token,options)),{[`${token.componentCls}-prefix, ${token.componentCls}-suffix`]:{color:options.affixColor}}),[`&${token.componentCls}-status-${options.status}${token.componentCls}-disabled`]:{borderColor:options.borderColor}});exports.genOutlinedStyle=(token,extraStyles)=>({"\x26-outlined":Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},
genBaseOutlinedStyle(token,{borderColor:token.colorBorder,hoverBorderColor:token.hoverBorderColor,activeBorderColor:token.activeBorderColor,activeShadow:token.activeShadow})),{[`&${token.componentCls}-disabled, &[disabled]`]:Object.assign({},genDisabledStyle(token))}),genOutlinedStatusStyle(token,{status:"error",borderColor:token.colorError,hoverBorderColor:token.colorErrorBorderHover,activeBorderColor:token.colorError,activeShadow:token.errorActiveShadow,affixColor:token.colorError})),genOutlinedStatusStyle(token,
{status:"warning",borderColor:token.colorWarning,hoverBorderColor:token.colorWarningBorderHover,activeBorderColor:token.colorWarning,activeShadow:token.warningActiveShadow,affixColor:token.colorWarning})),extraStyles)});const genOutlinedGroupStatusStyle=(token,options)=>({[`&${token.componentCls}-group-wrapper-status-${options.status}`]:{[`${token.componentCls}-group-addon`]:{borderColor:options.addonBorderColor,color:options.addonColor}}});exports.genOutlinedGroupStyle=token=>({"\x26-outlined":Object.assign(Object.assign(Object.assign({[`${token.componentCls}-group`]:{"\x26-addon":{background:token.addonBg,
border:`${(0,_cssinjs.unit)(token.lineWidth)} ${token.lineType} ${token.colorBorder}`},"\x26-addon:first-child":{borderInlineEnd:0},"\x26-addon:last-child":{borderInlineStart:0}}},genOutlinedGroupStatusStyle(token,{status:"error",addonBorderColor:token.colorError,addonColor:token.colorErrorText})),genOutlinedGroupStatusStyle(token,{status:"warning",addonBorderColor:token.colorWarning,addonColor:token.colorWarningText})),{[`&${token.componentCls}-group-wrapper-disabled`]:{[`${token.componentCls}-group-addon`]:Object.assign({},
genDisabledStyle(token))}})});exports.genBorderlessStyle=(token,extraStyles)=>{const {componentCls}=token;return{"\x26-borderless":Object.assign({background:"transparent",border:"none","\x26:focus, \x26:focus-within":{outline:"none"},[`&${componentCls}-disabled, &[disabled]`]:{color:token.colorTextDisabled,cursor:"not-allowed"},[`&${componentCls}-status-error`]:{"\x26, \x26 input, \x26 textarea":{color:token.colorError}},[`&${componentCls}-status-warning`]:{"\x26, \x26 input, \x26 textarea":{color:token.colorWarning}}},
extraStyles)}};const genBaseFilledStyle=(token,options)=>({background:options.bg,borderWidth:token.lineWidth,borderStyle:token.lineType,borderColor:"transparent","input\x26, \x26 input, textarea\x26, \x26 textarea":{color:null===options||void 0===options?void 0:options.inputColor},"\x26:hover":{background:options.hoverBg},"\x26:focus, \x26:focus-within":{outline:0,borderColor:options.activeBorderColor,backgroundColor:token.activeBg}}),genFilledStatusStyle=(token,options)=>({[`&${token.componentCls}-status-${options.status}:not(${token.componentCls}-disabled)`]:Object.assign(Object.assign({},
genBaseFilledStyle(token,options)),{[`${token.componentCls}-prefix, ${token.componentCls}-suffix`]:{color:options.affixColor}})});exports.genFilledStyle=(token,extraStyles)=>({"\x26-filled":Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},genBaseFilledStyle(token,{bg:token.colorFillTertiary,hoverBg:token.colorFillSecondary,activeBorderColor:token.activeBorderColor})),{[`&${token.componentCls}-disabled, &[disabled]`]:Object.assign({},genDisabledStyle(token))}),genFilledStatusStyle(token,
{status:"error",bg:token.colorErrorBg,hoverBg:token.colorErrorBgHover,activeBorderColor:token.colorError,inputColor:token.colorErrorText,affixColor:token.colorError})),genFilledStatusStyle(token,{status:"warning",bg:token.colorWarningBg,hoverBg:token.colorWarningBgHover,activeBorderColor:token.colorWarning,inputColor:token.colorWarningText,affixColor:token.colorWarning})),extraStyles)});const genFilledGroupStatusStyle=(token,options)=>({[`&${token.componentCls}-group-wrapper-status-${options.status}`]:{[`${token.componentCls}-group-addon`]:{background:options.addonBg,
color:options.addonColor}}});exports.genFilledGroupStyle=token=>({"\x26-filled":Object.assign(Object.assign(Object.assign({[`${token.componentCls}-group`]:{"\x26-addon":{background:token.colorFillTertiary},[`${token.componentCls}-filled:not(:focus):not(:focus-within)`]:{"\x26:not(:first-child)":{borderInlineStart:`${(0,_cssinjs.unit)(token.lineWidth)} ${token.lineType} ${token.colorSplit}`},"\x26:not(:last-child)":{borderInlineEnd:`${(0,_cssinjs.unit)(token.lineWidth)} ${token.lineType} ${token.colorSplit}`}}}},
genFilledGroupStatusStyle(token,{status:"error",addonBg:token.colorErrorBg,addonColor:token.colorErrorText})),genFilledGroupStatusStyle(token,{status:"warning",addonBg:token.colorWarningBg,addonColor:token.colorWarningText})),{[`&${token.componentCls}-group-wrapper-disabled`]:{[`${token.componentCls}-group`]:{"\x26-addon":{background:token.colorFillTertiary,color:token.colorTextDisabled},"\x26-addon:first-child":{borderInlineStart:`${(0,_cssinjs.unit)(token.lineWidth)} ${token.lineType} ${token.colorBorder}`,
borderTop:`${(0,_cssinjs.unit)(token.lineWidth)} ${token.lineType} ${token.colorBorder}`,borderBottom:`${(0,_cssinjs.unit)(token.lineWidth)} ${token.lineType} ${token.colorBorder}`},"\x26-addon:last-child":{borderInlineEnd:`${(0,_cssinjs.unit)(token.lineWidth)} ${token.lineType} ${token.colorBorder}`,borderTop:`${(0,_cssinjs.unit)(token.lineWidth)} ${token.lineType} ${token.colorBorder}`,borderBottom:`${(0,_cssinjs.unit)(token.lineWidth)} ${token.lineType} ${token.colorBorder}`}}}})})}
//# sourceMappingURL=module$node_modules$antd$lib$input$style$variants.js.map
