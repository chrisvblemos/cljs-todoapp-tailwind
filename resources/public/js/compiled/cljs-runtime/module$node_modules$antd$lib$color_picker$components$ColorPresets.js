shadow$provide.module$node_modules$antd$lib$color_picker$components$ColorPresets=function(global,require,module,exports){"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.isBright=exports.default=void 0;var _react=module(require("module$node_modules$react$index")),_colorPicker=require("module$node_modules$$rc_component$color_picker$lib$index"),
_classnames=global(require("module$node_modules$classnames$index")),_useMergedState=global(require("module$node_modules$rc_util$lib$hooks$useMergedState")),_collapse=global(require("module$node_modules$antd$lib$collapse$index")),_locale=require("module$node_modules$antd$lib$locale$index"),_internal=require("module$node_modules$antd$lib$theme$internal"),_util=require("module$node_modules$antd$lib$color_picker$util");const genPresetColor=list=>list.map(value=>{value.colors=value.colors.map(_util.generateColor);
return value}),isBright=(value,bgColorToken)=>{const {r,g,b,a}=value.toRgb();value=(new _colorPicker.Color(value.toRgbString())).onBackground(bgColorToken).toHsv();return.5>=a?.5<value.v:192<.299*r+.587*g+.114*b};exports.isBright=isBright;const genCollapsePanelKey=(preset,index)=>{var _a;return`panel-${null!==(_a=preset.key)&&void 0!==_a?_a:index}`};exports.default=_ref=>{let {prefixCls,presets,value:color,onChange}=_ref;const [locale]=(0,_locale.useLocale)("ColorPicker"),[,token]=(0,_internal.useToken)(),
[presetsValue]=(0,_useMergedState.default)(genPresetColor(presets),{value:genPresetColor(presets),postState:genPresetColor}),colorPresetsPrefixCls=`${prefixCls}-presets`;_ref=(0,_react.useMemo)(()=>presetsValue.reduce((acc,preset,index)=>{const {defaultOpen=!0}=preset;defaultOpen&&acc.push(genCollapsePanelKey(preset,index));return acc},[]),[presetsValue]);const items=presetsValue.map((preset,index)=>{var _a;return{key:genCollapsePanelKey(preset,index),label:_react.default.createElement("div",{className:`${colorPresetsPrefixCls}-label`},
null===preset||void 0===preset?void 0:preset.label),children:_react.default.createElement("div",{className:`${colorPresetsPrefixCls}-items`},Array.isArray(null===preset||void 0===preset?void 0:preset.colors)&&0<(null===(_a=preset.colors)||void 0===_a?void 0:_a.length)?preset.colors.map((presetColor,index)=>_react.default.createElement(_colorPicker.ColorBlock,{key:`preset-${index}-${presetColor.toHexString()}`,color:(0,_util.generateColor)(presetColor).toRgbString(),prefixCls,className:(0,_classnames.default)(`${colorPresetsPrefixCls}-color`,
{[`${colorPresetsPrefixCls}-color-checked`]:presetColor.toHexString()===(null===color||void 0===color?void 0:color.toHexString()),[`${colorPresetsPrefixCls}-color-bright`]:isBright(presetColor,token.colorBgElevated)}),onClick:()=>{null===onChange||void 0===onChange?void 0:onChange(presetColor)}})):_react.default.createElement("span",{className:`${colorPresetsPrefixCls}-empty`},locale.presetEmpty))}});return _react.default.createElement("div",{className:colorPresetsPrefixCls},_react.default.createElement(_collapse.default,
{defaultActiveKey:_ref,ghost:!0,items}))}}
//# sourceMappingURL=module$node_modules$antd$lib$color_picker$components$ColorPresets.js.map
