{
"version":3,
"file":"module$node_modules$rc_tree$lib$utils$treeUtil.js",
"lineCount":16,
"mappings":"AAAAA,cAAA,CAAA,8CAAA,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA2B3GC,QAASA,YAAW,CAACC,KAAD,CAAQC,KAAR,CAAe,CACjC,MAAO,EAAGC,CAAAA,MAAH,CAAUF,KAAV,CAAiB,GAAjB,CAAsBE,CAAAA,MAAtB,CAA6BD,KAA7B,CAD0B,CAGnCE,QAASA,WAAU,CAACC,IAAD,CAAO,CACxB,MAAOA,KAAP,EAAeA,IAAKC,CAAAA,IAApB,EAA4BD,IAAKC,CAAAA,IAAKF,CAAAA,UADd,CAG1BG,QAASA,OAAM,CAACC,GAAD,CAAMC,GAAN,CAAW,CACxB,MAAY,KAAZ,GAAID,GAAJ,EAA4BE,IAAAA,EAA5B,GAAoBF,GAApB,CACSA,GADT,CAGOC,GAJiB,CAM1BE,QAASA,eAAc,CAACC,UAAD,CAAa,CAC9BC,UAAAA,CAAOD,UAAPC,EAAqB,EAKzB,KAAIC,YAJMD,UAAKE,CAAAA,KAIXD,EAAuB,OAC3B,OAAO,CACLC,MAAOD,WADF,CAELE,OANSH,UAAKG,CAAAA,MAMdA,EAAkB,CAACF,WAAD,CAFb,CAGLN,IANMK,UAAKL,CAAAA,GAMXA;AAAY,KAHP,CAILS,SANWJ,UAAKI,CAAAA,QAMhBA,EAAsB,UAJjB,CAP2B,CA6HpCC,QAASA,kBAAiB,CAACC,SAAD,CAAYC,QAAZ,CAE1BC,MAF0B,CAElB,CAwCNC,QAASA,YAAW,CAACjB,IAAD,CAAOH,KAAP,CAAcqB,MAAd,CAAsBC,SAAtB,CAAiC,CACnD,IAAIP,SAAWZ,IAAA,CAAOA,IAAA,CAAKoB,qBAAL,CAAP,CAAqCN,SAApD,CACIV,IAAMJ,IAAA,CAAOL,WAAA,CAAYuB,MAAOd,CAAAA,GAAnB,CAAwBP,KAAxB,CAAP,CAAwC,GADlD,CAEIwB,aAAerB,IAAA,CAAO,EAAGF,CAAAA,MAAH,CAAU,GAAIwB,mBAAoBC,CAAAA,OAAxB,EAAiCJ,SAAjC,CAAV,CAAuD,CAACnB,IAAD,CAAvD,CAAP,CAAwE,EAGvFA,KAAJ,GACMG,SAUJ,CAVUqB,eAAA,CAAgBxB,IAAhB,CAAsBI,GAAtB,CAUV,CAAAW,QAAA,CATYU,CACJzB,IADIyB,CAEH5B,KAFG4B,CAGLrB,GAHKqB,CAIVtB,IAAKA,SAJKsB,CAKVC,UAAWR,MAAOlB,CAAAA,IAAP,CAAckB,MAAOd,CAAAA,GAArB,CAA2B,IAL5BqB,CAMV7B,MAAOsB,MAAOtB,CAAAA,KAAdA,CAAsB,CANZ6B,CAOVE,MAAON,YAPGI,CASZ,CAXF,CAeIb,SAAJ;AACEA,QAASgB,CAAAA,OAAT,CAAiB,QAAS,CAACC,OAAD,CAAUC,QAAV,CAAoB,CAC5Cb,WAAA,CAAYY,OAAZ,CAAqBC,QAArB,CAA+B,CACvB9B,IADuB,CAExBI,GAFwB,CAG7BR,MAAOsB,MAAA,CAASA,MAAOtB,CAAAA,KAAhB,CAAwB,CAAxB,CAA4B,CAAC,CAHP,CAA/B,CAIGyB,YAJH,CAD4C,CAA9C,CAtBiD,CAvCrD,IAAIU,aAAe,EAQnBA,aAAA,EANEA,YAMF,CAPsC,QAAtC,GAAI,GAAIC,QAAST,CAAAA,OAAb,EAAsBP,MAAtB,CAAJ,CACiBA,MADjB,CAGiB,CACbiB,eAAgBjB,MADH,CAIjB,GAA+B,EAI7BkB,OAAAA,CAAmBC,YAAcD,CAAAA,gBAb7B,KAcJD,eAAiBE,YAAcF,CAAAA,cAE7BG,aAAAA,CAAmB9B,cAAA,CADR6B,YAAc5B,CAAAA,UACN,CAhBjB,KAiBJ8B,SAAWD,YAAiBjC,CAAAA,GAC5BmC,aAAAA,CAAgBF,YAAiBxB,CAAAA,QACnC,KAAIQ,sBAAwBc,MAAxBd,EAA4CkB,YAAhD;AAGId,eACAS,eAAJ,CACgC,QAA9B,GAAI,MAAOA,eAAX,CACET,eADF,CACoBA,QAAwB,CAACxB,IAAD,CAAO,CAC/C,MAAOA,KAAA,CAAKiC,cAAL,CADwC,CADnD,CAIqC,UAJrC,GAIW,MAAOA,eAJlB,GAKET,eALF,CAKoBA,QAAwB,CAACxB,IAAD,CAAO,CAC/C,MAAOiC,eAAA,CAAejC,IAAf,CADwC,CALnD,CADF,CAWEwB,eAXF,CAWoBA,QAAwB,CAACxB,IAAD,CAAOI,GAAP,CAAY,CACpD,MAAOF,OAAA,CAAOF,IAAA,CAAKqC,QAAL,CAAP,CAAuBjC,GAAvB,CAD6C,CAqCxDa,YAAA,CAAY,IAAZ,CAvEM,CAnKJsB,MAAAA,CAAyB/C,OAAA,CAAQ,kEAAR,CAC7BgD,OAAOC,CAAAA,cAAP,CAAsB/C,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CgD,MAAO,CAAA,CADoC,CAA7C,CAGAhD,QAAQiD,CAAAA,qBAAR,CA2OAA,QAA8B,CAAC7B,SAAD,CAAY,CAAA,IACpC8B;AAA2B,CAAnB,CAAAC,SAAUC,CAAAA,MAAV,EAAyCzC,IAAAA,EAAzC,GAAwBwC,SAAA,CAAU,CAAV,CAAxB,CAAqDA,SAAA,CAAU,CAAV,CAArD,CAAoE,EADxC,CAEtCE,YAAcH,KAAMG,CAAAA,WAFkB,CAGtCC,cAAgBJ,KAAMI,CAAAA,aAHgB,CAItCC,kBAAoBL,KAAMK,CAAAA,iBAJY,CAMtCf,iBAAmBU,KAAMV,CAAAA,gBANa,CAOtC3B,WAAaqC,KAAMrC,CAAAA,UAPmB,CASxC2C,qBAA0C,CAAnB,CAAAL,SAAUC,CAAAA,MAAV,CAAuBD,SAAA,CAAU,CAAV,CAAvB,CAAsCxC,IAAAA,EAEzD8C,MAAAA,CANeP,KAAMX,CAAAA,cAMrBkB,EAAyCD,oBAC7C,KAAIE,YAAc,EAAlB,CACIC,YAAc,EADlB,CAEIC,QAAU,CACCF,WADD,CAECC,WAFD,CAIVN,YAAJ,GACEO,OADF,CACYP,WAAA,CAAYO,OAAZ,CADZ,EACoCA,OADpC,CAGAzC,kBAAA,CAAkBC,SAAlB,CAA6B,QAAS,CAACyC,IAAD,CAAO,CAAA,IAGzCnD;AAAMmD,IAAKnD,CAAAA,GAH8B,CAIzCD,IAAMoD,IAAKpD,CAAAA,GAJ8B,CAKzCuB,UAAY6B,IAAK7B,CAAAA,SAGf8B,KAAAA,CAAS,CACXxD,KARSuD,IAAKvD,CAAAA,IAOH,CAEX2B,MAHQ4B,IAAK5B,CAAAA,KACF,CAGX9B,MATQ0D,IAAK1D,CAAAA,KAMF,CAINM,GAJM,CAKNC,GALM,CAMXR,MARQ2D,IAAK3D,CAAAA,KAEF,CAQT6D,IAAAA,CAAYvD,MAAA,CAAOC,GAAP,CAAYC,GAAZ,CAChBgD,YAAA,CAAYhD,GAAZ,CAAA,CAAmBoD,IACnBH,YAAA,CAAYI,GAAZ,CAAA,CAAyBD,IAGzBA,KAAOtC,CAAAA,MAAP,CAAgBkC,WAAA,CAAY1B,SAAZ,CACZ8B,KAAOtC,CAAAA,MAAX,GACEsC,IAAOtC,CAAAA,MAAON,CAAAA,QACd,CADyB4C,IAAOtC,CAAAA,MAAON,CAAAA,QACvC,EADmD,EACnD,CAAA4C,IAAOtC,CAAAA,MAAON,CAAAA,QAAS8C,CAAAA,IAAvB,CAA4BF,IAA5B,CAFF,CAIIR,cAAJ,EACEA,aAAA,CAAcQ,IAAd,CAAsBF,OAAtB,CA3ByC,CAA7C,CA6BG,CACDrB,eAAgBkB,KADf,CAEiBjB,gBAFjB,CAGW3B,UAHX,CA7BH,CAkCI0C,kBAAJ,EACEA,iBAAA,CAAkBK,OAAlB,CAEF,OAAOA,QA1DiC,CA1O1C5D,QAAQiE,CAAAA,2BAAR;AAsUAA,QAAoC,CAACC,KAAD,CAAQ,CAAA,IAExCC,SAAWD,KAAMC,CAAAA,QAFuB,CAGxCC,SAAWF,KAAME,CAAAA,QAHuB,CAIxCC,QAAUH,KAAMG,CAAAA,OAJwB,CAKxCC,OAASJ,KAAMI,CAAAA,MALyB,CAMxCC,QAAUL,KAAMK,CAAAA,OANwB,CAOxCC,YAAcN,KAAMM,CAAAA,WAPoB,CAQxCC,SAAWP,KAAMO,CAAAA,QARuB,CASxCC,eAAiBR,KAAMQ,CAAAA,cATiB,CAUxCC,kBAAoBT,KAAMS,CAAAA,iBAVc,CAWxCjE,IAAMwD,KAAMxD,CAAAA,GAX4B,CAYxCkE,OAASV,KAAMU,CAAAA,MAZyB,CAaxCC,SAAWX,KAAMW,CAAAA,QACfC,SAAAA,CAAY,GAAIC,cAAelD,CAAAA,OAAnB,EAA4B,GAAIkD,cAAelD,CAAAA,OAAnB,EAA4B,EAA5B,CAbjCqC,KAAMc,CAAAA,IAa2B,CAA5B,CAAmE,EAAnE,CAAuE,CAC3Eb,QAD2E,CAE3EC,QAF2E,CAG5EC,OAH4E,CAI7EC,MAJ6E,CAK5EC,OAL4E,CAMxEC,WANwE,CAO3EC,QAP2E,CAQrEC,cARqE,CASlEC,iBATkE,CAUhFjE,GAVgF;AAW7EkE,MAX6E,CAYrFnE,IAAKoE,QAZgF,CAAvE,CAcV,QAAN,EAAiBC,SAAjB,EACEhC,MAAOC,CAAAA,cAAP,CAAsB+B,QAAtB,CAAiC,OAAjC,CAA0C,CACxCG,IAAKA,QAAY,EAAG,CAClB,GAAIC,QAASrD,CAAAA,OAAb,EAAsB,CAAA,CAAtB,CAA6B,uIAA7B,CACA,OAAOqC,MAFW,CADoB,CAA1C,CAOF,OAAOY,SApCmC,CArU5C9E,QAAQmF,CAAAA,iBAAR,CAoEAA,QAA0B,CAACC,SAAD,CAAY,CACpCC,QAASA,IAAG,CAAC/E,IAAD,CAAO,CAEjB,MADgBgF,GAAIC,QAAS1D,CAAAA,OAAbyD,EAAsBhF,IAAtBgF,CACCE,CAAAA,GAAV,CAAc,QAAS,CAACC,QAAD,CAAW,CAEvC,GAAI,CAACpF,UAAA,CAAWoF,QAAX,CAAL,CAEE,MADA,GAAIP,QAASrD,CAAAA,OAAb,EAAsB,CAAC4D,QAAvB,CAAiC,qDAAjC,CACO;AAAA,IAET,KAAIhF,IAAMgF,QAAShF,CAAAA,GAAnB,CACIiF,gBAAkBD,QAASvB,CAAAA,KAC7BhD,SAAAA,CAAWwE,eAAgBxE,CAAAA,QAC3ByE,gBAAAA,CAAO,GAAIC,yBAA0B/D,CAAAA,OAA9B,EAAuC6D,eAAvC,CAAwDG,SAAxD,CACLC,IAAAA,CAAW,GAAIf,cAAelD,CAAAA,OAAnB,EAA4B,CACpCpB,GADoC,CAA5B,CAEZkF,eAFY,CAGXI,SAAAA,CAAiBV,GAAA,CAAInE,QAAJ,CACjB6E,SAAe3C,CAAAA,MAAnB,GACE0C,GAAS5E,CAAAA,QADX,CACsB6E,QADtB,CAGA,OAAOD,IAjBgC,CAAlC,CAkBJE,CAAAA,MAlBI,CAkBG,QAAS,CAACF,QAAD,CAAW,CAC5B,MAAOA,SADqB,CAlBvB,CAFU,CAwBnB,MAAOT,IAAA,CAAID,SAAJ,CAzB6B,CAnEtCpF,QAAQY,CAAAA,cAAR,CAAyBA,cACzBZ,QAAQiG,CAAAA,eAAR,CAoGAA,QAAwB,CAACC,YAAD,CAAeC,YAAf,CAA6BtF,UAA7B,CAAyC,CAO/DwE,QAASA,IAAG,CAACe,IAAD,CAAO,CACjB,IAAI5E;AAA4B,CAAnB,CAAA2B,SAAUC,CAAAA,MAAV,EAAyCzC,IAAAA,EAAzC,GAAwBwC,SAAA,CAAU,CAAV,CAAxB,CAAqDA,SAAA,CAAU,CAAV,CAArD,CAAoE,IACjF,OAAOiD,KAAKZ,CAAAA,GAAL,CAAS,QAAS,CAACC,QAAD,CAAWtF,KAAX,CAAkB,CAMzC,IALA,IAAIO,IAAMT,WAAA,CAAYuB,MAAA,CAASA,MAAOd,CAAAA,GAAhB,CAAsB,GAAlC,CAAuCP,KAAvC,CAAV,CACI4D,UAAYvD,MAAA,CAAOiF,QAAA,CAAS9C,QAAT,CAAP,CAA2BjC,GAA3B,CADhB,CAIIK,WAJJ,CAKSsF,EAAI,CAAb,CAAgBA,CAAhB,CAAoBC,WAAYlD,CAAAA,MAAhC,CAAwCiD,CAAxC,EAA6C,CAA7C,CAAgD,CAC9C,IAAIE,WAAaD,WAAA,CAAYD,CAAZ,CACjB,IAA6B1F,IAAAA,EAA7B,GAAI8E,QAAA,CAASc,UAAT,CAAJ,CAAwC,CACtCxF,WAAA,CAAc0E,QAAA,CAASc,UAAT,CACd,MAFsC,CAFM,CAU5CC,KAAAA,CAAc1D,MAAO2D,CAAAA,MAAP,CAAc,GAAIC,KAAM7E,CAAAA,OAAV,EAAmB4D,QAAnB,CAA6B,EAAGrF,CAAAA,MAAH,CAAU,GAAIwB,mBAAoBC,CAAAA,OAAxB,EAAiCyE,WAAjC,CAAV,CAAyD,CAAC3D,QAAD,CAAWC,aAAX,CAAzD,CAA7B,CAAd,CAAiI,CACjJ5B,MAAOD,WAD0I,CAEjJN,IAAKsD,SAF4I;AAGzIvC,MAHyI,CAI5Id,GAJ4I,CAKjJQ,SAAU,IALuI,CAMjJ8D,KAAMS,QAN2I,CAOjJkB,QAAS,EAAGvG,CAAAA,MAAH,CAAU,GAAIwB,mBAAoBC,CAAAA,OAAxB,EAAiCL,MAAA,CAASA,MAAOmF,CAAAA,OAAhB,CAA0B,EAA3D,CAAV,CAA0E,CAAW,CAAX,GAACxG,KAAD,CAA1E,CAPwI,CAQjJyG,MAAO,EAAGxG,CAAAA,MAAH,CAAU,GAAIwB,mBAAoBC,CAAAA,OAAxB,EAAiCL,MAAA,CAASA,MAAOoF,CAAAA,KAAhB,CAAwB,EAAzD,CAAV,CAAwE,CAACzG,KAAD,GAAWiG,IAAKhD,CAAAA,MAAhB,CAAyB,CAAzB,CAAxE,CAR0I,CAAjI,CAUlByD,YAAY7C,CAAAA,IAAZ,CAAiBwC,KAAjB,CAGqB,EAAA,CAArB,GAAIL,YAAJ,EAA6BW,cAAeC,CAAAA,GAAf,CAAmBhD,SAAnB,CAA7B,CACEyC,KAAYtF,CAAAA,QADd,CACyBmE,GAAA,CAAII,QAAA,CAAS7C,aAAT,CAAJ,EAA+B,EAA/B,CAAmC4D,KAAnC,CADzB,CAGEA,KAAYtF,CAAAA,QAHd,CAGyB,EAEzB,OAAOsF,MAlCkC,CAApC,CAFU,CANfQ,UAAAA,CAAkBpG,cAAA,CAAeC,UAAf,CADyC,KAE7DyF,YAAcU,UAAgB/F,CAAAA,MAF+B,CAG7D0B,SAAWqE,UAAgBvG,CAAAA,GAHkC,CAI7DmC,cAAgBoE,UAAgB9F,CAAAA,QAJ6B;AAK3D4F,eAAiB,IAAIG,GAAJ,CAAyB,CAAA,CAAjB,GAAAd,YAAA,CAAwB,EAAxB,CAA6BA,YAArC,CAL0C,CAM3DU,YAAc,EAwClBxB,IAAA,CAAIa,YAAJ,CACA,OAAOW,YA/CwD,CAnGjE7G,QAAQQ,CAAAA,MAAR,CAAiBA,MACjBR,QAAQC,CAAAA,WAAR,CAAsBA,WACtBD,QAAQkH,CAAAA,gBAAR,CAmSAA,QAAyB,CAACzG,GAAD,CAAM0G,KAAN,CAAa,CAAA,IAChChB,aAAegB,KAAMhB,CAAAA,YADW,CAElCiB,aAAeD,KAAMC,CAAAA,YAFa,CAGlCC,WAAaF,KAAME,CAAAA,UAHe,CAIlCC,YAAcH,KAAMG,CAAAA,WAJc,CAKlCC,YAAcJ,KAAMI,CAAAA,WALc,CAMlCC,gBAAkBL,KAAMK,CAAAA,eANU,CAOlCC,gBAAkBN,KAAMM,CAAAA,eAPU,CAQlCC,aAAeP,KAAMO,CAAAA,YAEnB5D,MAAAA,CAAS,GAAI6D,QAAS9F,CAAAA,OAAb,EADGsF,KAAMxD,CAAAA,WACT;AAAmClD,GAAnC,CAiBb,OAhBoBmH,CAClB/C,SAAUpE,GADQmH,CAElBzD,SAAwC,CAAC,CAAzCA,GAAUgC,YAAa0B,CAAAA,OAAb,CAAqBpH,GAArB,CAFQmH,CAGlBxD,SAAwC,CAAC,CAAzCA,GAAUgD,YAAaS,CAAAA,OAAb,CAAqBpH,GAArB,CAHQmH,CAIlBtD,OAAoC,CAAC,CAArCA,GAAQ+C,UAAWQ,CAAAA,OAAX,CAAmBpH,GAAnB,CAJUmH,CAKlBrD,QAAsC,CAAC,CAAvCA,GAAS+C,WAAYO,CAAAA,OAAZ,CAAoBpH,GAApB,CALSmH,CAMlBvD,QAAsC,CAAC,CAAvCA,GAASkD,WAAYM,CAAAA,OAAZ,CAAoBpH,GAApB,CANSmH,CAOlBpD,YAA8C,CAAC,CAA/CA,GAAagD,eAAgBK,CAAAA,OAAhB,CAAwBpH,GAAxB,CAPKmH,CAQlBlH,IAAKoH,MAAA,CAAOhE,KAAA,CAASA,KAAOpD,CAAAA,GAAhB,CAAsB,EAA7B,CARakH,CAYlBnD,SAAUgD,eAAVhD,GAA8BhE,GAA9BgE,EAAsD,CAAtDA,GAAqCiD,YAZnBE,CAalBlD,eAAgB+C,eAAhB/C,GAAoCjE,GAApCiE,EAA4D,CAAC,CAA7DA,GAA2CgD,YAbzBE,CAclBjD,kBAAmB8C,eAAnB9C,GAAuClE,GAAvCkE,EAA+D,CAA/DA,GAA8C+C,YAd5BE,CAXgB,CAlStC5H,QAAQK,CAAAA,UAAR,CAAqBA,UACrBL,QAAQmB,CAAAA,iBAAR;AAA4BA,iBAC5BnB,QAAQ+H,CAAAA,iBAAR,CAwCAA,QAA0B,CAACC,QAAD,CAAWnH,UAAX,CAAuB,CAE/CwE,QAASA,IAAG,CAACe,IAAD,CAAO,CACjB,IAAI6B,KAA0B,CAAnB,CAAA9E,SAAUC,CAAAA,MAAV,EAAyCzC,IAAAA,EAAzC,GAAwBwC,SAAA,CAAU,CAAV,CAAxB,CAAqDA,SAAA,CAAU,CAAV,CAArD,CAAoE,EAClEjB,EAAZkE,IAAYlE,EAAJ,EAAIA,EAAAA,OAAb,CAAqB,QAAS,CAACuD,QAAD,CAAW,CACvC,IAAIhF,IAAMgF,QAAA,CAAS5E,UAAWJ,CAAAA,GAApB,CACNS,SAAAA,CAAWuE,QAAA,CAAS5E,UAAWK,CAAAA,QAApB,CACf,IAAIgE,QAASrD,CAAAA,OAAb,EAA8B,IAA9B,GAAsBpB,GAAtB,EAA8CE,IAAAA,EAA9C,GAAsCF,GAAtC,CAAyD,sCAAuCL,CAAAA,MAAvC,CAA8C6H,IAA9C,CAAoD7H,CAAAA,MAApD,CAA2DK,GAA3D,CAAgE,GAAhE,CAAzD,CACA,KAAIyH,UAAYJ,MAAA,CAAOrH,GAAP,CAChB,IAAIyE,QAASrD,CAAAA,OAAb,EAAsB,CAACsG,IAAKpB,CAAAA,GAAL,CAASmB,SAAT,CAAvB,EAAsD,IAAtD,GAA8CzH,GAA9C,EAAsEE,IAAAA,EAAtE,GAA8DF,GAA9D,CAAiF,gCAAiCL,CAAAA,MAAjC,CAAwC8H,SAAxC,CAAjF,CACAC;IAAKC,CAAAA,GAAL,CAASF,SAAT,CAAoB,CAAA,CAApB,CACA7C,IAAA,CAAInE,QAAJ,CAAc,EAAGd,CAAAA,MAAH,CAAU6H,IAAV,CAAgB7H,CAAAA,MAAhB,CAAuB8H,SAAvB,CAAkC,QAAlC,CAAd,CAPuC,CAAzC,CAFiB,CADnB,IAAIC,KAAO,IAAIE,GAafhD,IAAA,CAAI2C,QAAJ,CAd+C,CAvCjD,KAAI1F,SAAWO,MAAA,CAAuB/C,OAAA,CAAQ,mDAAR,CAAvB,CAAf,CACI8B,oBAAsBiB,MAAA,CAAuB/C,OAAA,CAAQ,8DAAR,CAAvB,CAD1B,CAEIiF,eAAiBlC,MAAA,CAAuB/C,OAAA,CAAQ,0DAAR,CAAvB,CAFrB,CAGI8F,0BAA4B/C,MAAA,CAAuB/C,OAAA,CAAQ,oEAAR,CAAvB,CAHhC,CAIIyF;AAAW1C,MAAA,CAAuB/C,OAAA,CAAQ,kDAAR,CAAvB,CAJf,CAKI4G,MAAQ7D,MAAA,CAAuB/C,OAAA,CAAQ,sCAAR,CAAvB,CALZ,CAMIoF,SAAWrC,MAAA,CAAuB/C,OAAA,CAAQ,yCAAR,CAAvB,CANf,CAOI6H,SAAW9E,MAAA,CAAuB/C,OAAA,CAAQ,+CAAR,CAAvB,CAPf,CAQI+F,UAAY,CAAC,UAAD,CA1B2F;",
"sources":["node_modules/rc-tree/lib/utils/treeUtil.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rc_tree$lib$utils$treeUtil\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.convertDataToEntities = convertDataToEntities;\nexports.convertNodePropsToEventData = convertNodePropsToEventData;\nexports.convertTreeToData = convertTreeToData;\nexports.fillFieldNames = fillFieldNames;\nexports.flattenTreeData = flattenTreeData;\nexports.getKey = getKey;\nexports.getPosition = getPosition;\nexports.getTreeNodeProps = getTreeNodeProps;\nexports.isTreeNode = isTreeNode;\nexports.traverseDataNodes = traverseDataNodes;\nexports.warningWithoutKey = warningWithoutKey;\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _toArray = _interopRequireDefault(require(\"rc-util/lib/Children/toArray\"));\nvar _omit = _interopRequireDefault(require(\"rc-util/lib/omit\"));\nvar _warning = _interopRequireDefault(require(\"rc-util/lib/warning\"));\nvar _keyUtil = _interopRequireDefault(require(\"./keyUtil\"));\nvar _excluded = [\"children\"];\nfunction getPosition(level, index) {\n  return \"\".concat(level, \"-\").concat(index);\n}\nfunction isTreeNode(node) {\n  return node && node.type && node.type.isTreeNode;\n}\nfunction getKey(key, pos) {\n  if (key !== null && key !== undefined) {\n    return key;\n  }\n  return pos;\n}\nfunction fillFieldNames(fieldNames) {\n  var _ref = fieldNames || {},\n    title = _ref.title,\n    _title = _ref._title,\n    key = _ref.key,\n    children = _ref.children;\n  var mergedTitle = title || 'title';\n  return {\n    title: mergedTitle,\n    _title: _title || [mergedTitle],\n    key: key || 'key',\n    children: children || 'children'\n  };\n}\n\n/**\n * Warning if TreeNode do not provides key\n */\nfunction warningWithoutKey(treeData, fieldNames) {\n  var keys = new Map();\n  function dig(list) {\n    var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    (list || []).forEach(function (treeNode) {\n      var key = treeNode[fieldNames.key];\n      var children = treeNode[fieldNames.children];\n      (0, _warning.default)(key !== null && key !== undefined, \"Tree node must have a certain key: [\".concat(path).concat(key, \"]\"));\n      var recordKey = String(key);\n      (0, _warning.default)(!keys.has(recordKey) || key === null || key === undefined, \"Same 'key' exist in the Tree: \".concat(recordKey));\n      keys.set(recordKey, true);\n      dig(children, \"\".concat(path).concat(recordKey, \" > \"));\n    });\n  }\n  dig(treeData);\n}\n\n/**\n * Convert `children` of Tree into `treeData` structure.\n */\nfunction convertTreeToData(rootNodes) {\n  function dig(node) {\n    var treeNodes = (0, _toArray.default)(node);\n    return treeNodes.map(function (treeNode) {\n      // Filter invalidate node\n      if (!isTreeNode(treeNode)) {\n        (0, _warning.default)(!treeNode, 'Tree/TreeNode can only accept TreeNode as children.');\n        return null;\n      }\n      var key = treeNode.key;\n      var _treeNode$props = treeNode.props,\n        children = _treeNode$props.children,\n        rest = (0, _objectWithoutProperties2.default)(_treeNode$props, _excluded);\n      var dataNode = (0, _objectSpread2.default)({\n        key: key\n      }, rest);\n      var parsedChildren = dig(children);\n      if (parsedChildren.length) {\n        dataNode.children = parsedChildren;\n      }\n      return dataNode;\n    }).filter(function (dataNode) {\n      return dataNode;\n    });\n  }\n  return dig(rootNodes);\n}\n\n/**\n * Flat nest tree data into flatten list. This is used for virtual list render.\n * @param treeNodeList Origin data node list\n * @param expandedKeys\n * need expanded keys, provides `true` means all expanded (used in `rc-tree-select`).\n */\nfunction flattenTreeData(treeNodeList, expandedKeys, fieldNames) {\n  var _fillFieldNames = fillFieldNames(fieldNames),\n    fieldTitles = _fillFieldNames._title,\n    fieldKey = _fillFieldNames.key,\n    fieldChildren = _fillFieldNames.children;\n  var expandedKeySet = new Set(expandedKeys === true ? [] : expandedKeys);\n  var flattenList = [];\n  function dig(list) {\n    var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return list.map(function (treeNode, index) {\n      var pos = getPosition(parent ? parent.pos : '0', index);\n      var mergedKey = getKey(treeNode[fieldKey], pos);\n\n      // Pick matched title in field title list\n      var mergedTitle;\n      for (var i = 0; i < fieldTitles.length; i += 1) {\n        var fieldTitle = fieldTitles[i];\n        if (treeNode[fieldTitle] !== undefined) {\n          mergedTitle = treeNode[fieldTitle];\n          break;\n        }\n      }\n\n      // Add FlattenDataNode into list\n      // We use `Object.assign` here to save perf since babel's `objectSpread` has perf issue\n      var flattenNode = Object.assign((0, _omit.default)(treeNode, [].concat((0, _toConsumableArray2.default)(fieldTitles), [fieldKey, fieldChildren])), {\n        title: mergedTitle,\n        key: mergedKey,\n        parent: parent,\n        pos: pos,\n        children: null,\n        data: treeNode,\n        isStart: [].concat((0, _toConsumableArray2.default)(parent ? parent.isStart : []), [index === 0]),\n        isEnd: [].concat((0, _toConsumableArray2.default)(parent ? parent.isEnd : []), [index === list.length - 1])\n      });\n      flattenList.push(flattenNode);\n\n      // Loop treeNode children\n      if (expandedKeys === true || expandedKeySet.has(mergedKey)) {\n        flattenNode.children = dig(treeNode[fieldChildren] || [], flattenNode);\n      } else {\n        flattenNode.children = [];\n      }\n      return flattenNode;\n    });\n  }\n  dig(treeNodeList);\n  return flattenList;\n}\n/**\n * Traverse all the data by `treeData`.\n * Please not use it out of the `rc-tree` since we may refactor this code.\n */\nfunction traverseDataNodes(dataNodes, callback,\n// To avoid too many params, let use config instead of origin param\nconfig) {\n  var mergedConfig = {};\n  if ((0, _typeof2.default)(config) === 'object') {\n    mergedConfig = config;\n  } else {\n    mergedConfig = {\n      externalGetKey: config\n    };\n  }\n  mergedConfig = mergedConfig || {};\n\n  // Init config\n  var _mergedConfig = mergedConfig,\n    childrenPropName = _mergedConfig.childrenPropName,\n    externalGetKey = _mergedConfig.externalGetKey,\n    fieldNames = _mergedConfig.fieldNames;\n  var _fillFieldNames2 = fillFieldNames(fieldNames),\n    fieldKey = _fillFieldNames2.key,\n    fieldChildren = _fillFieldNames2.children;\n  var mergeChildrenPropName = childrenPropName || fieldChildren;\n\n  // Get keys\n  var syntheticGetKey;\n  if (externalGetKey) {\n    if (typeof externalGetKey === 'string') {\n      syntheticGetKey = function syntheticGetKey(node) {\n        return node[externalGetKey];\n      };\n    } else if (typeof externalGetKey === 'function') {\n      syntheticGetKey = function syntheticGetKey(node) {\n        return externalGetKey(node);\n      };\n    }\n  } else {\n    syntheticGetKey = function syntheticGetKey(node, pos) {\n      return getKey(node[fieldKey], pos);\n    };\n  }\n\n  // Process\n  function processNode(node, index, parent, pathNodes) {\n    var children = node ? node[mergeChildrenPropName] : dataNodes;\n    var pos = node ? getPosition(parent.pos, index) : '0';\n    var connectNodes = node ? [].concat((0, _toConsumableArray2.default)(pathNodes), [node]) : [];\n\n    // Process node if is not root\n    if (node) {\n      var key = syntheticGetKey(node, pos);\n      var _data = {\n        node: node,\n        index: index,\n        pos: pos,\n        key: key,\n        parentPos: parent.node ? parent.pos : null,\n        level: parent.level + 1,\n        nodes: connectNodes\n      };\n      callback(_data);\n    }\n\n    // Process children node\n    if (children) {\n      children.forEach(function (subNode, subIndex) {\n        processNode(subNode, subIndex, {\n          node: node,\n          pos: pos,\n          level: parent ? parent.level + 1 : -1\n        }, connectNodes);\n      });\n    }\n  }\n  processNode(null);\n}\n/**\n * Convert `treeData` into entity records.\n */\nfunction convertDataToEntities(dataNodes) {\n  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    initWrapper = _ref2.initWrapper,\n    processEntity = _ref2.processEntity,\n    onProcessFinished = _ref2.onProcessFinished,\n    externalGetKey = _ref2.externalGetKey,\n    childrenPropName = _ref2.childrenPropName,\n    fieldNames = _ref2.fieldNames;\n  var /** @deprecated Use `config.externalGetKey` instead */\n  legacyExternalGetKey = arguments.length > 2 ? arguments[2] : undefined;\n  // Init config\n  var mergedExternalGetKey = externalGetKey || legacyExternalGetKey;\n  var posEntities = {};\n  var keyEntities = {};\n  var wrapper = {\n    posEntities: posEntities,\n    keyEntities: keyEntities\n  };\n  if (initWrapper) {\n    wrapper = initWrapper(wrapper) || wrapper;\n  }\n  traverseDataNodes(dataNodes, function (item) {\n    var node = item.node,\n      index = item.index,\n      pos = item.pos,\n      key = item.key,\n      parentPos = item.parentPos,\n      level = item.level,\n      nodes = item.nodes;\n    var entity = {\n      node: node,\n      nodes: nodes,\n      index: index,\n      key: key,\n      pos: pos,\n      level: level\n    };\n    var mergedKey = getKey(key, pos);\n    posEntities[pos] = entity;\n    keyEntities[mergedKey] = entity;\n\n    // Fill children\n    entity.parent = posEntities[parentPos];\n    if (entity.parent) {\n      entity.parent.children = entity.parent.children || [];\n      entity.parent.children.push(entity);\n    }\n    if (processEntity) {\n      processEntity(entity, wrapper);\n    }\n  }, {\n    externalGetKey: mergedExternalGetKey,\n    childrenPropName: childrenPropName,\n    fieldNames: fieldNames\n  });\n  if (onProcessFinished) {\n    onProcessFinished(wrapper);\n  }\n  return wrapper;\n}\n/**\n * Get TreeNode props with Tree props.\n */\nfunction getTreeNodeProps(key, _ref3) {\n  var expandedKeys = _ref3.expandedKeys,\n    selectedKeys = _ref3.selectedKeys,\n    loadedKeys = _ref3.loadedKeys,\n    loadingKeys = _ref3.loadingKeys,\n    checkedKeys = _ref3.checkedKeys,\n    halfCheckedKeys = _ref3.halfCheckedKeys,\n    dragOverNodeKey = _ref3.dragOverNodeKey,\n    dropPosition = _ref3.dropPosition,\n    keyEntities = _ref3.keyEntities;\n  var entity = (0, _keyUtil.default)(keyEntities, key);\n  var treeNodeProps = {\n    eventKey: key,\n    expanded: expandedKeys.indexOf(key) !== -1,\n    selected: selectedKeys.indexOf(key) !== -1,\n    loaded: loadedKeys.indexOf(key) !== -1,\n    loading: loadingKeys.indexOf(key) !== -1,\n    checked: checkedKeys.indexOf(key) !== -1,\n    halfChecked: halfCheckedKeys.indexOf(key) !== -1,\n    pos: String(entity ? entity.pos : ''),\n    // [Legacy] Drag props\n    // Since the interaction of drag is changed, the semantic of the props are\n    // not accuracy, I think it should be finally removed\n    dragOver: dragOverNodeKey === key && dropPosition === 0,\n    dragOverGapTop: dragOverNodeKey === key && dropPosition === -1,\n    dragOverGapBottom: dragOverNodeKey === key && dropPosition === 1\n  };\n  return treeNodeProps;\n}\nfunction convertNodePropsToEventData(props) {\n  var data = props.data,\n    expanded = props.expanded,\n    selected = props.selected,\n    checked = props.checked,\n    loaded = props.loaded,\n    loading = props.loading,\n    halfChecked = props.halfChecked,\n    dragOver = props.dragOver,\n    dragOverGapTop = props.dragOverGapTop,\n    dragOverGapBottom = props.dragOverGapBottom,\n    pos = props.pos,\n    active = props.active,\n    eventKey = props.eventKey;\n  var eventData = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, data), {}, {\n    expanded: expanded,\n    selected: selected,\n    checked: checked,\n    loaded: loaded,\n    loading: loading,\n    halfChecked: halfChecked,\n    dragOver: dragOver,\n    dragOverGapTop: dragOverGapTop,\n    dragOverGapBottom: dragOverGapBottom,\n    pos: pos,\n    active: active,\n    key: eventKey\n  });\n  if (!('props' in eventData)) {\n    Object.defineProperty(eventData, 'props', {\n      get: function get() {\n        (0, _warning.default)(false, 'Second param return from event is node data instead of TreeNode instance. Please read value directly instead of reading from `props`.');\n        return props;\n      }\n    });\n  }\n  return eventData;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","getPosition","level","index","concat","isTreeNode","node","type","getKey","key","pos","undefined","fillFieldNames","fieldNames","_ref","mergedTitle","title","_title","children","traverseDataNodes","dataNodes","callback","config","processNode","parent","pathNodes","mergeChildrenPropName","connectNodes","_toConsumableArray2","default","syntheticGetKey","_data","parentPos","nodes","forEach","subNode","subIndex","mergedConfig","_typeof2","externalGetKey","childrenPropName","_mergedConfig","_fillFieldNames2","fieldKey","fieldChildren","_interopRequireDefault","Object","defineProperty","value","convertDataToEntities","_ref2","arguments","length","initWrapper","processEntity","onProcessFinished","legacyExternalGetKey","mergedExternalGetKey","posEntities","keyEntities","wrapper","item","entity","mergedKey","push","convertNodePropsToEventData","props","expanded","selected","checked","loaded","loading","halfChecked","dragOver","dragOverGapTop","dragOverGapBottom","active","eventKey","eventData","_objectSpread2","data","get","_warning","convertTreeToData","rootNodes","dig","treeNodes","_toArray","map","treeNode","_treeNode$props","rest","_objectWithoutProperties2","_excluded","dataNode","parsedChildren","filter","flattenTreeData","treeNodeList","expandedKeys","list","i","fieldTitles","fieldTitle","flattenNode","assign","_omit","isStart","isEnd","flattenList","expandedKeySet","has","_fillFieldNames","Set","getTreeNodeProps","_ref3","selectedKeys","loadedKeys","loadingKeys","checkedKeys","halfCheckedKeys","dragOverNodeKey","dropPosition","_keyUtil","treeNodeProps","indexOf","String","warningWithoutKey","treeData","path","recordKey","keys","set","Map"]
}
