{
"version":3,
"file":"module$node_modules$rc_upload$lib$attr_accept.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,6CAAA,CAAkE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGtGC,MAAAA,CAAyBH,OAAA,CAAQ,kEAAR,CAAwDI,CAAAA,OACrFC,OAAOC,CAAAA,cAAP,CAAsBJ,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CK,MAAO,CAAA,CADoC,CAA7C,CAGAL,QAAQE,CAAAA,OAAR,CAAkB,IAAK,EACvB,KAAII,SAAWL,MAAA,CAAuBH,OAAA,CAAQ,yCAAR,CAAvB,CACAE,QAAQE,CAAAA,OAAR,CAAkBK,QAAiB,CAACC,IAAD,CAAOC,aAAP,CAAsB,CACtE,GAAID,IAAJ,EAAYC,aAAZ,CAA2B,CACrBC,aAAAA,CAAqBC,KAAMC,CAAAA,OAAN,CAAcH,aAAd,CAAA,CAA+BA,aAA/B,CAA+CA,aAAcI,CAAAA,KAAd,CAAoB,GAApB,CACxE,KAAIC;AAAWN,IAAKO,CAAAA,IAAhBD,EAAwB,EAA5B,CACIE,SAAWR,IAAKS,CAAAA,IAAhBD,EAAwB,EAD5B,CAEIE,aAAeF,QAASG,CAAAA,OAAT,CAAiB,OAAjB,CAA0B,EAA1B,CACnB,OAAOT,cAAmBU,CAAAA,IAAnB,CAAwB,QAAS,CAACH,IAAD,CAAO,CAC7C,IAAII,UAAYJ,IAAKK,CAAAA,IAAL,EAEhB,IAAI,aAAcC,CAAAA,IAAd,CAAmBN,IAAnB,CAAJ,CACE,MAAO,CAAA,CAIT,IAA4B,GAA5B,GAAII,SAAUG,CAAAA,MAAV,CAAiB,CAAjB,CAAJ,CAAiC,CAC/B,IAAIC,cAAgBX,QAASY,CAAAA,WAAT,EAChBC,KAAAA,CAAYN,SAAUK,CAAAA,WAAV,EACZE,UAAAA,CAAY,CAACD,IAAD,CAChB,IAAkB,MAAlB,GAAIA,IAAJ,EAA0C,OAA1C,GAA4BA,IAA5B,CACEC,SAAA,CAAY,CAAC,MAAD,CAAS,OAAT,CAEd,OAAOA,UAAUR,CAAAA,IAAV,CAAe,QAAS,CAACS,KAAD,CAAQ,CACrC,MAAOJ,cAAcK,CAAAA,QAAd,CAAuBD,KAAvB,CAD8B,CAAhC,CAPwB,CAajC,MAAI,OAAQN,CAAAA,IAAR,CAAaF,SAAb,CAAJ,CACSH,YADT,GAC0BG,SAAUF,CAAAA,OAAV,CAAkB,OAAlB;AAA2B,EAA3B,CAD1B,CAKIH,QAAJ,GAAiBK,SAAjB,CACS,CAAA,CADT,CAKI,OAAQE,CAAAA,IAAR,CAAaF,SAAb,CAAJ,EACE,GAAIf,QAASJ,CAAAA,OAAb,EAAsB,CAAA,CAAtB,CAA6B,4CAA6C6B,CAAAA,MAA7C,CAAoDV,SAApD,CAA+D,mBAA/D,CAA7B,CACO,CAAA,CAAA,CAFT,EAIO,CAAA,CAnCsC,CAAxC,CALkB,CA2C3B,MAAO,CAAA,CA5C+D,CATkC;",
"sources":["node_modules/rc-upload/lib/attr-accept.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rc_upload$lib$attr_accept\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _warning = _interopRequireDefault(require(\"rc-util/lib/warning\"));\nvar _default = exports.default = function _default(file, acceptedFiles) {\n  if (file && acceptedFiles) {\n    var acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(',');\n    var fileName = file.name || '';\n    var mimeType = file.type || '';\n    var baseMimeType = mimeType.replace(/\\/.*$/, '');\n    return acceptedFilesArray.some(function (type) {\n      var validType = type.trim();\n      // This is something like */*,*  allow all files\n      if (/^\\*(\\/\\*)?$/.test(type)) {\n        return true;\n      }\n\n      // like .jpg, .png\n      if (validType.charAt(0) === '.') {\n        var lowerFileName = fileName.toLowerCase();\n        var lowerType = validType.toLowerCase();\n        var affixList = [lowerType];\n        if (lowerType === '.jpg' || lowerType === '.jpeg') {\n          affixList = ['.jpg', '.jpeg'];\n        }\n        return affixList.some(function (affix) {\n          return lowerFileName.endsWith(affix);\n        });\n      }\n\n      // This is something like a image/* mime type\n      if (/\\/\\*$/.test(validType)) {\n        return baseMimeType === validType.replace(/\\/.*$/, '');\n      }\n\n      // Full match\n      if (mimeType === validType) {\n        return true;\n      }\n\n      // Invalidate type should skip\n      if (/^\\w+$/.test(validType)) {\n        (0, _warning.default)(false, \"Upload takes an invalidate 'accept' type '\".concat(validType, \"'.Skip for check.\"));\n        return true;\n      }\n      return false;\n    });\n  }\n  return true;\n};\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","default","Object","defineProperty","value","_warning","exports.default","file","acceptedFiles","acceptedFilesArray","Array","isArray","split","fileName","name","mimeType","type","baseMimeType","replace","some","validType","trim","test","charAt","lowerFileName","toLowerCase","lowerType","affixList","affix","endsWith","concat"]
}
