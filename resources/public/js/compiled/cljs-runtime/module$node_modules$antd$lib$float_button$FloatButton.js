shadow$provide.module$node_modules$antd$lib$float_button$FloatButton=function(global,require,module,exports){"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.floatButtonPrefixCls=exports.default=void 0;var _react=module(require("module$node_modules$react$index")),_classnames=global(require("module$node_modules$classnames$index")),
_omit=global(require("module$node_modules$rc_util$lib$omit")),_useZIndex=require("module$node_modules$antd$lib$_util$hooks$useZIndex"),_warning=require("module$node_modules$antd$lib$_util$warning"),_badge=global(require("module$node_modules$antd$lib$badge$index")),_configProvider=require("module$node_modules$antd$lib$config_provider$index"),_useCSSVarCls=global(require("module$node_modules$antd$lib$config_provider$hooks$useCSSVarCls")),_tooltip=global(require("module$node_modules$antd$lib$tooltip$index")),
_context=global(require("module$node_modules$antd$lib$float_button$context")),_FloatButtonContent=global(require("module$node_modules$antd$lib$float_button$FloatButtonContent")),_style=global(require("module$node_modules$antd$lib$float_button$style$index")),__rest=function(s,e){var t={},p;for(p in s)Object.prototype.hasOwnProperty.call(s,p)&&0>e.indexOf(p)&&(t[p]=s[p]);if(null!=s&&"function"===typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)0>e.indexOf(p[i])&&
Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};const floatButtonPrefixCls=exports.floatButtonPrefixCls="float-btn";require=_react.default.forwardRef((props,ref)=>{const {prefixCls:customizePrefixCls,className,rootClassName,style,type="default",shape="circle",icon,description,tooltip,htmlType="button",badge={}}=props,restProps=__rest(props,"prefixCls className rootClassName style type shape icon description tooltip htmlType badge".split(" ")),{getPrefixCls,direction}=
(0,_react.useContext)(_configProvider.ConfigContext);var groupShape=(0,_react.useContext)(_context.default);const prefixCls=getPrefixCls(floatButtonPrefixCls,customizePrefixCls);var rootCls=(0,_useCSSVarCls.default)(prefixCls);const [wrapCSSVar,hashId,cssVarCls]=(0,_style.default)(prefixCls,rootCls);groupShape=(0,_classnames.default)(hashId,cssVarCls,rootCls,prefixCls,className,rootClassName,`${prefixCls}-${type}`,`${prefixCls}-${groupShape||shape}`,{[`${prefixCls}-rtl`]:"rtl"===direction});[rootCls]=
(0,_useZIndex.useZIndex)("FloatButton",null===style||void 0===style?void 0:style.zIndex);rootCls=Object.assign(Object.assign({},style),{zIndex:rootCls});const badgeProps=(0,_omit.default)(badge,["title","children","status","text"]);var contentProps=(0,_react.useMemo)(()=>({prefixCls,description,icon,type}),[prefixCls,description,icon,type]);contentProps=_react.default.createElement("div",{className:`${prefixCls}-body`},_react.default.createElement(_FloatButtonContent.default,Object.assign({},contentProps)));
"badge"in props&&(contentProps=_react.default.createElement(_badge.default,Object.assign({},badgeProps),contentProps));"tooltip"in props&&(contentProps=_react.default.createElement(_tooltip.default,{title:tooltip,placement:"rtl"===direction?"right":"left"},contentProps));(0,_warning.devUseWarning)("FloatButton")(!("circle"===shape&&description),"usage","supported only when `shape` is `square`. Due to narrow space for text, short sentence is recommended.");return wrapCSSVar(props.href?_react.default.createElement("a",
Object.assign({ref},restProps,{className:groupShape,style:rootCls}),contentProps):_react.default.createElement("button",Object.assign({ref},restProps,{className:groupShape,style:rootCls,type:htmlType}),contentProps))});require.displayName="FloatButton";exports.default=require}
//# sourceMappingURL=module$node_modules$antd$lib$float_button$FloatButton.js.map
