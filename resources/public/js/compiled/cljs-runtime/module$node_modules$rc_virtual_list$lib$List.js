shadow$provide.module$node_modules$rc_virtual_list$lib$List=function(global,require,module,exports){function RawList(props,ref){function syncScrollTop(newTop){setOffsetTop(function(origin){origin="function"===typeof newTop?newTop(origin):newTop;Number.isNaN(maxScrollHeightRef.current)||(origin=Math.min(origin,maxScrollHeightRef.current));origin=Math.max(origin,0);return componentRef.current.scrollTop=origin})}function onScrollBar(newScrollOffset,horizontal){horizontal?((0,_reactDom.flushSync)(function(){setOffsetLeft(newScrollOffset)}),
triggerScroll()):syncScrollTop(newScrollOffset)}var _props$prefixCls=props.prefixCls,prefixCls=void 0===_props$prefixCls?"rc-virtual-list":_props$prefixCls,className=props.className,height=props.height,itemHeight=props.itemHeight,_props$fullHeight=props.fullHeight,fullHeight=void 0===_props$fullHeight?!0:_props$fullHeight,style=props.style,data=props.data,children=props.children,itemKey=props.itemKey,virtual=props.virtual,direction=props.direction,scrollWidth=props.scrollWidth,_props$component=props.component,
Component=void 0===_props$component?"div":_props$component,onScroll=props.onScroll,onVirtualScroll=props.onVirtualScroll,onVisibleChange=props.onVisibleChange,innerProps=props.innerProps,extraRender=props.extraRender,styles=props.styles,_props$showScrollBar=props.showScrollBar,showScrollBar=void 0===_props$showScrollBar?"optional":_props$showScrollBar,restProps=(0,_objectWithoutProperties2.default)(props,_excluded),getKey=React.useCallback(function(item){return"function"===typeof itemKey?itemKey(item):
null===item||void 0===item?void 0:item[itemKey]},[itemKey]),_useHeights=(0,_useHeights3.default)(getKey,null,null),_useHeights2=(0,_slicedToArray2.default)(_useHeights,4),setInstanceRef=_useHeights2[0],collectHeight=_useHeights2[1],heights=_useHeights2[2],heightUpdatedMark=_useHeights2[3],useVirtual=!(!1===virtual||!height||!itemHeight),containerHeight=React.useMemo(function(){return Object.values(heights.maps).reduce(function(total,curr){return total+curr},0)},[heights.id,heights.maps]),inVirtual=
useVirtual&&data&&(Math.max(itemHeight*data.length,containerHeight)>height||!!scrollWidth),isRTL="rtl"===direction,mergedClassName=(0,_classnames.default)(prefixCls,(0,_defineProperty2.default)({},"".concat(prefixCls,"-rtl"),isRTL),className),mergedData=data||EMPTY_DATA,componentRef=(0,_react.useRef)(),fillerInnerRef=(0,_react.useRef)(),containerRef=(0,_react.useRef)(),_useState=(0,_react.useState)(0),_useState2=(0,_slicedToArray2.default)(_useState,2),offsetTop=_useState2[0],setOffsetTop=_useState2[1],
_useState3=(0,_react.useState)(0),_useState4=(0,_slicedToArray2.default)(_useState3,2),offsetLeft=_useState4[0],setOffsetLeft=_useState4[1],_useState5=(0,_react.useState)(!1),_useState6=(0,_slicedToArray2.default)(_useState5,2),scrollMoving=_useState6[0],setScrollMoving=_useState6[1],onScrollbarStartMove=function(){setScrollMoving(!0)},onScrollbarStopMove=function(){setScrollMoving(!1)},sharedConfig={getKey},rangeRef=(0,_react.useRef)({start:0,end:mergedData.length}),diffItemRef=(0,_react.useRef)(),
_useDiffItem=(0,_useDiffItem3.default)(mergedData,getKey),diffItem=(0,_slicedToArray2.default)(_useDiffItem,1)[0];diffItemRef.current=diffItem;var _React$useMemo=React.useMemo(function(){if(!useVirtual)return{scrollHeight:void 0,start:0,end:mergedData.length-1,offset:void 0};if(!inVirtual){var _fillerInnerRef$curre;return{scrollHeight:(null===(_fillerInnerRef$curre=fillerInnerRef.current)||void 0===_fillerInnerRef$curre?void 0:_fillerInnerRef$curre.offsetHeight)||0,start:0,end:mergedData.length-1,
offset:void 0}}_fillerInnerRef$curre=0;for(var startIndex,startOffset,endIndex,dataLen=mergedData.length,i=0;i<dataLen;i+=1){var key=getKey(mergedData[i]);key=heights.get(key);key=_fillerInnerRef$curre+(void 0===key?itemHeight:key);key>=offsetTop&&void 0===startIndex&&(startIndex=i,startOffset=_fillerInnerRef$curre);key>offsetTop+height&&void 0===endIndex&&(endIndex=i);_fillerInnerRef$curre=key}void 0===startIndex&&(startOffset=startIndex=0,endIndex=Math.ceil(height/itemHeight));void 0===endIndex&&
(endIndex=mergedData.length-1);endIndex=Math.min(endIndex+1,mergedData.length-1);return{scrollHeight:_fillerInnerRef$curre,start:startIndex,end:endIndex,offset:startOffset}},[inVirtual,useVirtual,offsetTop,mergedData,heightUpdatedMark,height]),scrollHeight=_React$useMemo.scrollHeight,start=_React$useMemo.start,end=_React$useMemo.end,fillerOffset=_React$useMemo.offset;rangeRef.current.start=start;rangeRef.current.end=end;React.useLayoutEffect(function(){var changedRecord=heights.getRecord();if(1===
changedRecord.size&&(changedRecord=Array.from(changedRecord)[0],getKey(mergedData[start])===changedRecord)){var diffHeight=heights.get(changedRecord)-itemHeight;syncScrollTop(function(ori){return ori+diffHeight})}heights.resetRecord()},[scrollHeight]);var _React$useState=React.useState({width:0,height}),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),size=_React$useState2[0],setSize=_React$useState2[1],verticalScrollBarRef=(0,_react.useRef)(),horizontalScrollBarRef=(0,_react.useRef)(),
horizontalScrollBarSpinSize=React.useMemo(function(){return(0,_scrollbarUtil.getSpinSize)(size.width,scrollWidth)},[size.width,scrollWidth]),verticalScrollBarSpinSize=React.useMemo(function(){return(0,_scrollbarUtil.getSpinSize)(size.height,scrollHeight)},[size.height,scrollHeight]),maxScrollHeight=scrollHeight-height,maxScrollHeightRef=(0,_react.useRef)(maxScrollHeight);maxScrollHeightRef.current=maxScrollHeight;var isScrollAtTop=0>=offsetTop,isScrollAtBottom=offsetTop>=maxScrollHeight,isScrollAtLeft=
0>=offsetLeft,isScrollAtRight=offsetLeft>=scrollWidth,originScroll=(0,_useOriginScroll.default)(isScrollAtTop,isScrollAtBottom,isScrollAtLeft,isScrollAtRight),getVirtualScrollInfo=function(){return{x:isRTL?-offsetLeft:offsetLeft,y:offsetTop}},lastVirtualScrollInfoRef=(0,_react.useRef)(getVirtualScrollInfo()),triggerScroll=(0,_rcUtil.useEvent)(function(params){onVirtualScroll&&(params=(0,_objectSpread3.default)((0,_objectSpread3.default)({},getVirtualScrollInfo()),params),lastVirtualScrollInfoRef.current.x!==
params.x||lastVirtualScrollInfoRef.current.y!==params.y)&&(onVirtualScroll(params),lastVirtualScrollInfoRef.current=params)}),keepInHorizontalRange=function(nextOffsetLeft){var max=scrollWidth?scrollWidth-size.width:0;nextOffsetLeft=Math.max(nextOffsetLeft,0);return nextOffsetLeft=Math.min(nextOffsetLeft,max)},onWheelDelta=(0,_rcUtil.useEvent)(function(offsetXY,fromHorizontal){fromHorizontal?((0,_reactDom.flushSync)(function(){setOffsetLeft(function(left){return keepInHorizontalRange(left+(isRTL?
-offsetXY:offsetXY))})}),triggerScroll()):syncScrollTop(function(top){return top+offsetXY})}),_useFrameWheel=(0,_useFrameWheel3.default)(useVirtual,isScrollAtTop,isScrollAtBottom,isScrollAtLeft,isScrollAtRight,!!scrollWidth,onWheelDelta),_useFrameWheel2=(0,_slicedToArray2.default)(_useFrameWheel,2),onRawWheel=_useFrameWheel2[0],onFireFoxScroll=_useFrameWheel2[1];(0,_useMobileTouchMove.default)(useVirtual,componentRef,function(isHorizontal,delta,smoothOffset,e){return originScroll(isHorizontal,delta,
smoothOffset)?!1:e&&e._virtualHandled?!1:(e&&(e._virtualHandled=!0),onRawWheel({preventDefault:function(){},deltaX:isHorizontal?delta:0,deltaY:isHorizontal?0:delta}),!0)});(0,_useScrollDrag.default)(inVirtual,componentRef,function(offset){syncScrollTop(function(top){return top+offset})});(0,_useLayoutEffect.default)(function(){function onMozMousePixelScroll(e){var scrollingUpAtTop=isScrollAtTop&&0>e.detail,scrollingDownAtBottom=isScrollAtBottom&&0<e.detail;!useVirtual||scrollingUpAtTop||scrollingDownAtBottom||
e.preventDefault()}var componentEle=componentRef.current;componentEle.addEventListener("wheel",onRawWheel,{passive:!1});componentEle.addEventListener("DOMMouseScroll",onFireFoxScroll,{passive:!0});componentEle.addEventListener("MozMousePixelScroll",onMozMousePixelScroll,{passive:!1});return function(){componentEle.removeEventListener("wheel",onRawWheel);componentEle.removeEventListener("DOMMouseScroll",onFireFoxScroll);componentEle.removeEventListener("MozMousePixelScroll",onMozMousePixelScroll)}},
[useVirtual,isScrollAtTop,isScrollAtBottom]);(0,_useLayoutEffect.default)(function(){if(scrollWidth){var newOffsetLeft=keepInHorizontalRange(offsetLeft);setOffsetLeft(newOffsetLeft);triggerScroll({x:newOffsetLeft})}},[size.width,scrollWidth]);var delayHideScrollBar=function(){var _verticalScrollBarRef,_horizontalScrollBarR;null===(_verticalScrollBarRef=verticalScrollBarRef.current)||void 0===_verticalScrollBarRef||_verticalScrollBarRef.delayHidden();null===(_horizontalScrollBarR=horizontalScrollBarRef.current)||
void 0===_horizontalScrollBarR||_horizontalScrollBarR.delayHidden()},_scrollTo=(0,_useScrollTo.default)(componentRef,mergedData,heights,itemHeight,getKey,function(){return collectHeight(!0)},syncScrollTop,delayHideScrollBar);React.useImperativeHandle(ref,function(){return{nativeElement:containerRef.current,getScrollInfo:getVirtualScrollInfo,scrollTo:function(config){config&&"object"===(0,_typeof2.default)(config)&&("left"in config||"top"in config)?(void 0!==config.left&&setOffsetLeft(keepInHorizontalRange(config.left)),
_scrollTo(config.top)):_scrollTo(config)}}});(0,_useLayoutEffect.default)(function(){if(onVisibleChange){var renderList=mergedData.slice(start,end+1);onVisibleChange(renderList,mergedData)}},[start,end,mergedData]);var getSize=(0,_useGetSize.useGetSize)(mergedData,getKey,heights,itemHeight),extraContent=null===extraRender||void 0===extraRender?void 0:extraRender({start,end,virtual:inVirtual,offsetX:offsetLeft,offsetY:fillerOffset,rtl:isRTL,getSize}),listChildren=(0,_useChildren.default)(mergedData,
start,end,scrollWidth,offsetLeft,setInstanceRef,children,sharedConfig),componentStyle=null;height&&(componentStyle=(0,_objectSpread3.default)((0,_defineProperty2.default)({},fullHeight?"height":"maxHeight",height),ScrollStyle),useVirtual&&(componentStyle.overflowY="hidden",scrollWidth&&(componentStyle.overflowX="hidden"),scrollMoving&&(componentStyle.pointerEvents="none")));var containerProps={};isRTL&&(containerProps.dir="rtl");return React.createElement("div",(0,_extends2.default)({ref:containerRef,
style:(0,_objectSpread3.default)((0,_objectSpread3.default)({},style),{},{position:"relative"}),className:mergedClassName},containerProps,restProps),React.createElement(_rcResizeObserver.default,{onResize:function(sizeInfo){setSize({width:sizeInfo.offsetWidth,height:sizeInfo.offsetHeight})}},React.createElement(Component,{className:"".concat(prefixCls,"-holder"),style:componentStyle,ref:componentRef,onScroll:function(e){var newScrollTop=e.currentTarget.scrollTop;newScrollTop!==offsetTop&&syncScrollTop(newScrollTop);
null===onScroll||void 0===onScroll||onScroll(e);triggerScroll()},onMouseEnter:delayHideScrollBar},React.createElement(_Filler.default,{prefixCls,height:scrollHeight,offsetX:offsetLeft,offsetY:fillerOffset,scrollWidth,onInnerResize:collectHeight,ref:fillerInnerRef,innerProps,rtl:isRTL,extra:extraContent},listChildren))),inVirtual&&scrollHeight>height&&React.createElement(_ScrollBar.default,{ref:verticalScrollBarRef,prefixCls,scrollOffset:offsetTop,scrollRange:scrollHeight,rtl:isRTL,onScroll:onScrollBar,
onStartMove:onScrollbarStartMove,onStopMove:onScrollbarStopMove,spinSize:verticalScrollBarSpinSize,containerSize:size.height,style:null===styles||void 0===styles?void 0:styles.verticalScrollBar,thumbStyle:null===styles||void 0===styles?void 0:styles.verticalScrollBarThumb,showScrollBar}),inVirtual&&scrollWidth>size.width&&React.createElement(_ScrollBar.default,{ref:horizontalScrollBarRef,prefixCls,scrollOffset:offsetLeft,scrollRange:scrollWidth,rtl:isRTL,onScroll:onScrollBar,onStartMove:onScrollbarStartMove,
onStopMove:onScrollbarStopMove,spinSize:horizontalScrollBarSpinSize,containerSize:size.width,horizontal:!0,style:null===styles||void 0===styles?void 0:styles.horizontalScrollBar,thumbStyle:null===styles||void 0===styles?void 0:styles.horizontalScrollBarThumb,showScrollBar}))}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",
{value:!0});exports.RawList=RawList;exports.default=void 0;var _extends2=global(require("module$node_modules$$babel$runtime$helpers$extends")),_typeof2=global(require("module$node_modules$$babel$runtime$helpers$typeof")),_objectSpread3=global(require("module$node_modules$$babel$runtime$helpers$objectSpread2")),_defineProperty2=global(require("module$node_modules$$babel$runtime$helpers$defineProperty")),_slicedToArray2=global(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),_objectWithoutProperties2=
global(require("module$node_modules$$babel$runtime$helpers$objectWithoutProperties")),_classnames=global(require("module$node_modules$classnames$index")),_rcResizeObserver=global(require("module$node_modules$rc_resize_observer$lib$index")),_rcUtil=require("module$node_modules$rc_util$lib$index"),_useLayoutEffect=global(require("module$node_modules$rc_util$lib$hooks$useLayoutEffect")),_react=module(require("module$node_modules$react$index")),React=_react,_reactDom=require("module$node_modules$react_dom$index"),
_Filler=global(require("module$node_modules$rc_virtual_list$lib$Filler")),_useChildren=global(require("module$node_modules$rc_virtual_list$lib$hooks$useChildren")),_useDiffItem3=global(require("module$node_modules$rc_virtual_list$lib$hooks$useDiffItem")),_useFrameWheel3=global(require("module$node_modules$rc_virtual_list$lib$hooks$useFrameWheel")),_useGetSize=require("module$node_modules$rc_virtual_list$lib$hooks$useGetSize"),_useHeights3=global(require("module$node_modules$rc_virtual_list$lib$hooks$useHeights")),
_useMobileTouchMove=global(require("module$node_modules$rc_virtual_list$lib$hooks$useMobileTouchMove")),_useOriginScroll=global(require("module$node_modules$rc_virtual_list$lib$hooks$useOriginScroll")),_useScrollDrag=global(require("module$node_modules$rc_virtual_list$lib$hooks$useScrollDrag")),_useScrollTo=global(require("module$node_modules$rc_virtual_list$lib$hooks$useScrollTo")),_ScrollBar=global(require("module$node_modules$rc_virtual_list$lib$ScrollBar")),_scrollbarUtil=require("module$node_modules$rc_virtual_list$lib$utils$scrollbarUtil"),
_excluded="prefixCls className height itemHeight fullHeight style data children itemKey virtual direction scrollWidth component onScroll onVirtualScroll onVisibleChange innerProps extraRender styles showScrollBar".split(" "),EMPTY_DATA=[],ScrollStyle={overflowY:"auto",overflowAnchor:"none"};require=React.forwardRef(RawList);require.displayName="List";exports.default=require}
//# sourceMappingURL=module$node_modules$rc_virtual_list$lib$List.js.map
