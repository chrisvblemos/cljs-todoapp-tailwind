shadow$provide.module$node_modules$antd$lib$breadcrumb$Breadcrumb=function(global,require,module,exports){"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var React=module(require("module$node_modules$react$index")),_classnames=global(require("module$node_modules$classnames$index")),
_toArray=global(require("module$node_modules$rc_util$lib$Children$toArray")),_pickAttrs=global(require("module$node_modules$rc_util$lib$pickAttrs")),_reactNode=require("module$node_modules$antd$lib$_util$reactNode"),_warning=require("module$node_modules$antd$lib$_util$warning"),_configProvider=require("module$node_modules$antd$lib$config_provider$index"),_BreadcrumbItem=module(require("module$node_modules$antd$lib$breadcrumb$BreadcrumbItem")),_BreadcrumbSeparator=global(require("module$node_modules$antd$lib$breadcrumb$BreadcrumbSeparator")),
_style=global(require("module$node_modules$antd$lib$breadcrumb$style$index")),_useItemRender=global(require("module$node_modules$antd$lib$breadcrumb$useItemRender")),_useItems=global(require("module$node_modules$antd$lib$breadcrumb$useItems")),__rest=function(s,e){var t={},p;for(p in s)Object.prototype.hasOwnProperty.call(s,p)&&0>e.indexOf(p)&&(t[p]=s[p]);if(null!=s&&"function"===typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)0>e.indexOf(p[i])&&Object.prototype.propertyIsEnumerable.call(s,
p[i])&&(t[p[i]]=s[p[i]])}return t};const getPath=(params,path)=>{if(void 0===path)return path;let mergedPath=(path||"").replace(/^\//,"");Object.keys(params).forEach(key=>{mergedPath=mergedPath.replace(`:${key}`,params[key])});return mergedPath};require=props=>{const {prefixCls:customizePrefixCls,separator="/",style,className,rootClassName,routes:legacyRoutes,items,children,itemRender,params={}}=props;props=__rest(props,"prefixCls separator style className rootClassName routes items children itemRender params".split(" "));
const {getPrefixCls,direction,breadcrumb}=React.useContext(_configProvider.ConfigContext);let crumbs;const prefixCls=getPrefixCls("breadcrumb",customizePrefixCls),[wrapCSSVar,hashId,cssVarCls]=(0,_style.default)(prefixCls),mergedItems=(0,_useItems.default)(items,legacyRoutes),warning=(0,_warning.devUseWarning)("Breadcrumb");warning.deprecated(!legacyRoutes,"routes","items");if(!mergedItems||0===mergedItems.length){var childList=(0,_toArray.default)(children);warning.deprecated(0===childList.length,
"Breadcrumb.Item and Breadcrumb.Separator","items");childList.forEach(element=>{element&&warning(element.type&&(!0===element.type.__ANT_BREADCRUMB_ITEM||!0===element.type.__ANT_BREADCRUMB_SEPARATOR),"usage","Only accepts Breadcrumb.Item and Breadcrumb.Separator as it's children")})}const mergedItemRender=(0,_useItemRender.default)(prefixCls,itemRender);if(mergedItems&&0<mergedItems.length){const paths=[],itemRenderRoutes=items||legacyRoutes;crumbs=mergedItems.map((item,index)=>{const {path,key,type,
menu,overlay,onClick,className:itemClassName,separator:itemSeparator,dropdownProps}=item,mergedPath=getPath(params,path);void 0!==mergedPath&&paths.push(mergedPath);const mergedKey=null!==key&&void 0!==key?key:index;if("separator"===type)return React.createElement(_BreadcrumbSeparator.default,{key:mergedKey},itemSeparator);const itemProps={};index=index===mergedItems.length-1;menu?itemProps.menu=menu:overlay&&(itemProps.overlay=overlay);let {href}=item;paths.length&&void 0!==mergedPath&&(href=`#/${paths.join("/")}`);
return React.createElement(_BreadcrumbItem.InternalBreadcrumbItem,Object.assign({key:mergedKey},itemProps,(0,_pickAttrs.default)(item,{data:!0,aria:!0}),{className:itemClassName,dropdownProps,href,separator:index?"":separator,onClick,prefixCls}),mergedItemRender(item,params,itemRenderRoutes,paths,href))})}else if(children){const childrenLength=(0,_toArray.default)(children).length;crumbs=(0,_toArray.default)(children).map((element,index)=>element?(0,_reactNode.cloneElement)(element,{separator:index===
childrenLength-1?"":separator,key:index}):element)}childList=(0,_classnames.default)(prefixCls,null===breadcrumb||void 0===breadcrumb?void 0:breadcrumb.className,{[`${prefixCls}-rtl`]:"rtl"===direction},className,rootClassName,hashId,cssVarCls);const mergedStyle=Object.assign(Object.assign({},null===breadcrumb||void 0===breadcrumb?void 0:breadcrumb.style),style);return wrapCSSVar(React.createElement("nav",Object.assign({className:childList,style:mergedStyle},props),React.createElement("ol",null,crumbs)))};
require.Item=_BreadcrumbItem.default;require.Separator=_BreadcrumbSeparator.default;require.displayName="Breadcrumb";exports.default=require}
//# sourceMappingURL=module$node_modules$antd$lib$breadcrumb$Breadcrumb.js.map
