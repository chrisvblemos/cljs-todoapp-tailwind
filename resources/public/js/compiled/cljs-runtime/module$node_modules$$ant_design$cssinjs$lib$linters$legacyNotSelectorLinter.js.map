{
"version":3,
"file":"module$node_modules$$ant_design$cssinjs$lib$linters$legacyNotSelectorLinter.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,2EAAA,CAAgG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAQxIC,QAASA,iBAAgB,CAACC,QAAD,CAAW,CAClC,IAAIC,eAQJ,OAA2B,EAA3B,CAH4BC,EAJgD,IAA1D,IAACD,eAAD,CAAmBD,QAASG,CAAAA,KAAT,CAAe,iBAAf,CAAnB,GAAsF,IAAK,EAA3F,GAAkEF,eAAlE,CAA+F,IAAK,EAApG,CAAwGA,eAAA,CAAgB,CAAhB,CAI9FC,GAJqH,EAIrHA,EAAAA,KAAX,CAAiB,qBAAjB,CAAwCE,CAAAA,MAAxCC,CAA+C,QAAS,CAACC,GAAD,CAAM,CAC7E,MAAOA,IADsE,CAA9DD,CAGCE,CAAAA,MATgB,CAWpCC,QAASA,UAAS,CAACC,IAAD,CAAO,CACvB,MAAOA,KAAKC,CAAAA,eAAgBC,CAAAA,MAArB,CAA4B,QAAS,CAACC,IAAD,CAAOC,GAAP,CAAY,CACtD,MAAKD,KAAL,CAGOC,GAAIC,CAAAA,QAAJ,CAAa,MAAb,CAAA,CAAoBD,GAAIE,CAAAA,OAAJ,CAAY,IAAZ;AAAkBH,IAAlB,CAApB,CAA8C,EAAGI,CAAAA,MAAH,CAAUJ,IAAV,CAAgB,GAAhB,CAAqBI,CAAAA,MAArB,CAA4BH,GAA5B,CAHrD,CACSA,GAF6C,CAAjD,CAKJ,EALI,CADgB,CAhBzBI,MAAOC,CAAAA,cAAP,CAAsBpB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CqB,MAAO,CAAA,CADoC,CAA7C,CAGArB,QAAQsB,CAAAA,OAAR,CAAkB,IAAK,EACvB,KAAIC,OAASzB,OAAA,CAAQ,2DAAR,CA2BEE,QAAQsB,CAAAA,OAAR,CAPFE,QAAe,CAACC,GAAD,CAAMJ,KAAN,CAAaV,IAAb,CAAmB,CAEzCe,GAAAA,CADqBhB,SAAAiB,CAAUhB,IAAVgB,CACQtB,CAAAA,KAAnB,CAAyB,gBAAzB,CAAVqB,EAAwD,EACvC,EAArB,CAAIA,GAAQjB,CAAAA,MAAZ,EAA0BiB,GAAQE,CAAAA,IAAR,CAAa3B,gBAAb,CAA1B,EACE,GAAIsB,MAAOM,CAAAA,WAAX,EAAwB,wDAAxB,CAAkFlB,IAAlF,CAJ2C,CA3ByF;",
"sources":["node_modules/@ant-design/cssinjs/lib/linters/legacyNotSelectorLinter.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$ant_design$cssinjs$lib$linters$legacyNotSelectorLinter\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _utils = require(\"./utils\");\nfunction isConcatSelector(selector) {\n  var _selector$match;\n  var notContent = ((_selector$match = selector.match(/:not\\(([^)]*)\\)/)) === null || _selector$match === void 0 ? void 0 : _selector$match[1]) || '';\n\n  // split selector. e.g.\n  // `h1#a.b` => ['h1', #a', '.b']\n  var splitCells = notContent.split(/(\\[[^[]*])|(?=[.#])/).filter(function (str) {\n    return str;\n  });\n  return splitCells.length > 1;\n}\nfunction parsePath(info) {\n  return info.parentSelectors.reduce(function (prev, cur) {\n    if (!prev) {\n      return cur;\n    }\n    return cur.includes('&') ? cur.replace(/&/g, prev) : \"\".concat(prev, \" \").concat(cur);\n  }, '');\n}\nvar linter = function linter(key, value, info) {\n  var parentSelectorPath = parsePath(info);\n  var notList = parentSelectorPath.match(/:not\\([^)]*\\)/g) || [];\n  if (notList.length > 0 && notList.some(isConcatSelector)) {\n    (0, _utils.lintWarning)(\"Concat ':not' selector not support in legacy browsers.\", info);\n  }\n};\nvar _default = exports.default = linter;\n};"],
"names":["shadow$provide","global","require","module","exports","isConcatSelector","selector","_selector$match","split","match","filter","splitCells","str","length","parsePath","info","parentSelectors","reduce","prev","cur","includes","replace","concat","Object","defineProperty","value","default","_utils","linter","key","notList","parentSelectorPath","some","lintWarning"]
}
