shadow$provide.module$node_modules$antd$lib$cascader$hooks$useColumnIcons=function(global,require,module,exports){"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var React=module(require("module$node_modules$react$index")),_LeftOutlined=global(require("module$node_modules$$ant_design$icons$LeftOutlined")),
_LoadingOutlined=global(require("module$node_modules$$ant_design$icons$LoadingOutlined")),_RightOutlined=global(require("module$node_modules$$ant_design$icons$RightOutlined"));exports.default=(prefixCls,rtl,expandIcon)=>{let mergedExpandIcon=expandIcon;expandIcon||(mergedExpandIcon=rtl?React.createElement(_LeftOutlined.default,null):React.createElement(_RightOutlined.default,null));const loadingIcon=React.createElement("span",{className:`${prefixCls}-menu-item-loading-icon`},React.createElement(_LoadingOutlined.default,
{spin:!0}));return React.useMemo(()=>[mergedExpandIcon,loadingIcon],[mergedExpandIcon])}}
//# sourceMappingURL=module$node_modules$antd$lib$cascader$hooks$useColumnIcons.js.map
