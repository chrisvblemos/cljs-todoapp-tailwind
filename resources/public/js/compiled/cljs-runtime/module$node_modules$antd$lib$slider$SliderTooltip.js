shadow$provide.module$node_modules$antd$lib$slider$SliderTooltip=function(global,require,module,exports){"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _react=module(require("module$node_modules$react$index")),_raf=global(require("module$node_modules$rc_util$lib$raf")),
_ref=require("module$node_modules$rc_util$lib$ref"),_tooltip=global(require("module$node_modules$antd$lib$tooltip$index"));require=_react.forwardRef((props,ref)=>{function cancelKeepAlign(){_raf.default.cancel(rafRef.current);rafRef.current=null}function keepAlign(){rafRef.current=(0,_raf.default)(()=>{var _a;null===(_a=innerRef.current)||void 0===_a?void 0:_a.forceAlign();rafRef.current=null})}const {open,draggingDelete}=props,innerRef=(0,_react.useRef)(null),mergedOpen=open&&!draggingDelete,rafRef=
(0,_react.useRef)(null);_react.useEffect(()=>{mergedOpen?keepAlign():cancelKeepAlign();return cancelKeepAlign},[mergedOpen,props.title]);return _react.createElement(_tooltip.default,Object.assign({ref:(0,_ref.composeRef)(innerRef,ref)},props,{open:mergedOpen}))});require.displayName="SliderTooltip";exports.default=require}
//# sourceMappingURL=module$node_modules$antd$lib$slider$SliderTooltip.js.map
