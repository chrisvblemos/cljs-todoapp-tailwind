shadow$provide.module$node_modules$rc_tree_select$lib$hooks$useCheckedKeys=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _toConsumableArray2=module(require("module$node_modules$$babel$runtime$helpers$toConsumableArray")),React=global(require("module$node_modules$react$index")),
_conductUtil=require("module$node_modules$rc_tree$lib$utils$conductUtil");exports.default=function(rawLabeledValues,rawHalfCheckedValues,treeConduction,keyEntities){return React.useMemo(function(){var extractValues=function(values){return values.map(function(_ref){return _ref.value})},checkedKeys=extractValues(rawLabeledValues),halfCheckedKeys=extractValues(rawHalfCheckedValues);extractValues=checkedKeys.filter(function(key){return!keyEntities[key]});var finalCheckedKeys=checkedKeys;treeConduction&&
(checkedKeys=(0,_conductUtil.conductCheck)(checkedKeys,!0,keyEntities),finalCheckedKeys=checkedKeys.checkedKeys,halfCheckedKeys=checkedKeys.halfCheckedKeys);return[Array.from(new Set([].concat((0,_toConsumableArray2.default)(extractValues),(0,_toConsumableArray2.default)(finalCheckedKeys)))),halfCheckedKeys]},[rawLabeledValues,rawHalfCheckedValues,treeConduction,keyEntities])}}
//# sourceMappingURL=module$node_modules$rc_tree_select$lib$hooks$useCheckedKeys.js.map
