{
"version":3,
"file":"module$node_modules$$rc_component$async_validator$lib$validator$type.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,oEAAA,CAAyF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG7HC,MAAAA,CAAyBH,OAAA,CAAQ,kEAAR,CAAwDI,CAAAA,OACrFC,OAAOC,CAAAA,cAAP,CAAsBJ,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CK,MAAO,CAAA,CADoC,CAA7C,CAGAL,QAAQE,CAAAA,OAAR,CAAkB,IAAK,EACvB,KAAII,MAAQL,MAAA,CAAuBH,OAAA,CAAQ,kEAAR,CAAvB,CAAZ,CACIS,MAAQT,OAAA,CAAQ,4DAAR,CAgBGE,QAAQE,CAAAA,OAAR,CAfJM,QAAa,CAACC,IAAD,CAAOJ,KAAP,CAAcK,QAAd;AAAwBC,MAAxB,CAAgCC,OAAhC,CAAyC,CAC/D,IAAIC,SAAWJ,IAAKD,CAAAA,IAApB,CACIM,OAAS,EAEb,IADeL,IAAKM,CAAAA,QACpB,EADgC,CAACN,IAAKM,CAAAA,QACtC,EADkDJ,MAAOK,CAAAA,cAAP,CAAsBP,IAAKQ,CAAAA,KAA3B,CAClD,CAAc,CACZ,GAAI,GAAIV,KAAMW,CAAAA,YAAV,EAAwBb,KAAxB,CAA+BQ,QAA/B,CAAJ,EAAgD,CAACJ,IAAKM,CAAAA,QAAtD,CACE,MAAOL,SAAA,EAETJ,MAAMJ,CAAAA,OAAQa,CAAAA,QAAd,CAAuBN,IAAvB,CAA6BJ,KAA7B,CAAoCM,MAApC,CAA4CG,MAA5C,CAAoDF,OAApD,CAA6DC,QAA7D,CACK,IAAIN,KAAMW,CAAAA,YAAV,EAAwBb,KAAxB,CAA+BQ,QAA/B,CAAL,EACEP,KAAMJ,CAAAA,OAAQM,CAAAA,IAAd,CAAmBC,IAAnB,CAAyBJ,KAAzB,CAAgCM,MAAhC,CAAwCG,MAAxC,CAAgDF,OAAhD,CANU,CASdF,QAAA,CAASI,MAAT,CAb+D,CAVgE;",
"sources":["node_modules/@rc-component/async-validator/lib/validator/type.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$rc_component$async_validator$lib$validator$type\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _rule = _interopRequireDefault(require(\"../rule\"));\nvar _util = require(\"../util\");\nvar type = function type(rule, value, callback, source, options) {\n  var ruleType = rule.type;\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  if (validate) {\n    if ((0, _util.isEmptyValue)(value, ruleType) && !rule.required) {\n      return callback();\n    }\n    _rule.default.required(rule, value, source, errors, options, ruleType);\n    if (!(0, _util.isEmptyValue)(value, ruleType)) {\n      _rule.default.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\nvar _default = exports.default = type;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","default","Object","defineProperty","value","_rule","_util","type","rule","callback","source","options","ruleType","errors","required","hasOwnProperty","field","isEmptyValue"]
}
