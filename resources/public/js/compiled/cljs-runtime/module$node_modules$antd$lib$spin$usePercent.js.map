{
"version":3,
"file":"module$node_modules$antd$lib$spin$usePercent.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,4CAAA,CAAiE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGrGC,MAAAA,CAA0BH,OAAA,CAAQ,mEAAR,CAAyDI,CAAAA,OACvFC,OAAOC,CAAAA,cAAP,CAAsBJ,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CK,MAAO,CAAA,CADoC,CAA7C,CAGAL,QAAQE,CAAAA,OAAR,CAIAI,QAAmB,CAACC,QAAD,CAAWC,OAAX,CAAoB,CACrC,MAAM,CAACC,WAAD,CAAcC,cAAd,CAAA,CAAgCC,KAAMC,CAAAA,QAAN,CAAe,CAAf,CAAtC,CACMC,gBAAkBF,KAAMG,CAAAA,MAAN,CAAa,IAAb,CADxB,CAEMC,OAAqB,MAArBA,GAASP,OACfG,MAAMK,CAAAA,SAAN,CAAgB,EAAA,EAAM,CAChBD,MAAJ,EAAcR,QAAd,GACEG,cAAA,CAAe,CAAf,CACA,CAAAG,eAAgBI,CAAAA,OAAhB,CAA0BC,WAAA,CAAY,EAAA,EAAM,CAC1CR,cAAA,CAAeS,IAAA;AAAQ,CACrB,MAAMC,QAAU,GAAVA,CAAgBD,IACtB,KAAK,IAAIE,EAAI,CAAb,CAAgBA,CAAhB,CAAoBC,YAAaC,CAAAA,MAAjC,CAAyCF,CAAzC,EAA8C,CAA9C,CAAiD,CAC/C,MAAM,CAACG,KAAD,CAAQC,OAAR,CAAA,CAAmBH,YAAA,CAAaD,CAAb,CACzB,IAAIF,IAAJ,EAAYK,KAAZ,CACE,MAAOL,KAAP,CAAcC,OAAd,CAAwBK,OAHqB,CAMjD,MAAON,KARc,CAAvB,CAD0C,CAAlB,CATVO,GASU,CAF5B,CAeA,OAAO,EAAA,EAAM,CACXC,aAAA,CAAcd,eAAgBI,CAAAA,OAA9B,CADW,CAhBO,CAAtB,CAmBG,CAACF,MAAD,CAASR,QAAT,CAnBH,CAoBA,OAAOQ,OAAA,CAASN,WAAT,CAAuBD,OAxBO,CAHvC,KAAIG,MAAQV,MAAA,CAAwBH,OAAA,CAAQ,iCAAR,CAAxB,CAEZ,OAAMwB,aAAe,CAAC,CAAC,EAAD,CAAK,GAAL,CAAD,CAAa,CAAC,EAAD,CAAK,GAAL,CAAb,CAAyB,CAAC,EAAD,CAAK,GAAL,CAAzB,CAVoF;",
"sources":["node_modules/antd/lib/spin/usePercent.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$lib$spin$usePercent\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = usePercent;\nvar React = _interopRequireWildcard(require(\"react\"));\nconst AUTO_INTERVAL = 200;\nconst STEP_BUCKETS = [[30, 0.05], [70, 0.03], [96, 0.01]];\nfunction usePercent(spinning, percent) {\n  const [mockPercent, setMockPercent] = React.useState(0);\n  const mockIntervalRef = React.useRef(null);\n  const isAuto = percent === 'auto';\n  React.useEffect(() => {\n    if (isAuto && spinning) {\n      setMockPercent(0);\n      mockIntervalRef.current = setInterval(() => {\n        setMockPercent(prev => {\n          const restPTG = 100 - prev;\n          for (let i = 0; i < STEP_BUCKETS.length; i += 1) {\n            const [limit, stepPtg] = STEP_BUCKETS[i];\n            if (prev <= limit) {\n              return prev + restPTG * stepPtg;\n            }\n          }\n          return prev;\n        });\n      }, AUTO_INTERVAL);\n    }\n    return () => {\n      clearInterval(mockIntervalRef.current);\n    };\n  }, [isAuto, spinning]);\n  return isAuto ? mockPercent : percent;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireWildcard","default","Object","defineProperty","value","usePercent","spinning","percent","mockPercent","setMockPercent","React","useState","mockIntervalRef","useRef","isAuto","useEffect","current","setInterval","prev","restPTG","i","STEP_BUCKETS","length","limit","stepPtg","AUTO_INTERVAL","clearInterval"]
}
