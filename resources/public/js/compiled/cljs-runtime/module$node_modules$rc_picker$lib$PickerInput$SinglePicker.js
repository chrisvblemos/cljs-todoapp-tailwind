shadow$provide.module$node_modules$rc_picker$lib$PickerInput$SinglePicker=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _extends2=module(require("module$node_modules$$babel$runtime$helpers$extends")),_toConsumableArray2=module(require("module$node_modules$$babel$runtime$helpers$toConsumableArray")),
_objectSpread2=module(require("module$node_modules$$babel$runtime$helpers$objectSpread2")),_slicedToArray2=module(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),_rcUtil=require("module$node_modules$rc_util$lib$index"),_useLayoutEffect=module(require("module$node_modules$rc_util$lib$hooks$useLayoutEffect")),_omit=module(require("module$node_modules$rc_util$lib$omit")),_pickAttrs=module(require("module$node_modules$rc_util$lib$pickAttrs")),React=global(require("module$node_modules$react$index")),
_useToggleDates=module(require("module$node_modules$rc_picker$lib$hooks$useToggleDates")),_PickerTrigger=module(require("module$node_modules$rc_picker$lib$PickerTrigger$index")),_util=require("module$node_modules$rc_picker$lib$PickerTrigger$util"),_miscUtil=require("module$node_modules$rc_picker$lib$utils$miscUtil"),_context=module(require("module$node_modules$rc_picker$lib$PickerInput$context")),_useCellRender=module(require("module$node_modules$rc_picker$lib$PickerInput$hooks$useCellRender")),_useFieldsInvalidate3=
module(require("module$node_modules$rc_picker$lib$PickerInput$hooks$useFieldsInvalidate")),_useFilledProps3=module(require("module$node_modules$rc_picker$lib$PickerInput$hooks$useFilledProps")),_useOpen3=module(require("module$node_modules$rc_picker$lib$PickerInput$hooks$useOpen")),_usePickerRef=module(require("module$node_modules$rc_picker$lib$PickerInput$hooks$usePickerRef")),_usePresets=module(require("module$node_modules$rc_picker$lib$PickerInput$hooks$usePresets")),_useRangeActive3=module(require("module$node_modules$rc_picker$lib$PickerInput$hooks$useRangeActive")),
_useRangePickerValue3=module(require("module$node_modules$rc_picker$lib$PickerInput$hooks$useRangePickerValue")),_useRangeValue3=global(require("module$node_modules$rc_picker$lib$PickerInput$hooks$useRangeValue")),_useShowNow=module(require("module$node_modules$rc_picker$lib$PickerInput$hooks$useShowNow")),_Popup=module(require("module$node_modules$rc_picker$lib$PickerInput$Popup$index")),_SingleSelector=module(require("module$node_modules$rc_picker$lib$PickerInput$Selector$SingleSelector$index"));
require=React.forwardRef(function(props,ref){function pickerParam(values){return null===values?null:multiple?values:values[0]}var _useFilledProps=(0,_useFilledProps3.default)(props),_useFilledProps2=(0,_slicedToArray2.default)(_useFilledProps,6),filledProps=_useFilledProps2[0],internalPicker=_useFilledProps2[1],complexPicker=_useFilledProps2[2],formatList=_useFilledProps2[3],maskFormat=_useFilledProps2[4],isInvalidateDate=_useFilledProps2[5],prefixCls=filledProps.prefixCls,styles=filledProps.styles,
classNames=filledProps.classNames,order=filledProps.order,defaultValue=filledProps.defaultValue,value=filledProps.value,needConfirm=filledProps.needConfirm,onChange=filledProps.onChange,onKeyDown=filledProps.onKeyDown,disabled=filledProps.disabled,disabledDate=filledProps.disabledDate,minDate=filledProps.minDate,maxDate=filledProps.maxDate,defaultOpen=filledProps.defaultOpen,open=filledProps.open,onOpenChange=filledProps.onOpenChange,locale=filledProps.locale,generateConfig=filledProps.generateConfig,
picker=filledProps.picker,showNow=filledProps.showNow,showToday=filledProps.showToday,showTime=filledProps.showTime,mode=filledProps.mode,onPanelChange=filledProps.onPanelChange,onCalendarChange=filledProps.onCalendarChange,onOk=filledProps.onOk,multiple=filledProps.multiple,defaultPickerValue=filledProps.defaultPickerValue,pickerValue=filledProps.pickerValue,onPickerValueChange=filledProps.onPickerValueChange,inputReadOnly=filledProps.inputReadOnly,suffixIcon=filledProps.suffixIcon,removeIcon=filledProps.removeIcon,
onFocus=filledProps.onFocus,onBlur=filledProps.onBlur,presets=filledProps.presets,components=filledProps.components,cellRender=filledProps.cellRender,dateRender=filledProps.dateRender,monthCellRender=filledProps.monthCellRender,onClick=filledProps.onClick,selectorRef=(0,_usePickerRef.default)(ref),toggleDates=(0,_useToggleDates.default)(generateConfig,locale,internalPicker),_useOpen=(0,_useOpen3.default)(open,defaultOpen,[disabled],onOpenChange),_useOpen2=(0,_slicedToArray2.default)(_useOpen,2),mergedOpen=
_useOpen2[0],triggerOpen=_useOpen2[1],_useInnerValue=(0,_useRangeValue3.useInnerValue)(generateConfig,locale,formatList,!1,order,defaultValue,value,function(dates,dateStrings,info){onCalendarChange&&(info=(0,_objectSpread2.default)({},info),delete info.range,onCalendarChange(pickerParam(dates),pickerParam(dateStrings),info))},function(dates){null===onOk||void 0===onOk||onOk(pickerParam(dates))}),_useInnerValue2=(0,_slicedToArray2.default)(_useInnerValue,5),mergedValue=_useInnerValue2[0],setInnerValue=
_useInnerValue2[1],getCalendarValue=_useInnerValue2[2],triggerCalendarChange=_useInnerValue2[3],triggerOk=_useInnerValue2[4],calendarValue=getCalendarValue(),_useRangeActive=(0,_useRangeActive3.default)([disabled]),_useRangeActive2=(0,_slicedToArray2.default)(_useRangeActive,4),focused=_useRangeActive2[0],triggerFocus=_useRangeActive2[1],lastOperation=_useRangeActive2[2],activeIndex=_useRangeActive2[3],onSharedFocus=function(event){triggerFocus(!0);null===onFocus||void 0===onFocus||onFocus(event,
{})},onSharedBlur=function(event){triggerFocus(!1);null===onBlur||void 0===onBlur||onBlur(event,{})},_useMergedState=(0,_rcUtil.useMergedState)(picker,{value:mode}),_useMergedState2=(0,_slicedToArray2.default)(_useMergedState,2),mergedMode=_useMergedState2[0],setMode=_useMergedState2[1],internalMode="date"===mergedMode&&showTime?"datetime":mergedMode,mergedShowNow=(0,_useShowNow.default)(picker,mergedMode,showNow,showToday),onInternalChange=onChange&&function(dates,dateStrings){onChange(pickerParam(dates),
pickerParam(dateStrings))},_useRangeValue=(0,_useRangeValue3.default)((0,_objectSpread2.default)((0,_objectSpread2.default)({},filledProps),{},{onChange:onInternalChange}),mergedValue,setInnerValue,getCalendarValue,triggerCalendarChange,[],formatList,focused,mergedOpen,isInvalidateDate),triggerSubmitChange=(0,_slicedToArray2.default)(_useRangeValue,2)[1],_useFieldsInvalidate=(0,_useFieldsInvalidate3.default)(calendarValue,isInvalidateDate),_useFieldsInvalidate2=(0,_slicedToArray2.default)(_useFieldsInvalidate,
2),submitInvalidates=_useFieldsInvalidate2[0],onSelectorInvalid=_useFieldsInvalidate2[1],submitInvalidate=React.useMemo(function(){return submitInvalidates.some(function(invalidated){return invalidated})},[submitInvalidates]),_useRangePickerValue=(0,_useRangePickerValue3.default)(generateConfig,locale,calendarValue,[mergedMode],mergedOpen,activeIndex,internalPicker,!1,defaultPickerValue,pickerValue,(0,_miscUtil.toArray)(null===showTime||void 0===showTime?void 0:showTime.defaultOpenValue),function(dates,
info){onPickerValueChange&&(info=(0,_objectSpread2.default)((0,_objectSpread2.default)({},info),{},{mode:info.mode[0]}),delete info.range,onPickerValueChange(dates[0],info))},minDate,maxDate),_useRangePickerValue2=(0,_slicedToArray2.default)(_useRangePickerValue,2),currentPickerValue=_useRangePickerValue2[0],setCurrentPickerValue=_useRangePickerValue2[1],triggerModeChange=(0,_rcUtil.useEvent)(function(nextPickerValue,nextMode,triggerEvent){setMode(nextMode);onPanelChange&&!1!==triggerEvent&&onPanelChange(nextPickerValue||
calendarValue[calendarValue.length-1],nextMode)}),triggerConfirm=function(){triggerSubmitChange(getCalendarValue());triggerOpen(!1,{force:!0})},_React$useState=React.useState(null),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),hoverSource=_React$useState2[0],setHoverSource=_React$useState2[1],_React$useState3=React.useState(null),_React$useState4=(0,_slicedToArray2.default)(_React$useState3,2),internalHoverValue=_React$useState4[0],setInternalHoverValue=_React$useState4[1],hoverValues=
React.useMemo(function(){var values=[internalHoverValue].concat((0,_toConsumableArray2.default)(calendarValue)).filter(function(date){return date});return multiple?values:values.slice(0,1)},[calendarValue,internalHoverValue,multiple]),selectorValues=React.useMemo(function(){return!multiple&&internalHoverValue?[internalHoverValue]:calendarValue.filter(function(date){return date})},[calendarValue,internalHoverValue,multiple]);React.useEffect(function(){mergedOpen||setInternalHoverValue(null)},[mergedOpen]);
var presetList=(0,_usePresets.default)(presets),onPresetSubmit=function(nextValue){nextValue=multiple?toggleDates(getCalendarValue(),nextValue):[nextValue];triggerSubmitChange(nextValue)&&!multiple&&triggerOpen(!1,{force:!0})},onInternalCellRender=(0,_useCellRender.default)(cellRender,dateRender,monthCellRender),panelProps=React.useMemo(function(){var domProps=(0,_pickAttrs.default)(filledProps,!1);domProps=(0,_omit.default)(filledProps,[].concat((0,_toConsumableArray2.default)(Object.keys(domProps)),
["onChange","onCalendarChange","style","className","onPanelChange"]));return(0,_objectSpread2.default)((0,_objectSpread2.default)({},domProps),{},{multiple:filledProps.multiple})},[filledProps]),panel=React.createElement(_Popup.default,(0,_extends2.default)({},panelProps,{showNow:mergedShowNow,showTime,disabledDate,onFocus:function(event){triggerOpen(!0);onSharedFocus(event)},onBlur:onSharedBlur,picker,mode:mergedMode,internalMode,onPanelChange:triggerModeChange,format:maskFormat,value:calendarValue,
isInvalid:isInvalidateDate,onChange:null,onSelect:function(date){lastOperation("panel");multiple&&internalMode!==picker||(date=multiple?toggleDates(getCalendarValue(),date):[date],triggerCalendarChange(date),needConfirm||complexPicker||internalPicker!==internalMode||triggerConfirm())},pickerValue:currentPickerValue,defaultOpenValue:null===showTime||void 0===showTime?void 0:showTime.defaultOpenValue,onPickerValueChange:setCurrentPickerValue,hoverValue:hoverValues,onHover:function(date){setInternalHoverValue(date);
setHoverSource("cell")},needConfirm,onSubmit:triggerConfirm,onOk:triggerOk,presets:presetList,onPresetHover:function(nextValue){setInternalHoverValue(nextValue);setHoverSource("preset")},onPresetSubmit,onNow:function(now){onPresetSubmit(now)},cellRender:onInternalCellRender})),context=React.useMemo(function(){return{prefixCls,locale,generateConfig,button:components.button,input:components.input}},[prefixCls,locale,generateConfig,components.button,components.input]);(0,_useLayoutEffect.default)(function(){mergedOpen&&
void 0!==activeIndex&&triggerModeChange(null,picker,!1)},[mergedOpen,activeIndex,picker]);(0,_useLayoutEffect.default)(function(){var lastOp=lastOperation();mergedOpen||"input"!==lastOp||(triggerOpen(!1),triggerConfirm());mergedOpen||!complexPicker||needConfirm||"panel"!==lastOp||(triggerOpen(!0),triggerConfirm())},[mergedOpen]);return React.createElement(_context.default.Provider,{value:context},React.createElement(_PickerTrigger.default,(0,_extends2.default)({},(0,_util.pickTriggerProps)(filledProps),
{popupElement:panel,popupStyle:styles.popup,popupClassName:classNames.popup,visible:mergedOpen,onClose:function(){triggerOpen(!1)}}),React.createElement(_SingleSelector.default,(0,_extends2.default)({},filledProps,{ref:selectorRef,suffixIcon,removeIcon,activeHelp:!!internalHoverValue,allHelp:!!internalHoverValue&&"preset"===hoverSource,focused,onFocus:function(event){lastOperation("input");triggerOpen(!0,{inherit:!0});onSharedFocus(event)},onBlur:function(event){triggerOpen(!1);onSharedBlur(event)},
onKeyDown:function(event,preventDefault){"Tab"===event.key&&triggerConfirm();null===onKeyDown||void 0===onKeyDown||onKeyDown(event,preventDefault)},onSubmit:triggerConfirm,value:selectorValues,maskFormat,onChange:function(date){triggerCalendarChange(date)},onInputChange:function(){lastOperation("input")},internalPicker,format:formatList,inputReadOnly,disabled,open:mergedOpen,onOpenChange:triggerOpen,onClick:function(event){disabled||selectorRef.current.nativeElement.contains(document.activeElement)||
selectorRef.current.focus();triggerOpen(!0);null===onClick||void 0===onClick||onClick(event)},onClear:function(){triggerSubmitChange(null);triggerOpen(!1,{force:!0})},invalid:submitInvalidate,onInvalid:function(invalid){onSelectorInvalid(invalid,0)}}))))});require.displayName="RefPicker";exports.default=require}
//# sourceMappingURL=module$node_modules$rc_picker$lib$PickerInput$SinglePicker.js.map
