{
"version":3,
"file":"module$node_modules$antd$lib$watermark$context.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,8CAAA,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAY3GC,QAASA,SAAQ,EAAG,EAThBC,MAAAA,CAAyBJ,OAAA,CAAQ,kEAAR,CAAwDK,CAAAA,OACjFC,OAAAA,CAA0BN,OAAA,CAAQ,mEAAR,CAAyDK,CAAAA,OACvFE,OAAOC,CAAAA,cAAP,CAAsBN,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CO,MAAO,CAAA,CADoC,CAA7C,CAGAP,QAAQG,CAAAA,OAAR,CAAkB,IAAK,EACvBH,QAAQQ,CAAAA,WAAR,CAQAA,QAAoB,CAACC,aAAD,CAAgB,CAClC,MAAMC,UAAYC,KAAMC,CAAAA,UAAN,CAAiBC,gBAAjB,CAAlB,CACMC,YAAcH,KAAMI,CAAAA,MAAN,CAAa,IAAb,CAUpB;MATiBC,GAAIC,SAAUd,CAAAA,OAAda,EAAuBE,GAAA,EAAO,CACzCA,GAAJ,EACQC,GAEN,CAFwBV,aAAA,CAAgBS,GAAIE,CAAAA,aAAJ,CAAkBX,aAAlB,CAAhB,CAAmDS,GAE3E,CADAR,SAAUW,CAAAA,GAAV,CAAcF,GAAd,CACA,CAAAL,WAAYQ,CAAAA,OAAZ,CAAsBH,GAHxB,EAKET,SAAUa,CAAAA,MAAV,CAAiBT,WAAYQ,CAAAA,OAA7B,CAN2C,CAA9BN,CAHiB,CAPpC,KAAIL,MAAQP,MAAA,CAAwBN,OAAA,CAAQ,iCAAR,CAAxB,CAAZ,CACImB,UAAYf,MAAA,CAAuBJ,OAAA,CAAQ,gDAAR,CAAvB,CAEhB,OAAMe,iBAAgCF,KAAMa,CAAAA,aAAN,CAAoB,CACxDH,IAAKpB,QADmD,CAExDsB,OAAQtB,QAFgD,CAApB,CAkBvBD,QAAQG,CAAAA,OAAR,CAAkBU,gBA/B0E;",
"sources":["node_modules/antd/lib/watermark/context.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$lib$watermark$context\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.usePanelRef = usePanelRef;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _useEvent = _interopRequireDefault(require(\"rc-util/lib/hooks/useEvent\"));\nfunction voidFunc() {}\nconst WatermarkContext = /*#__PURE__*/React.createContext({\n  add: voidFunc,\n  remove: voidFunc\n});\nfunction usePanelRef(panelSelector) {\n  const watermark = React.useContext(WatermarkContext);\n  const panelEleRef = React.useRef(null);\n  const panelRef = (0, _useEvent.default)(ele => {\n    if (ele) {\n      const innerContentEle = panelSelector ? ele.querySelector(panelSelector) : ele;\n      watermark.add(innerContentEle);\n      panelEleRef.current = innerContentEle;\n    } else {\n      watermark.remove(panelEleRef.current);\n    }\n  });\n  return panelRef;\n}\nvar _default = exports.default = WatermarkContext;\n};"],
"names":["shadow$provide","global","require","module","exports","voidFunc","_interopRequireDefault","default","_interopRequireWildcard","Object","defineProperty","value","usePanelRef","panelSelector","watermark","React","useContext","WatermarkContext","panelEleRef","useRef","panelRef","_useEvent","ele","innerContentEle","querySelector","add","current","remove","createContext"]
}
