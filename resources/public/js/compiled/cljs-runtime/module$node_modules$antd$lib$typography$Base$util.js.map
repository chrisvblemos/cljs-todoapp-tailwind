{
"version":3,
"file":"module$node_modules$antd$lib$typography$Base$util.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,iDAAA,CAAsE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG9GC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,OAAR,CAUAA,QAAgB,CAACC,GAAD,CAAMC,WAAN,CAAmBC,OAAnB,CAA4B,CAC1C,MAAY,CAAA,CAAZ,GAAIF,GAAJ,EAA4BG,IAAAA,EAA5B,GAAoBH,GAApB,CACSC,WADT,CAGOD,GAHP,EAGcE,OAHd,EAGyBD,WAJiB,CAT5CN,QAAQS,CAAAA,aAAR,CAqBAA,QAAsB,CAACC,GAAD,CAAM,CAE1B,MAAMC,SAAWC,QAASC,CAAAA,aAAT,CAAuB,IAAvB,CACjBH,IAAII,CAAAA,WAAJ,CAAgBH,QAAhB,CAGEA,SAASI,CAAAA,SAAT,CAAqB,6CAEvB,OAAMC,KAAON,GAAIO,CAAAA,qBAAJ,EAAb,CACMC,UAAYP,QAASM,CAAAA,qBAAT,EAElBP;GAAIS,CAAAA,WAAJ,CAAgBR,QAAhB,CAEA,OAEEK,KAAKI,CAAAA,IAFP,CAEcF,SAAUE,CAAAA,IAFxB,EAEgCF,SAAUG,CAAAA,KAF1C,CAEkDL,IAAKK,CAAAA,KAFvD,EAIEL,IAAKM,CAAAA,GAJP,CAIaJ,SAAUI,CAAAA,GAJvB,EAI8BJ,SAAUK,CAAAA,MAJxC,CAIiDP,IAAKO,CAAAA,MAjB5B,CApB5BvB,QAAQwB,CAAAA,WAAR,CAAsB,IAAK,EAC3BxB,QAAQyB,CAAAA,MAAR,CACAA,QAAe,CAACC,GAAD,CAAM,CACnB,MAAY,CAAA,CAAZ,GAAIA,GAAJ,CACS,CAAC,CAAA,CAAD,CAAQ,CAAA,CAAR,CADT,CAGOC,KAAMC,CAAAA,OAAN,CAAcF,GAAd,CAAA,CAAqBA,GAArB,CAA2B,CAACA,GAAD,CAJf,CAuCrB1B,QAAQwB,CAAAA,WAAR,CADoBE,GAAAF,EAAO,CAAC,QAAD,CAAW,QAAX,CAAqBK,CAAAA,QAArB,CAA8B,MAAOH,IAArC,CAhDmF;",
"sources":["node_modules/antd/lib/typography/Base/util.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$lib$typography$Base$util\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getNode = getNode;\nexports.isEleEllipsis = isEleEllipsis;\nexports.isValidText = void 0;\nexports.toList = toList;\nfunction toList(val) {\n  if (val === false) {\n    return [false, false];\n  }\n  return Array.isArray(val) ? val : [val];\n}\nfunction getNode(dom, defaultNode, needDom) {\n  if (dom === true || dom === undefined) {\n    return defaultNode;\n  }\n  return dom || needDom && defaultNode;\n}\n/**\n * Check for element is native ellipsis\n * ref:\n * - https://github.com/ant-design/ant-design/issues/50143\n * - https://github.com/ant-design/ant-design/issues/50414\n */\nfunction isEleEllipsis(ele) {\n  // Create a new div to get the size\n  const childDiv = document.createElement('em');\n  ele.appendChild(childDiv);\n  // For test case\n  if (process.env.NODE_ENV !== 'production') {\n    childDiv.className = 'ant-typography-css-ellipsis-content-measure';\n  }\n  const rect = ele.getBoundingClientRect();\n  const childRect = childDiv.getBoundingClientRect();\n  // Reset\n  ele.removeChild(childDiv);\n  // Range checker\n  return (\n    // Horizontal out of range\n    rect.left > childRect.left || childRect.right > rect.right ||\n    // Vertical out of range\n    rect.top > childRect.top || childRect.bottom > rect.bottom\n  );\n}\nconst isValidText = val => ['string', 'number'].includes(typeof val);\nexports.isValidText = isValidText;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","getNode","dom","defaultNode","needDom","undefined","isEleEllipsis","ele","childDiv","document","createElement","appendChild","className","rect","getBoundingClientRect","childRect","removeChild","left","right","top","bottom","isValidText","toList","val","Array","isArray","includes"]
}
