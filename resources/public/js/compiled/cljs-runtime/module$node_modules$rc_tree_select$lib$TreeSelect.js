shadow$provide.module$node_modules$rc_tree_select$lib$TreeSelect=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _extends2=global(require("module$node_modules$$babel$runtime$helpers$extends")),_toConsumableArray2=global(require("module$node_modules$$babel$runtime$helpers$toConsumableArray")),
_objectSpread2=global(require("module$node_modules$$babel$runtime$helpers$objectSpread2")),_slicedToArray2=global(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),_objectWithoutProperties2=global(require("module$node_modules$$babel$runtime$helpers$objectWithoutProperties")),_typeof2=global(require("module$node_modules$$babel$runtime$helpers$typeof")),_rcSelect=require("module$node_modules$rc_select$lib$index"),_useId=global(require("module$node_modules$rc_select$lib$hooks$useId")),
_conductUtil=require("module$node_modules$rc_tree$lib$utils$conductUtil"),_useMergedState5=global(require("module$node_modules$rc_util$lib$hooks$useMergedState")),_warning=global(require("module$node_modules$rc_util$lib$warning")),React=module(require("module$node_modules$react$index")),_useCache3=global(require("module$node_modules$rc_tree_select$lib$hooks$useCache")),_useCheckedKeys3=global(require("module$node_modules$rc_tree_select$lib$hooks$useCheckedKeys")),_useDataEntities2=global(require("module$node_modules$rc_tree_select$lib$hooks$useDataEntities")),
_useFilterTreeData=global(require("module$node_modules$rc_tree_select$lib$hooks$useFilterTreeData")),_useRefFunc=global(require("module$node_modules$rc_tree_select$lib$hooks$useRefFunc")),_useTreeData=global(require("module$node_modules$rc_tree_select$lib$hooks$useTreeData")),_LegacyContext=global(require("module$node_modules$rc_tree_select$lib$LegacyContext")),_OptionList=global(require("module$node_modules$rc_tree_select$lib$OptionList"));module=global(require("module$node_modules$rc_tree_select$lib$TreeNode"));
var _TreeSelectContext=global(require("module$node_modules$rc_tree_select$lib$TreeSelectContext")),_legacyUtil=require("module$node_modules$rc_tree_select$lib$utils$legacyUtil"),_strategyUtil=require("module$node_modules$rc_tree_select$lib$utils$strategyUtil"),_valueUtil=require("module$node_modules$rc_tree_select$lib$utils$valueUtil"),_warningPropsUtil=global(require("module$node_modules$rc_tree_select$lib$utils$warningPropsUtil")),_excluded="id prefixCls value defaultValue onChange onSelect onDeselect searchValue inputValue onSearch autoClearSearchValue filterTreeNode treeNodeFilterProp showCheckedStrategy treeNodeLabelProp multiple treeCheckable treeCheckStrictly labelInValue maxCount fieldNames treeDataSimpleMode treeData children loadData treeLoadedKeys onTreeLoad treeDefaultExpandAll treeExpandedKeys treeDefaultExpandedKeys onTreeExpand treeExpandAction virtual listHeight listItemHeight listItemScrollOffset onDropdownVisibleChange dropdownMatchSelectWidth treeLine treeIcon showTreeIcon switcherIcon treeMotion treeTitleRender onPopupScroll".split(" ");
require=React.forwardRef(function(props,ref){var id=props.id,_props$prefixCls=props.prefixCls;_props$prefixCls=void 0===_props$prefixCls?"rc-tree-select":_props$prefixCls;var value=props.value,defaultValue=props.defaultValue,onChange=props.onChange,onSelect=props.onSelect,onDeselect=props.onDeselect,searchValue=props.searchValue,inputValue=props.inputValue,onSearch=props.onSearch,_props$autoClearSearc=props.autoClearSearchValue,autoClearSearchValue=void 0===_props$autoClearSearc?!0:_props$autoClearSearc,
filterTreeNode=props.filterTreeNode;_props$autoClearSearc=props.treeNodeFilterProp;var treeNodeFilterProp=void 0===_props$autoClearSearc?"value":_props$autoClearSearc,showCheckedStrategy=props.showCheckedStrategy,treeNodeLabelProp=props.treeNodeLabelProp,multiple=props.multiple,treeCheckable=props.treeCheckable,treeCheckStrictly=props.treeCheckStrictly,labelInValue=props.labelInValue,maxCount=props.maxCount,fieldNames=props.fieldNames,treeDataSimpleMode=props.treeDataSimpleMode,treeData=props.treeData,
children=props.children,loadData=props.loadData,treeLoadedKeys=props.treeLoadedKeys,onTreeLoad=props.onTreeLoad,treeDefaultExpandAll=props.treeDefaultExpandAll,treeExpandedKeys=props.treeExpandedKeys,treeDefaultExpandedKeys=props.treeDefaultExpandedKeys,onTreeExpand=props.onTreeExpand,treeExpandAction=props.treeExpandAction,virtual=props.virtual;_props$autoClearSearc=props.listHeight;var listHeight=void 0===_props$autoClearSearc?200:_props$autoClearSearc;_props$autoClearSearc=props.listItemHeight;
var listItemHeight=void 0===_props$autoClearSearc?20:_props$autoClearSearc;_props$autoClearSearc=props.listItemScrollOffset;var listItemScrollOffset=void 0===_props$autoClearSearc?0:_props$autoClearSearc,onDropdownVisibleChange=props.onDropdownVisibleChange;_props$autoClearSearc=props.dropdownMatchSelectWidth;var dropdownMatchSelectWidth=void 0===_props$autoClearSearc?!0:_props$autoClearSearc,treeLine=props.treeLine,treeIcon=props.treeIcon,showTreeIcon=props.showTreeIcon,switcherIcon=props.switcherIcon,
treeMotion=props.treeMotion,treeTitleRender=props.treeTitleRender,onPopupScroll=props.onPopupScroll;_props$autoClearSearc=(0,_objectWithoutProperties2.default)(props,_excluded);id=(0,_useId.default)(id);var treeConduction=treeCheckable&&!treeCheckStrictly,mergedCheckable=treeCheckable||treeCheckStrictly,mergedLabelInValue=treeCheckStrictly||labelInValue,mergedMultiple=mergedCheckable||multiple;value=(0,_useMergedState5.default)(defaultValue,{value});value=(0,_slicedToArray2.default)(value,2);var internalValue=
value[0],setInternalValue=value[1],mergedShowCheckedStrategy=React.useMemo(function(){return treeCheckable?showCheckedStrategy||_strategyUtil.SHOW_CHILD:_strategyUtil.SHOW_ALL},[showCheckedStrategy,treeCheckable]);(0,_warningPropsUtil.default)(props);var mergedFieldNames=React.useMemo(function(){return(0,_valueUtil.fillFieldNames)(fieldNames)},[JSON.stringify(fieldNames)]);props=(0,_useMergedState5.default)("",{value:void 0!==searchValue?searchValue:inputValue,postState:function(search){return search||
""}});searchValue=(0,_slicedToArray2.default)(props,2);props=searchValue[0];var setSearchValue=searchValue[1],mergedTreeData=(0,_useTreeData.default)(treeData,children,treeDataSimpleMode);treeDataSimpleMode=(0,_useDataEntities2.default)(mergedTreeData,mergedFieldNames);var keyEntities=treeDataSimpleMode.keyEntities,valueEntities=treeDataSimpleMode.valueEntities,splitRawValues=React.useCallback(function(newRawValues){var missingRawValues=[],existRawValues=[];newRawValues.forEach(function(val){valueEntities.has(val)?
existRawValues.push(val):missingRawValues.push(val)});return{missingRawValues,existRawValues}},[valueEntities]),filteredTreeData=(0,_useFilterTreeData.default)(mergedTreeData,props,{fieldNames:mergedFieldNames,treeNodeFilterProp,filterTreeNode}),getLabel=React.useCallback(function(item){if(item){if(treeNodeLabelProp)return item[treeNodeLabelProp];for(var titleList=mergedFieldNames._title,i=0;i<titleList.length;i+=1){var title=item[titleList[i]];if(void 0!==title)return title}}},[mergedFieldNames,
treeNodeLabelProp]),toLabeledValues=React.useCallback(function(draftValues){return(0,_valueUtil.toArray)(draftValues).map(function(val){return val&&"object"===(0,_typeof2.default)(val)?val:{value:val}})},[]),convert2LabelValues=React.useCallback(function(draftValues){return toLabeledValues(draftValues).map(function(item){var rawLabel=item.label,rawValue=item.value;item=item.halfChecked;var entity=valueEntities.get(rawValue);if(entity){var _rawLabel;rawLabel=treeTitleRender?treeTitleRender(entity.node):
null!==(_rawLabel=rawLabel)&&void 0!==_rawLabel?_rawLabel:getLabel(entity.node);var rawDisabled=entity.node.disabled}else void 0===rawLabel&&(rawLabel=toLabeledValues(internalValue).find(function(labeledItem){return labeledItem.value===rawValue}).label);return{label:rawLabel,value:rawValue,halfChecked:item,disabled:rawDisabled}})},[valueEntities,getLabel,toLabeledValues,internalValue]),rawMixedLabeledValues=React.useMemo(function(){return toLabeledValues(null===internalValue?[]:internalValue)},[toLabeledValues,
internalValue]);filterTreeNode=React.useMemo(function(){var fullCheckValues=[],halfCheckValues=[];rawMixedLabeledValues.forEach(function(item){item.halfChecked?halfCheckValues.push(item):fullCheckValues.push(item)});return[fullCheckValues,halfCheckValues]},[rawMixedLabeledValues]);filterTreeNode=(0,_slicedToArray2.default)(filterTreeNode,2);var rawLabeledValues=filterTreeNode[0],rawHalfLabeledValues=filterTreeNode[1],rawValues=React.useMemo(function(){return rawLabeledValues.map(function(item){return item.value})},
[rawLabeledValues]);filterTreeNode=(0,_useCheckedKeys3.default)(rawLabeledValues,rawHalfLabeledValues,treeConduction,keyEntities);filterTreeNode=(0,_slicedToArray2.default)(filterTreeNode,2);var rawCheckedValues=filterTreeNode[0],rawHalfCheckedValues=filterTreeNode[1];filterTreeNode=React.useMemo(function(){var labeledValues=(0,_strategyUtil.formatStrategyValues)(rawCheckedValues,mergedShowCheckedStrategy,keyEntities,mergedFieldNames).map(function(key){var _keyEntities$key$node,_keyEntities$key;return null!==
(_keyEntities$key$node=null===(_keyEntities$key=keyEntities[key])||void 0===_keyEntities$key||null===(_keyEntities$key=_keyEntities$key.node)||void 0===_keyEntities$key?void 0:_keyEntities$key[mergedFieldNames.value])&&void 0!==_keyEntities$key$node?_keyEntities$key$node:key}).map(function(val){var targetItem=rawLabeledValues.find(function(item){return item.value===val});targetItem=labelInValue?null===targetItem||void 0===targetItem?void 0:targetItem.label:null===treeTitleRender||void 0===treeTitleRender?
void 0:treeTitleRender(targetItem);return{value:val,label:targetItem}});labeledValues=convert2LabelValues(labeledValues);var firstVal=labeledValues[0];return!mergedMultiple&&firstVal&&(0,_valueUtil.isNil)(firstVal.value)&&(0,_valueUtil.isNil)(firstVal.label)?[]:labeledValues.map(function(item){var _item$label;return(0,_objectSpread2.default)((0,_objectSpread2.default)({},item),{},{label:null!==(_item$label=item.label)&&void 0!==_item$label?_item$label:item.value})})},[mergedFieldNames,mergedMultiple,
rawCheckedValues,rawLabeledValues,convert2LabelValues,mergedShowCheckedStrategy,keyEntities]);filterTreeNode=(0,_useCache3.default)(filterTreeNode);var cachedDisplayValues=(0,_slicedToArray2.default)(filterTreeNode,1)[0],mergedMaxCount=React.useMemo(function(){return!mergedMultiple||"SHOW_CHILD"!==mergedShowCheckedStrategy&&!treeCheckStrictly&&treeCheckable?null:maxCount},[maxCount,mergedMultiple,treeCheckStrictly,mergedShowCheckedStrategy,treeCheckable]),triggerChange=(0,_useRefFunc.default)(function(newRawValues,
extra,source){var formattedKeyList=(0,_strategyUtil.formatStrategyValues)(newRawValues,mergedShowCheckedStrategy,keyEntities,mergedFieldNames);if(!(mergedMaxCount&&formattedKeyList.length>mergedMaxCount)){var labeledValues=convert2LabelValues(newRawValues);setInternalValue(labeledValues);autoClearSearchValue&&setSearchValue("");if(onChange){var eventValues=newRawValues;treeConduction&&(eventValues=formattedKeyList.map(function(key){var entity=valueEntities.get(key);return entity?entity.node[mergedFieldNames.value]:
key}));formattedKeyList=extra||{triggerValue:void 0,selected:void 0};extra=formattedKeyList.triggerValue;formattedKeyList=formattedKeyList.selected;labeledValues=eventValues;if(treeCheckStrictly){var halfValues=rawHalfLabeledValues.filter(function(item){return!eventValues.includes(item.value)});labeledValues=[].concat((0,_toConsumableArray2.default)(labeledValues),(0,_toConsumableArray2.default)(halfValues))}labeledValues=convert2LabelValues(labeledValues);halfValues={preValue:rawLabeledValues,triggerValue:extra};
var showPosition=!0;if(treeCheckStrictly||"selection"===source&&!formattedKeyList)showPosition=!1;(0,_legacyUtil.fillAdditionalInfo)(halfValues,extra,newRawValues,mergedTreeData,showPosition,mergedFieldNames);mergedCheckable?halfValues.checked=formattedKeyList:halfValues.selected=formattedKeyList;newRawValues=mergedLabelInValue?labeledValues:labeledValues.map(function(item){return item.value});onChange(mergedMultiple?newRawValues:newRawValues[0],mergedLabelInValue?null:labeledValues.map(function(item){return item.label}),
halfValues)}}}),onOptionSelect=React.useCallback(function(selectedKey,_ref2){var _node$mergedFieldName,selected=_ref2.selected;_ref2=_ref2.source;var entity=keyEntities[selectedKey];entity=null===entity||void 0===entity?void 0:entity.node;var selectedValue=null!==(_node$mergedFieldName=null===entity||void 0===entity?void 0:entity[mergedFieldNames.value])&&void 0!==_node$mergedFieldName?_node$mergedFieldName:selectedKey;mergedMultiple?(selectedKey=selected?[].concat((0,_toConsumableArray2.default)(rawValues),
[selectedValue]):rawCheckedValues.filter(function(v){return v!==selectedValue}),treeConduction&&(_node$mergedFieldName=splitRawValues(selectedKey),selectedKey=_node$mergedFieldName.missingRawValues,_node$mergedFieldName=_node$mergedFieldName.existRawValues.map(function(val){return valueEntities.get(val).key}),_node$mergedFieldName=selected?(0,_conductUtil.conductCheck)(_node$mergedFieldName,!0,keyEntities).checkedKeys:(0,_conductUtil.conductCheck)(_node$mergedFieldName,{checked:!1,halfCheckedKeys:rawHalfCheckedValues},
keyEntities).checkedKeys,selectedKey=[].concat((0,_toConsumableArray2.default)(selectedKey),(0,_toConsumableArray2.default)(_node$mergedFieldName.map(function(key){return keyEntities[key].node[mergedFieldNames.value]})))),triggerChange(selectedKey,{selected,triggerValue:selectedValue},_ref2||"option")):triggerChange([selectedValue],{selected:!0,triggerValue:selectedValue},"option");selected||!mergedMultiple?null===onSelect||void 0===onSelect||onSelect(selectedValue,(0,_legacyUtil.fillLegacyProps)(entity)):
null===onDeselect||void 0===onDeselect||onDeselect(selectedValue,(0,_legacyUtil.fillLegacyProps)(entity))},[splitRawValues,valueEntities,keyEntities,mergedFieldNames,mergedMultiple,rawValues,triggerChange,treeConduction,onSelect,onDeselect,rawCheckedValues,rawHalfCheckedValues,maxCount]);filterTreeNode=React.useCallback(function(open){if(onDropdownVisibleChange){var legacyParam={};Object.defineProperty(legacyParam,"documentClickClose",{get:function(){(0,_warning.default)(!1,"Second param of `onDropdownVisibleChange` has been removed.");
return!1}});onDropdownVisibleChange(open,legacyParam)}},[onDropdownVisibleChange]);treeDataSimpleMode=(0,_useRefFunc.default)(function(newValues,info){newValues=newValues.map(function(item){return item.value});"clear"===info.type?triggerChange(newValues,{},"selection"):info.values.length&&onOptionSelect(info.values[0].value,{selected:!1,source:"selection"})});treeData=React.useMemo(function(){return{virtual,dropdownMatchSelectWidth,listHeight,listItemHeight,listItemScrollOffset,treeData:filteredTreeData,
fieldNames:mergedFieldNames,onSelect:onOptionSelect,treeExpandAction,treeTitleRender,onPopupScroll,leftMaxCount:void 0===maxCount?null:maxCount-cachedDisplayValues.length,leafCountOnly:"SHOW_CHILD"===mergedShowCheckedStrategy&&!treeCheckStrictly&&!!treeCheckable,valueEntities}},[virtual,dropdownMatchSelectWidth,listHeight,listItemHeight,listItemScrollOffset,filteredTreeData,mergedFieldNames,onOptionSelect,treeExpandAction,treeTitleRender,onPopupScroll,maxCount,cachedDisplayValues.length,mergedShowCheckedStrategy,
treeCheckStrictly,treeCheckable,valueEntities]);children=React.useMemo(function(){return{checkable:mergedCheckable,loadData,treeLoadedKeys,onTreeLoad,checkedKeys:rawCheckedValues,halfCheckedKeys:rawHalfCheckedValues,treeDefaultExpandAll,treeExpandedKeys,treeDefaultExpandedKeys,onTreeExpand,treeIcon,treeMotion,showTreeIcon,switcherIcon,treeLine,treeNodeFilterProp,keyEntities}},[mergedCheckable,loadData,treeLoadedKeys,onTreeLoad,rawCheckedValues,rawHalfCheckedValues,treeDefaultExpandAll,treeExpandedKeys,
treeDefaultExpandedKeys,onTreeExpand,treeIcon,treeMotion,showTreeIcon,switcherIcon,treeLine,treeNodeFilterProp,keyEntities]);return React.createElement(_TreeSelectContext.default.Provider,{value:treeData},React.createElement(_LegacyContext.default.Provider,{value:children},React.createElement(_rcSelect.BaseSelect,(0,_extends2.default)({ref},_props$autoClearSearc,{id,prefixCls:_props$prefixCls,mode:mergedMultiple?"multiple":void 0,displayValues:cachedDisplayValues,onDisplayValuesChange:treeDataSimpleMode,
searchValue:props,onSearch:function(searchText){setSearchValue(searchText);null===onSearch||void 0===onSearch||onSearch(searchText)},OptionList:_OptionList.default,emptyOptions:!mergedTreeData.length,onDropdownVisibleChange:filterTreeNode,dropdownMatchSelectWidth}))))});require.displayName="TreeSelect";require.TreeNode=module.default;require.SHOW_ALL=_strategyUtil.SHOW_ALL;require.SHOW_PARENT=_strategyUtil.SHOW_PARENT;require.SHOW_CHILD=_strategyUtil.SHOW_CHILD;exports.default=require}
//# sourceMappingURL=module$node_modules$rc_tree_select$lib$TreeSelect.js.map
