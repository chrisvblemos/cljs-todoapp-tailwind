shadow$provide.module$node_modules$antd$lib$transfer$hooks$useSelection=function(global,require,module,exports){function filterKeys(keys,dataKeys){const filteredKeys=keys.filter(key=>dataKeys.has(key));return keys.length===filteredKeys.length?keys:filteredKeys}global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=
function(leftDataSource,rightDataSource,selectedKeys){const [leftKeys,rightKeys]=React.useMemo(()=>[new Set(leftDataSource.map(src=>src.key)),new Set(rightDataSource.map(src=>src.key))],[leftDataSource,rightDataSource]),[mergedSelectedKeys,setMergedSelectedKeys]=(0,_rcUtil.useMergedState)(EMPTY_KEYS,{value:selectedKeys}),sourceSelectedKeys=React.useMemo(()=>filterKeys(mergedSelectedKeys,leftKeys),[mergedSelectedKeys,leftKeys]),targetSelectedKeys=React.useMemo(()=>filterKeys(mergedSelectedKeys,rightKeys),
[mergedSelectedKeys,rightKeys]);React.useEffect(()=>{setMergedSelectedKeys([].concat((0,_toConsumableArray2.default)(filterKeys(mergedSelectedKeys,leftKeys)),(0,_toConsumableArray2.default)(filterKeys(mergedSelectedKeys,rightKeys))))},[Array.from(leftKeys).join(";"),Array.from(rightKeys).join(";")]);selectedKeys=(0,_rcUtil.useEvent)(nextSrcKeys=>{setMergedSelectedKeys([].concat((0,_toConsumableArray2.default)(nextSrcKeys),(0,_toConsumableArray2.default)(targetSelectedKeys)))});const setTargetSelectedKeys=
(0,_rcUtil.useEvent)(nextTargetKeys=>{setMergedSelectedKeys([].concat((0,_toConsumableArray2.default)(sourceSelectedKeys),(0,_toConsumableArray2.default)(nextTargetKeys)))});return[sourceSelectedKeys,targetSelectedKeys,selectedKeys,setTargetSelectedKeys]};var _toConsumableArray2=module(require("module$node_modules$$babel$runtime$helpers$toConsumableArray")),React=global(require("module$node_modules$react$index")),_rcUtil=require("module$node_modules$rc_util$lib$index");const EMPTY_KEYS=[]}
//# sourceMappingURL=module$node_modules$antd$lib$transfer$hooks$useSelection.js.map
