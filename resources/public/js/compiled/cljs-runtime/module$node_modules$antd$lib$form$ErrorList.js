shadow$provide.module$node_modules$antd$lib$form$ErrorList=function(global,require,module,exports){function toErrorEntity(error,prefix,errorStatus){let index=3<arguments.length&&void 0!==arguments[3]?arguments[3]:0;return{key:"string"===typeof error?error:`${prefix}-${index}`,error,errorStatus}}"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;Object.defineProperty(exports,
"__esModule",{value:!0});exports.default=void 0;var _toConsumableArray2=module(require("module$node_modules$$babel$runtime$helpers$toConsumableArray")),React=global(require("module$node_modules$react$index")),_classnames=module(require("module$node_modules$classnames$index")),_rcMotion=global(require("module$node_modules$rc_motion$lib$index")),_motion=module(require("module$node_modules$antd$lib$_util$motion")),_useCSSVarCls=module(require("module$node_modules$antd$lib$config_provider$hooks$useCSSVarCls")),
_context=require("module$node_modules$antd$lib$form$context"),_useDebounce=module(require("module$node_modules$antd$lib$form$hooks$useDebounce")),_style=module(require("module$node_modules$antd$lib$form$style$index"));const EMPTY_LIST=[];exports.default=_ref=>{let {help,helpStatus,errors=EMPTY_LIST,warnings=EMPTY_LIST,className:rootClassName,fieldId,onVisibleChanged}=_ref;const {prefixCls}=React.useContext(_context.FormItemPrefixContext),baseClassName=`${prefixCls}-item-explain`,rootCls=(0,_useCSSVarCls.default)(prefixCls),
[wrapCSSVar,hashId,cssVarCls]=(0,_style.default)(prefixCls,rootCls);_ref=React.useMemo(()=>(0,_motion.default)(prefixCls),[prefixCls]);const debounceErrors=(0,_useDebounce.default)(errors),debounceWarnings=(0,_useDebounce.default)(warnings),fullKeyList=React.useMemo(()=>void 0!==help&&null!==help?[toErrorEntity(help,"help",helpStatus)]:[].concat((0,_toConsumableArray2.default)(debounceErrors.map((error,index)=>toErrorEntity(error,"error","error",index))),(0,_toConsumableArray2.default)(debounceWarnings.map((warning,
index)=>toErrorEntity(warning,"warning","warning",index)))),[help,helpStatus,debounceErrors,debounceWarnings]),filledKeyFullKeyList=React.useMemo(()=>{const keysCount={};fullKeyList.forEach(_ref2=>{({key:_ref2}=_ref2);keysCount[_ref2]=(keysCount[_ref2]||0)+1});return fullKeyList.map((entity,index)=>Object.assign(Object.assign({},entity),{key:1<keysCount[entity.key]?`${entity.key}-fallback-${index}`:entity.key}))},[fullKeyList]),helpProps={};fieldId&&(helpProps.id=`${fieldId}_help`);return wrapCSSVar(React.createElement(_rcMotion.default,
{motionDeadline:_ref.motionDeadline,motionName:`${prefixCls}-show-help`,visible:!!filledKeyFullKeyList.length,onVisibleChanged},holderProps=>{const {className:holderClassName,style:holderStyle}=holderProps;return React.createElement("div",Object.assign({},helpProps,{className:(0,_classnames.default)(baseClassName,holderClassName,cssVarCls,rootCls,rootClassName,hashId),style:holderStyle,role:"alert"}),React.createElement(_rcMotion.CSSMotionList,Object.assign({keys:filledKeyFullKeyList},(0,_motion.default)(prefixCls),
{motionName:`${prefixCls}-show-help-item`,component:!1}),itemProps=>{const {key,error,errorStatus,className:itemClassName,style:itemStyle}=itemProps;return React.createElement("div",{key,className:(0,_classnames.default)(itemClassName,{[`${baseClassName}-${errorStatus}`]:errorStatus}),style:itemStyle},error)}))}))}}
//# sourceMappingURL=module$node_modules$antd$lib$form$ErrorList.js.map
