{
"version":3,
"file":"module$node_modules$antd$lib$_util$responsiveObserver.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/antd/lib/_util/responsiveObserver.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$lib$_util$responsiveObserver\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useResponsiveObserver;\nexports.responsiveArray = exports.matchScreen = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _internal = require(\"../theme/internal\");\nconst responsiveArray = exports.responsiveArray = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst getResponsiveMap = token => ({\n  xs: `(max-width: ${token.screenXSMax}px)`,\n  sm: `(min-width: ${token.screenSM}px)`,\n  md: `(min-width: ${token.screenMD}px)`,\n  lg: `(min-width: ${token.screenLG}px)`,\n  xl: `(min-width: ${token.screenXL}px)`,\n  xxl: `(min-width: ${token.screenXXL}px)`\n});\n/**\n * Ensures that the breakpoints token are valid, in good order\n * For each breakpoint : screenMin <= screen <= screenMax and screenMax <= nextScreenMin\n */\nconst validateBreakpoints = token => {\n  const indexableToken = token;\n  const revBreakpoints = [].concat(responsiveArray).reverse();\n  revBreakpoints.forEach((breakpoint, i) => {\n    const breakpointUpper = breakpoint.toUpperCase();\n    const screenMin = `screen${breakpointUpper}Min`;\n    const screen = `screen${breakpointUpper}`;\n    if (!(indexableToken[screenMin] <= indexableToken[screen])) {\n      throw new Error(`${screenMin}<=${screen} fails : !(${indexableToken[screenMin]}<=${indexableToken[screen]})`);\n    }\n    if (i < revBreakpoints.length - 1) {\n      const screenMax = `screen${breakpointUpper}Max`;\n      if (!(indexableToken[screen] <= indexableToken[screenMax])) {\n        throw new Error(`${screen}<=${screenMax} fails : !(${indexableToken[screen]}<=${indexableToken[screenMax]})`);\n      }\n      const nextBreakpointUpperMin = revBreakpoints[i + 1].toUpperCase();\n      const nextScreenMin = `screen${nextBreakpointUpperMin}Min`;\n      if (!(indexableToken[screenMax] <= indexableToken[nextScreenMin])) {\n        throw new Error(`${screenMax}<=${nextScreenMin} fails : !(${indexableToken[screenMax]}<=${indexableToken[nextScreenMin]})`);\n      }\n    }\n  });\n  return token;\n};\nfunction useResponsiveObserver() {\n  const [, token] = (0, _internal.useToken)();\n  const responsiveMap = getResponsiveMap(validateBreakpoints(token));\n  // To avoid repeat create instance, we add `useMemo` here.\n  return _react.default.useMemo(() => {\n    const subscribers = new Map();\n    let subUid = -1;\n    let screens = {};\n    return {\n      matchHandlers: {},\n      dispatch(pointMap) {\n        screens = pointMap;\n        subscribers.forEach(func => func(screens));\n        return subscribers.size >= 1;\n      },\n      subscribe(func) {\n        if (!subscribers.size) {\n          this.register();\n        }\n        subUid += 1;\n        subscribers.set(subUid, func);\n        func(screens);\n        return subUid;\n      },\n      unsubscribe(paramToken) {\n        subscribers.delete(paramToken);\n        if (!subscribers.size) {\n          this.unregister();\n        }\n      },\n      unregister() {\n        Object.keys(responsiveMap).forEach(screen => {\n          const matchMediaQuery = responsiveMap[screen];\n          const handler = this.matchHandlers[matchMediaQuery];\n          handler === null || handler === void 0 ? void 0 : handler.mql.removeListener(handler === null || handler === void 0 ? void 0 : handler.listener);\n        });\n        subscribers.clear();\n      },\n      register() {\n        Object.keys(responsiveMap).forEach(screen => {\n          const matchMediaQuery = responsiveMap[screen];\n          const listener = _ref => {\n            let {\n              matches\n            } = _ref;\n            this.dispatch(Object.assign(Object.assign({}, screens), {\n              [screen]: matches\n            }));\n          };\n          const mql = window.matchMedia(matchMediaQuery);\n          mql.addListener(listener);\n          this.matchHandlers[matchMediaQuery] = {\n            mql,\n            listener\n          };\n          listener(mql);\n        });\n      },\n      responsiveMap\n    };\n  }, [token]);\n}\nconst matchScreen = (screens, screenSizes) => {\n  if (screenSizes && typeof screenSizes === 'object') {\n    for (let i = 0; i < responsiveArray.length; i++) {\n      const breakpoint = responsiveArray[i];\n      if (screens[breakpoint] && screenSizes[breakpoint] !== undefined) {\n        return screenSizes[breakpoint];\n      }\n    }\n  }\n};\nexports.matchScreen = matchScreen;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","default","Object","defineProperty","value","useResponsiveObserver","token","_internal","useToken","responsiveMap","getResponsiveMap","validateBreakpoints","_react","useMemo","subscribers","Map","subUid","screens","matchHandlers","dispatch","pointMap","forEach","func","size","subscribe","register","set","unsubscribe","paramToken","delete","unregister","keys","screen","handler","matchMediaQuery","mql","removeListener","listener","clear","_ref","matches","assign","window","matchMedia","addListener","responsiveArray","matchScreen","xs","screenXSMax","sm","screenSM","md","screenMD","lg","screenLG","xl","screenXL","xxl","screenXXL","revBreakpoints","concat","reverse","breakpoint","i","breakpointUpper","toUpperCase","screenMin","Error","length","screenMax","nextScreenMin","nextBreakpointUpperMin","screenSizes","undefined"]
}
