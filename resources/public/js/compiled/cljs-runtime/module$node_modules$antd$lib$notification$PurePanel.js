shadow$provide.module$node_modules$antd$lib$notification$PurePanel=function(global,require,module,exports){function getCloseIcon(prefixCls,closeIcon){return null===closeIcon||!1===closeIcon?null:closeIcon||React.createElement(_CloseOutlined.default,{className:`${prefixCls}-close-icon`})}"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,
"__esModule",{value:!0});exports.default=exports.TypeIcon=exports.PureContent=void 0;exports.getCloseIcon=getCloseIcon;var React=module(require("module$node_modules$react$index"));module=global(require("module$node_modules$$ant_design$icons$CheckCircleFilled"));var _CloseCircleFilled=global(require("module$node_modules$$ant_design$icons$CloseCircleFilled")),_CloseOutlined=global(require("module$node_modules$$ant_design$icons$CloseOutlined")),_ExclamationCircleFilled=global(require("module$node_modules$$ant_design$icons$ExclamationCircleFilled")),
_InfoCircleFilled=global(require("module$node_modules$$ant_design$icons$InfoCircleFilled")),_LoadingOutlined=global(require("module$node_modules$$ant_design$icons$LoadingOutlined")),_classnames=global(require("module$node_modules$classnames$index")),_rcNotification=require("module$node_modules$rc_notification$lib$index"),_configProvider=require("module$node_modules$antd$lib$config_provider$index"),_useCSSVarCls=global(require("module$node_modules$antd$lib$config_provider$hooks$useCSSVarCls")),_style=
global(require("module$node_modules$antd$lib$notification$style$index")),_purePanel=global(require("module$node_modules$antd$lib$notification$style$pure_panel"));exports.TypeIcon={info:React.createElement(_InfoCircleFilled.default,null),success:React.createElement(module.default,null),error:React.createElement(_CloseCircleFilled.default,null),warning:React.createElement(_ExclamationCircleFilled.default,null),loading:React.createElement(_LoadingOutlined.default,null)};const typeToIcon={success:module.default,
info:_InfoCircleFilled.default,error:_CloseCircleFilled.default,warning:_ExclamationCircleFilled.default},PureContent=props=>{const {prefixCls,icon,type,message,description,btn,role="alert"}=props;props=null;icon?props=React.createElement("span",{className:`${prefixCls}-icon`},icon):type&&(props=React.createElement(typeToIcon[type]||null,{className:(0,_classnames.default)(`${prefixCls}-icon`,`${prefixCls}-icon-${type}`)}));return React.createElement("div",{className:(0,_classnames.default)({[`${prefixCls}-with-icon`]:props}),
role},props,React.createElement("div",{className:`${prefixCls}-message`},message),React.createElement("div",{className:`${prefixCls}-description`},description),btn&&React.createElement("div",{className:`${prefixCls}-btn`},btn))};exports.PureContent=PureContent;exports.default=props=>{const {prefixCls:staticPrefixCls,className,icon,type,message,description,btn,closable=!0,closeIcon,className:notificationClassName}=props;var e="prefixCls className icon type message description btn closable closeIcon className".split(" "),
t={},p;for(p in props)Object.prototype.hasOwnProperty.call(props,p)&&0>e.indexOf(p)&&(t[p]=props[p]);if(null!=props&&"function"===typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(props);i<p.length;i++)0>e.indexOf(p[i])&&Object.prototype.propertyIsEnumerable.call(props,p[i])&&(t[p[i]]=props[p[i]])}({getPrefixCls:props}=React.useContext(_configProvider.ConfigContext));props=staticPrefixCls||props("notification");e=`${props}-notice`;p=(0,_useCSSVarCls.default)(props);const [wrapCSSVar,
hashId,cssVarCls]=(0,_style.default)(props,p);return wrapCSSVar(React.createElement("div",{className:(0,_classnames.default)(`${e}-pure-panel`,hashId,className,cssVarCls,p)},React.createElement(_purePanel.default,{prefixCls:props}),React.createElement(_rcNotification.Notice,Object.assign({},t,{prefixCls:props,eventKey:"pure",duration:null,closable,className:(0,_classnames.default)({notificationClassName}),closeIcon:getCloseIcon(props,closeIcon),content:React.createElement(PureContent,{prefixCls:e,
icon,type,message,description,btn})}))))}}
//# sourceMappingURL=module$node_modules$antd$lib$notification$PurePanel.js.map
