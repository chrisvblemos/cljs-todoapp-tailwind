{
"version":3,
"file":"module$node_modules$antd$lib$descriptions$hooks$useRow.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/antd/lib/descriptions/hooks/useRow.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$lib$descriptions$hooks$useRow\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = require(\"react\");\nvar _warning = require(\"../../_util/warning\");\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n// Calculate the sum of span in a row\nfunction getCalcRows(rowItems, mergedColumn) {\n  let rows = [];\n  let tmpRow = [];\n  let exceed = false;\n  let count = 0;\n  rowItems.filter(n => n).forEach(rowItem => {\n    const {\n        filled\n      } = rowItem,\n      restItem = __rest(rowItem, [\"filled\"]);\n    if (filled) {\n      tmpRow.push(restItem);\n      rows.push(tmpRow);\n      // reset\n      tmpRow = [];\n      count = 0;\n      return;\n    }\n    const restSpan = mergedColumn - count;\n    count += rowItem.span || 1;\n    if (count >= mergedColumn) {\n      if (count > mergedColumn) {\n        exceed = true;\n        tmpRow.push(Object.assign(Object.assign({}, restItem), {\n          span: restSpan\n        }));\n      } else {\n        tmpRow.push(restItem);\n      }\n      rows.push(tmpRow);\n      // reset\n      tmpRow = [];\n      count = 0;\n    } else {\n      tmpRow.push(restItem);\n    }\n  });\n  if (tmpRow.length > 0) {\n    rows.push(tmpRow);\n  }\n  rows = rows.map(rows => {\n    const count = rows.reduce((acc, item) => acc + (item.span || 1), 0);\n    if (count < mergedColumn) {\n      // If the span of the last element in the current row is less than the column, then add its span to the remaining columns\n      const last = rows[rows.length - 1];\n      last.span = mergedColumn - (count - (last.span || 1));\n      return rows;\n    }\n    return rows;\n  });\n  return [rows, exceed];\n}\nconst useRow = (mergedColumn, items) => {\n  const [rows, exceed] = (0, _react.useMemo)(() => getCalcRows(items, mergedColumn), [items, mergedColumn]);\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = (0, _warning.devUseWarning)('Descriptions');\n    process.env.NODE_ENV !== \"production\" ? warning(!exceed, 'usage', 'Sum of column `span` in a line not match `column` of Descriptions.') : void 0;\n  }\n  return rows;\n};\nvar _default = exports.default = useRow;\n};"],
"names":["shadow$provide","global","require","module","exports","getCalcRows","rowItems","mergedColumn","rows","tmpRow","exceed","count","filter","n","forEach","rowItem","filled","t","p","Object","prototype","hasOwnProperty","call","e","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","push","restSpan","span","assign","map","reduce","acc","item","last","defineProperty","value","default","_react","_warning","items","useRow","useMemo","warning","devUseWarning"]
}
