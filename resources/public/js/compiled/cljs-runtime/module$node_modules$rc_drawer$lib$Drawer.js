shadow$provide.module$node_modules$rc_drawer$lib$Drawer=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _objectSpread2=module(require("module$node_modules$$babel$runtime$helpers$objectSpread2")),_slicedToArray2=module(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),
_portal=module(require("module$node_modules$$rc_component$portal$lib$index")),_useLayoutEffect=module(require("module$node_modules$rc_util$lib$hooks$useLayoutEffect")),React=global(require("module$node_modules$react$index")),_context=require("module$node_modules$rc_drawer$lib$context"),_DrawerPopup=module(require("module$node_modules$rc_drawer$lib$DrawerPopup")),_util=require("module$node_modules$rc_drawer$lib$util");require=function(props){var _props$open=props.open,open=void 0===_props$open?!1:
_props$open;_props$open=props.prefixCls;_props$open=void 0===_props$open?"rc-drawer":_props$open;var _props$placement=props.placement;_props$placement=void 0===_props$placement?"right":_props$placement;var _props$autoFocus=props.autoFocus;_props$autoFocus=void 0===_props$autoFocus?!0:_props$autoFocus;var _props$keyboard=props.keyboard;_props$keyboard=void 0===_props$keyboard?!0:_props$keyboard;var _props$width=props.width;_props$width=void 0===_props$width?378:_props$width;var _props$mask=props.mask;
_props$mask=void 0===_props$mask?!0:_props$mask;var _props$maskClosable=props.maskClosable,maskClosable=void 0===_props$maskClosable?!0:_props$maskClosable;_props$maskClosable=props.getContainer;var forceRender=props.forceRender,afterOpenChange=props.afterOpenChange,destroyOnClose=props.destroyOnClose,onMouseEnter=props.onMouseEnter,onMouseOver=props.onMouseOver,onMouseLeave=props.onMouseLeave,onClick=props.onClick,onKeyDown=props.onKeyDown,onKeyUp=props.onKeyUp,panelRef=props.panelRef,_React$useState=
React.useState(!1),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2);_React$useState=_React$useState2[0];var setAnimatedVisible=_React$useState2[1];(0,_util.warnCheck)(props);_React$useState2=React.useState(!1);_React$useState2=(0,_slicedToArray2.default)(_React$useState2,2);var mounted=_React$useState2[0],setMounted=_React$useState2[1];(0,_useLayoutEffect.default)(function(){setMounted(!0)},[]);var mergedOpen=mounted?open:!1,popupRef=React.useRef(),lastActiveRef=React.useRef();(0,_useLayoutEffect.default)(function(){mergedOpen&&
(lastActiveRef.current=document.activeElement)},[mergedOpen]);open=React.useMemo(function(){return{panel:panelRef}},[panelRef]);if(!forceRender&&!_React$useState&&!mergedOpen&&destroyOnClose)return null;destroyOnClose={onMouseEnter,onMouseOver,onMouseLeave,onClick,onKeyDown,onKeyUp};props=(0,_objectSpread2.default)((0,_objectSpread2.default)({},props),{},{open:mergedOpen,prefixCls:_props$open,placement:_props$placement,autoFocus:_props$autoFocus,keyboard:_props$keyboard,width:_props$width,mask:_props$mask,
maskClosable,inline:!1===_props$maskClosable,afterOpenChange:function(nextVisible){var _popupRef$current;setAnimatedVisible(nextVisible);null===afterOpenChange||void 0===afterOpenChange||afterOpenChange(nextVisible);if(!nextVisible&&lastActiveRef.current&&(null===(_popupRef$current=popupRef.current)||void 0===_popupRef$current||!_popupRef$current.contains(lastActiveRef.current))){var _lastActiveRef$curren;null===(_lastActiveRef$curren=lastActiveRef.current)||void 0===_lastActiveRef$curren||_lastActiveRef$curren.focus({preventScroll:!0})}},
ref:popupRef},destroyOnClose);return React.createElement(_context.RefContext.Provider,{value:open},React.createElement(_portal.default,{open:mergedOpen||forceRender||_React$useState,autoDestroy:!1,getContainer:_props$maskClosable,autoLock:_props$mask&&(mergedOpen||_React$useState)},React.createElement(_DrawerPopup.default,props)))};require.displayName="Drawer";exports.default=require}
//# sourceMappingURL=module$node_modules$rc_drawer$lib$Drawer.js.map
