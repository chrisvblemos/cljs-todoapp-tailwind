shadow$provide.module$node_modules$antd$lib$splitter$hooks$useResizable=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=function(items,pxSizes){return React.useMemo(()=>{const resizeInfos=[];for(let i=0;i<items.length-1;i+=1){const nextItem=items[i+1],prevSize=pxSizes[i],nextSize=pxSizes[i+1],{resizable:prevResizable=!0,min:prevMin,collapsible:prevCollapsible}=
items[i],{resizable:nextResizable=!0,min:nextMin,collapsible:nextCollapsible}=nextItem;resizeInfos[i]={resizable:prevResizable&&nextResizable&&(0!==prevSize||!prevMin)&&(0!==nextSize||!nextMin),startCollapsible:!!(prevCollapsible.end&&0<prevSize||nextCollapsible.start&&0===nextSize&&0<prevSize),endCollapsible:!!(nextCollapsible.start&&0<nextSize||prevCollapsible.end&&0===prevSize&&0<nextSize)}}return resizeInfos},[pxSizes,items])};var React=global(require("module$node_modules$react$index"))}
//# sourceMappingURL=module$node_modules$antd$lib$splitter$hooks$useResizable.js.map
