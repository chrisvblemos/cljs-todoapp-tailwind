shadow$provide.module$node_modules$rc_cascader$lib$hooks$useDisplayValues=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _toConsumableArray2=module(require("module$node_modules$$babel$runtime$helpers$toConsumableArray")),_typeof2=module(require("module$node_modules$$babel$runtime$helpers$typeof")),
_treeUtil=require("module$node_modules$rc_cascader$lib$utils$treeUtil"),React=global(require("module$node_modules$react$index")),_commonUtil=require("module$node_modules$rc_cascader$lib$utils$commonUtil");exports.default=function(rawValues,options,fieldNames,multiple,displayRender){return React.useMemo(function(){var mergedDisplayRender=displayRender||function(labels){labels=multiple?labels.slice(-1):labels;return labels.every(function(label){return["string","number"].includes((0,_typeof2.default)(label))})?
labels.join(" / "):labels.reduce(function(list,label,index){label=React.isValidElement(label)?React.cloneElement(label,{key:index}):label;return 0===index?[label]:[].concat((0,_toConsumableArray2.default)(list),[" / ",label])},[])};return rawValues.map(function(valueCells){var _valueOptions,valueOptions=(0,_treeUtil.toPathOptions)(valueCells,options,fieldNames),label=mergedDisplayRender(valueOptions.map(function(_ref){var _option$fieldNames$la,option=_ref.option;_ref=_ref.value;return null!==(_option$fieldNames$la=
null===option||void 0===option?void 0:option[fieldNames.label])&&void 0!==_option$fieldNames$la?_option$fieldNames$la:_ref}),valueOptions.map(function(_ref2){return _ref2.option})),value=(0,_commonUtil.toPathKey)(valueCells);return{label,value,key:value,valueCells,disabled:null===(_valueOptions=valueOptions[valueOptions.length-1])||void 0===_valueOptions||null===(_valueOptions=_valueOptions.option)||void 0===_valueOptions?void 0:_valueOptions.disabled}})},[rawValues,options,fieldNames,displayRender,
multiple])}}
//# sourceMappingURL=module$node_modules$rc_cascader$lib$hooks$useDisplayValues.js.map
