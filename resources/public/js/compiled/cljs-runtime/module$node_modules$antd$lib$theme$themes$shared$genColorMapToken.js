shadow$provide.module$node_modules$antd$lib$theme$themes$shared$genColorMapToken=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=function(seed,_ref){let {generateColorPalettes,generateNeutralColorPalettes}=_ref;const {colorSuccess:colorSuccessBase,colorWarning:colorWarningBase,colorError:colorErrorBase,colorInfo:colorInfoBase,colorPrimary:colorPrimaryBase,colorBgBase,colorTextBase}=seed;_ref=generateColorPalettes(colorPrimaryBase);const successColors=
generateColorPalettes(colorSuccessBase),warningColors=generateColorPalettes(colorWarningBase),errorColors=generateColorPalettes(colorErrorBase),infoColors=generateColorPalettes(colorInfoBase),neutralColors=generateNeutralColorPalettes(colorBgBase,colorTextBase);seed=generateColorPalettes(seed.colorLink||seed.colorInfo);const colorErrorBgFilledHover=(new _fastColor.FastColor(errorColors[1])).mix(new _fastColor.FastColor(errorColors[3]),50).toHexString();return Object.assign(Object.assign({},neutralColors),
{colorPrimaryBg:_ref[1],colorPrimaryBgHover:_ref[2],colorPrimaryBorder:_ref[3],colorPrimaryBorderHover:_ref[4],colorPrimaryHover:_ref[5],colorPrimary:_ref[6],colorPrimaryActive:_ref[7],colorPrimaryTextHover:_ref[8],colorPrimaryText:_ref[9],colorPrimaryTextActive:_ref[10],colorSuccessBg:successColors[1],colorSuccessBgHover:successColors[2],colorSuccessBorder:successColors[3],colorSuccessBorderHover:successColors[4],colorSuccessHover:successColors[4],colorSuccess:successColors[6],colorSuccessActive:successColors[7],
colorSuccessTextHover:successColors[8],colorSuccessText:successColors[9],colorSuccessTextActive:successColors[10],colorErrorBg:errorColors[1],colorErrorBgHover:errorColors[2],colorErrorBgFilledHover,colorErrorBgActive:errorColors[3],colorErrorBorder:errorColors[3],colorErrorBorderHover:errorColors[4],colorErrorHover:errorColors[5],colorError:errorColors[6],colorErrorActive:errorColors[7],colorErrorTextHover:errorColors[8],colorErrorText:errorColors[9],colorErrorTextActive:errorColors[10],colorWarningBg:warningColors[1],
colorWarningBgHover:warningColors[2],colorWarningBorder:warningColors[3],colorWarningBorderHover:warningColors[4],colorWarningHover:warningColors[4],colorWarning:warningColors[6],colorWarningActive:warningColors[7],colorWarningTextHover:warningColors[8],colorWarningText:warningColors[9],colorWarningTextActive:warningColors[10],colorInfoBg:infoColors[1],colorInfoBgHover:infoColors[2],colorInfoBorder:infoColors[3],colorInfoBorderHover:infoColors[4],colorInfoHover:infoColors[4],colorInfo:infoColors[6],
colorInfoActive:infoColors[7],colorInfoTextHover:infoColors[8],colorInfoText:infoColors[9],colorInfoTextActive:infoColors[10],colorLinkHover:seed[4],colorLink:seed[6],colorLinkActive:seed[7],colorBgMask:(new _fastColor.FastColor("#000")).setA(.45).toRgbString(),colorWhite:"#fff"})};var _fastColor=require("module$node_modules$$ant_design$fast_color$lib$index")}
//# sourceMappingURL=module$node_modules$antd$lib$theme$themes$shared$genColorMapToken.js.map
