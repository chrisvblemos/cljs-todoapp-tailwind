shadow$provide.module$node_modules$antd$lib$upload$UploadList$index=function(global,require,module,exports){"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _toConsumableArray2=module(require("module$node_modules$$babel$runtime$helpers$toConsumableArray")),React=global(require("module$node_modules$react$index")),
_FileTwoTone=module(require("module$node_modules$$ant_design$icons$FileTwoTone")),_LoadingOutlined=module(require("module$node_modules$$ant_design$icons$LoadingOutlined")),_PaperClipOutlined=module(require("module$node_modules$$ant_design$icons$PaperClipOutlined")),_PictureTwoTone=module(require("module$node_modules$$ant_design$icons$PictureTwoTone")),_classnames=module(require("module$node_modules$classnames$index")),_rcMotion=global(require("module$node_modules$rc_motion$lib$index")),_omit=module(require("module$node_modules$rc_util$lib$omit")),
_useForceUpdate=module(require("module$node_modules$antd$lib$_util$hooks$useForceUpdate")),_motion=module(require("module$node_modules$antd$lib$_util$motion")),_reactNode=require("module$node_modules$antd$lib$_util$reactNode"),_button=module(require("module$node_modules$antd$lib$button$index")),_configProvider=require("module$node_modules$antd$lib$config_provider$index"),_utils=require("module$node_modules$antd$lib$upload$utils"),_ListItem=module(require("module$node_modules$antd$lib$upload$UploadList$ListItem"));
require=React.forwardRef((props,ref)=>{const {listType="text",previewFile=_utils.previewImage,onPreview,onDownload,onRemove,locale,iconRender,isImageUrl:isImgUrl=_utils.isImageUrl,prefixCls:customizePrefixCls,items=[],showPreviewIcon=!0,showRemoveIcon=!0,showDownloadIcon=!1,removeIcon,previewIcon,downloadIcon,extra,progress={size:[-1,2],showInfo:!1},appendAction,appendActionVisible=!0,itemRender,disabled}=props,forceUpdate=(0,_useForceUpdate.default)(),[motionAppear,setMotionAppear]=React.useState(!1);
props=["picture-card","picture-circle"].includes(listType);React.useEffect(()=>{listType.startsWith("picture")&&(items||[]).forEach(file=>{(file.originFileObj instanceof File||file.originFileObj instanceof Blob)&&void 0===file.thumbUrl&&(file.thumbUrl="",null===previewFile||void 0===previewFile?void 0:previewFile(file.originFileObj).then(previewDataUrl=>{file.thumbUrl=previewDataUrl||"";forceUpdate()}))})},[listType,items,previewFile]);React.useEffect(()=>{setMotionAppear(!0)},[]);const onInternalPreview=
(file,e)=>{if(onPreview)return null===e||void 0===e?void 0:e.preventDefault(),onPreview(file)},onInternalDownload=file=>{"function"===typeof onDownload?onDownload(file):file.url&&window.open(file.url)},onInternalClose=file=>{null===onRemove||void 0===onRemove?void 0:onRemove(file)},internalIconRender=file=>{if(iconRender)return iconRender(file,listType);const isLoading="uploading"===file.status;if(listType.startsWith("picture")){const loadingIcon="picture"===listType?React.createElement(_LoadingOutlined.default,
null):locale.uploading;file=(null===isImgUrl||void 0===isImgUrl?0:isImgUrl(file))?React.createElement(_PictureTwoTone.default,null):React.createElement(_FileTwoTone.default,null);return isLoading?loadingIcon:file}return isLoading?React.createElement(_LoadingOutlined.default,null):React.createElement(_PaperClipOutlined.default,null)},actionIconRender=(customIcon,callback,prefixCls,title,acceptUploadDisabled)=>{prefixCls={type:"text",size:"small",title,onClick:e=>{var _a,_b;callback();React.isValidElement(customIcon)&&
(null===(_b=(_a=customIcon.props).onClick)||void 0===_b?void 0:_b.call(_a,e))},className:`${prefixCls}-list-item-action`};acceptUploadDisabled&&(prefixCls.disabled=disabled);return React.isValidElement(customIcon)?React.createElement(_button.default,Object.assign({},prefixCls,{icon:(0,_reactNode.cloneElement)(customIcon,Object.assign(Object.assign({},customIcon.props),{onClick:()=>{}}))})):React.createElement(_button.default,Object.assign({},prefixCls),React.createElement("span",null,customIcon))};
React.useImperativeHandle(ref,()=>({handlePreview:onInternalPreview,handleDownload:onInternalDownload}));({getPrefixCls:ref}=React.useContext(_configProvider.ConfigContext));const prefixCls=ref("upload",customizePrefixCls),rootPrefixCls=ref();ref=(0,_classnames.default)(`${prefixCls}-list`,`${prefixCls}-list-${listType}`);const listItemMotion=React.useMemo(()=>(0,_omit.default)((0,_motion.default)(rootPrefixCls),["onAppearEnd","onEnterEnd","onLeaveEnd"]),[rootPrefixCls]);props=Object.assign(Object.assign({},
props?{}:listItemMotion),{motionDeadline:2E3,motionName:`${prefixCls}-${props?"animate-inline":"animate"}`,keys:(0,_toConsumableArray2.default)(items.map(file=>({key:file.uid,file}))),motionAppear});return React.createElement("div",{className:ref},React.createElement(_rcMotion.CSSMotionList,Object.assign({},props,{component:!1}),_ref=>{let {key,file,className:motionClassName,style:motionStyle}=_ref;return React.createElement(_ListItem.default,{key,locale,prefixCls,className:motionClassName,style:motionStyle,
file,items,progress,listType,isImgUrl,showPreviewIcon,showRemoveIcon,showDownloadIcon,removeIcon,previewIcon,downloadIcon,extra,iconRender:internalIconRender,actionIconRender,itemRender,onPreview:onInternalPreview,onDownload:onInternalDownload,onClose:onInternalClose})}),appendAction&&React.createElement(_rcMotion.default,Object.assign({},props,{visible:appendActionVisible,forceRender:!0}),_ref2=>{let {className:motionClassName,style:motionStyle}=_ref2;return(0,_reactNode.cloneElement)(appendAction,
oriProps=>({className:(0,_classnames.default)(oriProps.className,motionClassName),style:Object.assign(Object.assign(Object.assign({},motionStyle),{pointerEvents:motionClassName?"none":void 0}),oriProps.style)}))}))});require.displayName="UploadList";exports.default=require}
//# sourceMappingURL=module$node_modules$antd$lib$upload$UploadList$index.js.map
