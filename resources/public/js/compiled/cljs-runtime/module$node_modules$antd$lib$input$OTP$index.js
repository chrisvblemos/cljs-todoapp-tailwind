shadow$provide.module$node_modules$antd$lib$input$OTP$index=function(global,require,module,exports){function strToArr(str){return(str||"").split("")}"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _toConsumableArray2=module(require("module$node_modules$$babel$runtime$helpers$toConsumableArray")),
React=global(require("module$node_modules$react$index")),_classnames=module(require("module$node_modules$classnames$index")),_useEvent=module(require("module$node_modules$rc_util$lib$hooks$useEvent")),_pickAttrs=module(require("module$node_modules$rc_util$lib$pickAttrs")),_statusUtils=require("module$node_modules$antd$lib$_util$statusUtils"),_warning=require("module$node_modules$antd$lib$_util$warning"),_configProvider=require("module$node_modules$antd$lib$config_provider$index"),_useCSSVarCls=module(require("module$node_modules$antd$lib$config_provider$hooks$useCSSVarCls")),
_useSize=module(require("module$node_modules$antd$lib$config_provider$hooks$useSize")),_context=require("module$node_modules$antd$lib$form$context"),_otp=module(require("module$node_modules$antd$lib$input$style$otp")),_OTPInput=module(require("module$node_modules$antd$lib$input$OTP$OTPInput")),__rest=function(s,e){var t={},p;for(p in s)Object.prototype.hasOwnProperty.call(s,p)&&0>e.indexOf(p)&&(t[p]=s[p]);if(null!=s&&"function"===typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<
p.length;i++)0>e.indexOf(p[i])&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};require=React.forwardRef((props,ref)=>{const {prefixCls:customizePrefixCls,length=6,size:customSize,defaultValue,value,onChange,formatter,variant,disabled,status:customStatus,autoFocus,mask,type,onInput,inputMode}=props;props=__rest(props,"prefixCls length size defaultValue value onChange formatter variant disabled status autoFocus mask type onInput inputMode".split(" "));(0,_warning.devUseWarning)("Input.OTP")(!("string"===
typeof mask&&1<mask.length),"usage","`mask` prop should be a single character.");const {getPrefixCls,direction}=React.useContext(_configProvider.ConfigContext),prefixCls=getPrefixCls("otp",customizePrefixCls);props=(0,_pickAttrs.default)(props,{aria:!0,data:!0,attr:!0});var rootCls=(0,_useCSSVarCls.default)(prefixCls);const [wrapCSSVar,hashId,cssVarCls]=(0,_otp.default)(prefixCls,rootCls),mergedSize=(0,_useSize.default)(ctx=>null!==customSize&&void 0!==customSize?customSize:ctx),formContext=React.useContext(_context.FormItemInputContext),
mergedStatus=(0,_statusUtils.getMergedStatus)(formContext.status,customStatus);rootCls=React.useMemo(()=>Object.assign(Object.assign({},formContext),{status:mergedStatus,hasFeedback:!1,feedbackIcon:null}),[formContext,mergedStatus]);const containerRef=React.useRef(null),refs=React.useRef({});React.useImperativeHandle(ref,()=>({focus:()=>{var _a;null===(_a=refs.current[0])||void 0===_a?void 0:_a.focus()},blur:()=>{var _a;for(let i=0;i<length;i+=1)null===(_a=refs.current[i])||void 0===_a?void 0:_a.blur()},
nativeElement:containerRef.current}));const internalFormatter=txt=>formatter?formatter(txt):txt,[valueCells,setValueCells]=React.useState(strToArr(internalFormatter(defaultValue||"")));React.useEffect(()=>{void 0!==value&&setValueCells(strToArr(value))},[value]);const triggerValueCellsChange=(0,_useEvent.default)(nextValueCells=>{setValueCells(nextValueCells);onInput&&onInput(nextValueCells);onChange&&nextValueCells.length===length&&nextValueCells.every(c=>c)&&nextValueCells.some((c,index)=>valueCells[index]!==
c)&&onChange(nextValueCells.join(""))}),patchValue=(0,_useEvent.default)((index,txt)=>{let nextCells=(0,_toConsumableArray2.default)(valueCells);for(let i=0;i<index;i+=1)nextCells[i]||(nextCells[i]="");1>=txt.length?nextCells[index]=txt:nextCells=nextCells.slice(0,index).concat(strToArr(txt));nextCells=nextCells.slice(0,length);for(index=nextCells.length-1;0<=index&&!nextCells[index];--index)nextCells.pop();index=internalFormatter(nextCells.map(c=>c||" ").join(""));return nextCells=strToArr(index).map((c,
i)=>" "!==c||nextCells[i]?c:nextCells[i])}),onInputChange=(index,txt)=>{var _a;const nextCells=patchValue(index,txt);txt=Math.min(index+txt.length,length-1);txt!==index&&void 0!==nextCells[index]&&(null===(_a=refs.current[txt])||void 0===_a?void 0:_a.focus());triggerValueCellsChange(nextCells)},onInputActiveChange=nextIndex=>{var _a;null===(_a=refs.current[nextIndex])||void 0===_a?void 0:_a.focus()},inputSharedProps={variant,disabled,status:mergedStatus,mask,type,inputMode};return wrapCSSVar(React.createElement("div",
Object.assign({},props,{ref:containerRef,className:(0,_classnames.default)(prefixCls,{[`${prefixCls}-sm`]:"small"===mergedSize,[`${prefixCls}-lg`]:"large"===mergedSize,[`${prefixCls}-rtl`]:"rtl"===direction},cssVarCls,hashId)}),React.createElement(_context.FormItemInputContext.Provider,{value:rootCls},Array.from({length}).map((_,index)=>React.createElement(_OTPInput.default,Object.assign({ref:inputEle=>{refs.current[index]=inputEle},key:`otp-${index}`,index,size:mergedSize,htmlSize:1,className:`${prefixCls}-input`,
onChange:onInputChange,value:valueCells[index]||"",onActiveChange:onInputActiveChange,autoFocus:0===index&&autoFocus},inputSharedProps))))))});exports.default=require}
//# sourceMappingURL=module$node_modules$antd$lib$input$OTP$index.js.map
