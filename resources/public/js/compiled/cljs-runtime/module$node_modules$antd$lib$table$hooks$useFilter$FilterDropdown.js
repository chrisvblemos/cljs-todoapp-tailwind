shadow$provide.module$node_modules$antd$lib$table$hooks$useFilter$FilterDropdown=function(global,require,module,exports){function flattenKeys(filters){let keys=[];(filters||[]).forEach(_ref=>{let {value,children}=_ref;keys.push(value);children&&(keys=[].concat((0,_toConsumableArray2.default)(keys),(0,_toConsumableArray2.default)(flattenKeys(children))))});return keys}function hasSubMenu(filters){return filters.some(_ref2=>{({children:_ref2}=_ref2);return _ref2})}function searchValueMatched(searchValue,
text){return"string"===typeof text||"number"===typeof text?null===text||void 0===text?void 0:text.toString().toLowerCase().includes(searchValue.trim().toLowerCase()):!1}function renderFilterItems(_ref3){let {filters,prefixCls,filteredKeys,filterMultiple,searchValue,filterSearch}=_ref3;return filters.map((filter,index)=>{const key=String(filter.value);if(filter.children)return{key:key||index,label:filter.text,popupClassName:`${prefixCls}-dropdown-submenu`,children:renderFilterItems({filters:filter.children,
prefixCls,filteredKeys,filterMultiple,searchValue,filterSearch})};index={key:void 0!==filter.value?key:index,label:React.createElement(React.Fragment,null,React.createElement(filterMultiple?_checkbox.default:_radio.default,{checked:filteredKeys.includes(key)}),React.createElement("span",null,filter.text))};return searchValue.trim()?"function"===typeof filterSearch?filterSearch(searchValue,filter)?index:null:searchValueMatched(searchValue,filter.text)?index:null:index})}"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;
module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;exports.flattenKeys=flattenKeys;var _toConsumableArray2=module(require("module$node_modules$$babel$runtime$helpers$toConsumableArray")),React=global(require("module$node_modules$react$index")),_FilterFilled=module(require("module$node_modules$$ant_design$icons$FilterFilled")),_classnames=module(require("module$node_modules$classnames$index")),
_isEqual=module(require("module$node_modules$rc_util$lib$isEqual")),_extendsObject=module(require("module$node_modules$antd$lib$_util$extendsObject")),_useSyncState=module(require("module$node_modules$antd$lib$_util$hooks$useSyncState")),_warning=require("module$node_modules$antd$lib$_util$warning"),_button=module(require("module$node_modules$antd$lib$button$index")),_checkbox=module(require("module$node_modules$antd$lib$checkbox$index")),_context=require("module$node_modules$antd$lib$config_provider$context"),
_dropdown=module(require("module$node_modules$antd$lib$dropdown$index")),_empty=module(require("module$node_modules$antd$lib$empty$index")),_menu=module(require("module$node_modules$antd$lib$menu$index")),_OverrideContext=require("module$node_modules$antd$lib$menu$OverrideContext"),_radio=module(require("module$node_modules$antd$lib$radio$index")),_tree=module(require("module$node_modules$antd$lib$tree$index")),_FilterSearch=module(require("module$node_modules$antd$lib$table$hooks$useFilter$FilterSearch")),
_FilterWrapper=module(require("module$node_modules$antd$lib$table$hooks$useFilter$FilterWrapper"));exports.default=props=>{var _a,_b,_c,_d;const {tablePrefixCls,prefixCls,column,dropdownPrefixCls,columnKey,filterOnClose,filterMultiple,filterMode="menu",filterSearch=!1,filterState,triggerFilter,locale,children,getPopupContainer,rootClassName}=props,{filterResetToDefaultFilteredValue,defaultFilteredValue,filterDropdownProps={},filterDropdownOpen,filterDropdownVisible,onFilterDropdownVisibleChange,onFilterDropdownOpenChange}=
column,[visible,setVisible]=React.useState(!1),filtered=!(!filterState||!((null===(_a=filterState.filteredKeys)||void 0===_a?0:_a.length)||filterState.forceFiltered)),triggerVisible=newVisible=>{var _a;setVisible(newVisible);null===(_a=filterDropdownProps.onOpenChange)||void 0===_a?void 0:_a.call(filterDropdownProps,newVisible);null===onFilterDropdownOpenChange||void 0===onFilterDropdownOpenChange?void 0:onFilterDropdownOpenChange(newVisible);null===onFilterDropdownVisibleChange||void 0===onFilterDropdownVisibleChange?
void 0:onFilterDropdownVisibleChange(newVisible)},warning=(0,_warning.devUseWarning)("Table");[["filterDropdownOpen","filterDropdownProps.open"],["filterDropdownVisible","filterDropdownProps.open"],["onFilterDropdownOpenChange","filterDropdownProps.onOpenChange"],["onFilterDropdownVisibleChange","filterDropdownProps.onOpenChange"]].forEach(_ref4=>{let [deprecatedName,newName]=_ref4;warning.deprecated(!(deprecatedName in column),deprecatedName,newName)});props=null!==(_d=null!==(_c=null!==(_b=filterDropdownProps.open)&&
void 0!==_b?_b:filterDropdownOpen)&&void 0!==_c?_c:filterDropdownVisible)&&void 0!==_d?_d:visible;const propFilteredKeys=null===filterState||void 0===filterState?void 0:filterState.filteredKeys,[getFilteredKeysSync,setFilteredKeysSync]=(0,_useSyncState.default)(propFilteredKeys||[]),onSelectKeys=_ref5=>{({selectedKeys:_ref5}=_ref5);setFilteredKeysSync(_ref5)},onCheck=(keys,_ref6)=>{let {node,checked}=_ref6;filterMultiple?onSelectKeys({selectedKeys:keys}):onSelectKeys({selectedKeys:checked&&node.key?
[node.key]:[]})};React.useEffect(()=>{visible&&onSelectKeys({selectedKeys:propFilteredKeys||[]})},[propFilteredKeys]);const [openKeys,setOpenKeys]=React.useState([]),onOpenChange=keys=>{setOpenKeys(keys)},[searchValue,setSearchValue]=React.useState(""),onSearch=e=>{({value:e}=e.target);setSearchValue(e)};React.useEffect(()=>{visible||setSearchValue("")},[visible]);const internalTriggerFilter=keys=>{keys=(null===keys||void 0===keys?0:keys.length)?keys:null;if(!(null!==keys||filterState&&filterState.filteredKeys)||
(0,_isEqual.default)(keys,null===filterState||void 0===filterState?void 0:filterState.filteredKeys,!0))return null;triggerFilter({column,key:columnKey,filteredKeys:keys})},onConfirm=()=>{triggerVisible(!1);internalTriggerFilter(getFilteredKeysSync())},onReset=function(){let {confirm,closeDropdown}=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{confirm:!1,closeDropdown:!1};confirm&&internalTriggerFilter([]);closeDropdown&&triggerVisible(!1);setSearchValue("");filterResetToDefaultFilteredValue?
setFilteredKeysSync((defaultFilteredValue||[]).map(key=>String(key))):setFilteredKeysSync([])};_b=function(){let {closeDropdown}=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{closeDropdown:!0};closeDropdown&&triggerVisible(!1);internalTriggerFilter(getFilteredKeysSync())};const dropdownMenuClass=(0,_classnames.default)({[`${dropdownPrefixCls}-menu-without-submenu`]:!hasSubMenu(column.filters||[])}),onCheckAll=e=>{e.target.checked?(e=flattenKeys(null===column||void 0===column?void 0:column.filters).map(key=>
String(key)),setFilteredKeysSync(e)):setFilteredKeysSync([])},getTreeData=_ref7=>{({filters:_ref7}=_ref7);return(_ref7||[]).map((filter,index)=>{const key=String(filter.value);index={title:filter.text,key:void 0!==filter.value?key:String(index)};filter.children&&(index.children=getTreeData({filters:filter.children}));return index})},getFilterData=node=>{var _a;return Object.assign(Object.assign({},node),{text:node.title,value:node.key,children:(null===(_a=node.children)||void 0===_a?void 0:_a.map(item=>
getFilterData(item)))||[]})};let dropdownContent;const {direction,renderEmpty}=React.useContext(_context.ConfigContext);if("function"===typeof column.filterDropdown)dropdownContent=column.filterDropdown({prefixCls:`${dropdownPrefixCls}-custom`,setSelectedKeys:selectedKeys=>onSelectKeys({selectedKeys}),selectedKeys:getFilteredKeysSync(),confirm:_b,clearFilters:onReset,filters:column.filters,visible:props,close:()=>{triggerVisible(!1)}});else if(column.filterDropdown)dropdownContent=column.filterDropdown;
else{const selectedKeys=getFilteredKeysSync()||[];dropdownContent=React.createElement(React.Fragment,null,(()=>{var _a;const empty=null!==(_a=null===renderEmpty||void 0===renderEmpty?void 0:renderEmpty("Table.filter"))&&void 0!==_a?_a:React.createElement(_empty.default,{image:_empty.default.PRESENTED_IMAGE_SIMPLE,description:locale.filterEmptyText,styles:{image:{height:24}},style:{margin:0,padding:"16px 0"}});if(0===(column.filters||[]).length)return empty;if("tree"===filterMode)return React.createElement(React.Fragment,
null,React.createElement(_FilterSearch.default,{filterSearch,value:searchValue,onChange:onSearch,tablePrefixCls,locale}),React.createElement("div",{className:`${tablePrefixCls}-filter-dropdown-tree`},filterMultiple?React.createElement(_checkbox.default,{checked:selectedKeys.length===flattenKeys(column.filters).length,indeterminate:0<selectedKeys.length&&selectedKeys.length<flattenKeys(column.filters).length,className:`${tablePrefixCls}-filter-dropdown-checkall`,onChange:onCheckAll},locale.filterCheckall):
null,React.createElement(_tree.default,{checkable:!0,selectable:!1,blockNode:!0,multiple:filterMultiple,checkStrictly:!filterMultiple,className:`${dropdownPrefixCls}-menu`,onCheck,checkedKeys:selectedKeys,selectedKeys,showIcon:!1,treeData:getTreeData({filters:column.filters}),autoExpandParent:!0,defaultExpandAll:!0,filterTreeNode:searchValue.trim()?node=>"function"===typeof filterSearch?filterSearch(searchValue,getFilterData(node)):searchValueMatched(searchValue,node.title):void 0})));_a=renderFilterItems({filters:column.filters||
[],filterSearch,prefixCls,filteredKeys:getFilteredKeysSync(),filterMultiple,searchValue});const isEmpty=_a.every(item=>null===item);return React.createElement(React.Fragment,null,React.createElement(_FilterSearch.default,{filterSearch,value:searchValue,onChange:onSearch,tablePrefixCls,locale}),isEmpty?empty:React.createElement(_menu.default,{selectable:!0,multiple:filterMultiple,prefixCls:`${dropdownPrefixCls}-menu`,className:dropdownMenuClass,onSelect:onSelectKeys,onDeselect:onSelectKeys,selectedKeys,
getPopupContainer,openKeys,onOpenChange,items:_a}))})(),React.createElement("div",{className:`${prefixCls}-dropdown-btns`},React.createElement(_button.default,{type:"link",size:"small",disabled:(()=>filterResetToDefaultFilteredValue?(0,_isEqual.default)((defaultFilteredValue||[]).map(key=>String(key)),selectedKeys,!0):0===selectedKeys.length)(),onClick:()=>onReset()},locale.filterReset),React.createElement(_button.default,{type:"primary",size:"small",onClick:onConfirm},locale.filterConfirm)))}column.filterDropdown&&
(dropdownContent=React.createElement(_OverrideContext.OverrideProvider,{selectable:void 0},dropdownContent));dropdownContent=React.createElement(_FilterWrapper.default,{className:`${prefixCls}-dropdown`},dropdownContent);_b=(0,_extendsObject.default)({trigger:["click"],placement:"rtl"===direction?"bottomLeft":"bottomRight",children:(()=>{let filterIcon;filterIcon="function"===typeof column.filterIcon?column.filterIcon(filtered):column.filterIcon?column.filterIcon:React.createElement(_FilterFilled.default,
null);return React.createElement("span",{role:"button",tabIndex:-1,className:(0,_classnames.default)(`${prefixCls}-trigger`,{active:filtered}),onClick:e=>{e.stopPropagation()}},filterIcon)})(),getPopupContainer},Object.assign(Object.assign({},filterDropdownProps),{rootClassName:(0,_classnames.default)(rootClassName,filterDropdownProps.rootClassName),open:props,onOpenChange:(newVisible,info)=>{"trigger"===info.source&&(newVisible&&void 0!==propFilteredKeys&&setFilteredKeysSync(propFilteredKeys||[]),
triggerVisible(newVisible),newVisible||column.filterDropdown||!filterOnClose||onConfirm())},dropdownRender:()=>"function"===typeof(null===filterDropdownProps||void 0===filterDropdownProps?void 0:filterDropdownProps.dropdownRender)?filterDropdownProps.dropdownRender(dropdownContent):dropdownContent}));return React.createElement("div",{className:`${prefixCls}-column`},React.createElement("span",{className:`${tablePrefixCls}-column-title`},children),React.createElement(_dropdown.default,Object.assign({},
_b)))}}
//# sourceMappingURL=module$node_modules$antd$lib$table$hooks$useFilter$FilterDropdown.js.map
