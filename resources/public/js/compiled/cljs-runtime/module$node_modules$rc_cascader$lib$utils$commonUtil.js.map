{
"version":3,
"file":"module$node_modules$rc_cascader$lib$utils$commonUtil.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/rc-cascader/lib/utils/commonUtil.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rc_cascader$lib$utils$commonUtil\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VALUE_SPLIT = exports.SHOW_PARENT = exports.SHOW_CHILD = void 0;\nexports.fillFieldNames = fillFieldNames;\nexports.getFullPathKeys = getFullPathKeys;\nexports.isLeaf = isLeaf;\nexports.scrollIntoParentView = scrollIntoParentView;\nexports.toPathKey = toPathKey;\nexports.toPathKeys = toPathKeys;\nexports.toPathValueStr = toPathValueStr;\nexports.toRawValues = toRawValues;\nvar _useSearchOptions = require(\"../hooks/useSearchOptions\");\nvar VALUE_SPLIT = exports.VALUE_SPLIT = '__RC_CASCADER_SPLIT__';\nvar SHOW_PARENT = exports.SHOW_PARENT = 'SHOW_PARENT';\nvar SHOW_CHILD = exports.SHOW_CHILD = 'SHOW_CHILD';\n\n/**\n * Will convert value to string, and join with `VALUE_SPLIT`\n */\nfunction toPathKey(value) {\n  return value.join(VALUE_SPLIT);\n}\n\n/**\n * Batch convert value to string, and join with `VALUE_SPLIT`\n */\nfunction toPathKeys(value) {\n  return value.map(toPathKey);\n}\nfunction toPathValueStr(pathKey) {\n  return pathKey.split(VALUE_SPLIT);\n}\nfunction fillFieldNames(fieldNames) {\n  var _ref = fieldNames || {},\n    label = _ref.label,\n    value = _ref.value,\n    children = _ref.children;\n  var val = value || 'value';\n  return {\n    label: label || 'label',\n    value: val,\n    key: val,\n    children: children || 'children'\n  };\n}\nfunction isLeaf(option, fieldNames) {\n  var _option$isLeaf, _option;\n  return (_option$isLeaf = option.isLeaf) !== null && _option$isLeaf !== void 0 ? _option$isLeaf : !((_option = option[fieldNames.children]) !== null && _option !== void 0 && _option.length);\n}\nfunction scrollIntoParentView(element) {\n  var parent = element.parentElement;\n  if (!parent) {\n    return;\n  }\n  var elementToParent = element.offsetTop - parent.offsetTop; // offsetParent may not be parent.\n  if (elementToParent - parent.scrollTop < 0) {\n    parent.scrollTo({\n      top: elementToParent\n    });\n  } else if (elementToParent + element.offsetHeight - parent.scrollTop > parent.offsetHeight) {\n    parent.scrollTo({\n      top: elementToParent + element.offsetHeight - parent.offsetHeight\n    });\n  }\n}\nfunction getFullPathKeys(options, fieldNames) {\n  return options.map(function (item) {\n    var _item$SEARCH_MARK;\n    return (_item$SEARCH_MARK = item[_useSearchOptions.SEARCH_MARK]) === null || _item$SEARCH_MARK === void 0 ? void 0 : _item$SEARCH_MARK.map(function (opt) {\n      return opt[fieldNames.value];\n    });\n  });\n}\nfunction isMultipleValue(value) {\n  return Array.isArray(value) && Array.isArray(value[0]);\n}\nfunction toRawValues(value) {\n  if (!value) {\n    return [];\n  }\n  if (isMultipleValue(value)) {\n    return value;\n  }\n  return (value.length === 0 ? [] : [value]).map(function (val) {\n    return Array.isArray(val) ? val : [val];\n  });\n}\n};"],
"names":["shadow$provide","global","require","module","exports","toPathKey","value","join","VALUE_SPLIT","isMultipleValue","Array","isArray","Object","defineProperty","SHOW_PARENT","SHOW_CHILD","fillFieldNames","fieldNames","_ref","val","label","key","children","getFullPathKeys","options","map","item","_item$SEARCH_MARK","_useSearchOptions","SEARCH_MARK","opt","isLeaf","option","_option$isLeaf","_option","length","scrollIntoParentView","element","parent","parentElement","elementToParent","offsetTop","scrollTop","scrollTo","top","offsetHeight","toPathKeys","toPathValueStr","pathKey","split","toRawValues"]
}
