shadow$provide.module$node_modules$antd$lib$float_button$FloatButtonGroup=function(global,require,module,exports){"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _react=module(require("module$node_modules$react$index")),_CloseOutlined=module(require("module$node_modules$$ant_design$icons$CloseOutlined")),
_FileTextOutlined=module(require("module$node_modules$$ant_design$icons$FileTextOutlined")),_classnames=module(require("module$node_modules$classnames$index")),_rcMotion=module(require("module$node_modules$rc_motion$lib$index")),_useEvent=module(require("module$node_modules$rc_util$lib$hooks$useEvent")),_useMergedState=module(require("module$node_modules$rc_util$lib$hooks$useMergedState")),_useZIndex=require("module$node_modules$antd$lib$_util$hooks$useZIndex"),_warning=require("module$node_modules$antd$lib$_util$warning"),
_configProvider=require("module$node_modules$antd$lib$config_provider$index"),_useCSSVarCls=module(require("module$node_modules$antd$lib$config_provider$hooks$useCSSVarCls")),_context=require("module$node_modules$antd$lib$float_button$context"),_FloatButton=global(require("module$node_modules$antd$lib$float_button$FloatButton")),_style=module(require("module$node_modules$antd$lib$float_button$style$index")),__rest=function(s,e){var t={},p;for(p in s)Object.prototype.hasOwnProperty.call(s,p)&&0>e.indexOf(p)&&
(t[p]=s[p]);if(null!=s&&"function"===typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)0>e.indexOf(p[i])&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};exports.default=props=>{var _a;const {prefixCls:customizePrefixCls,className,style,shape="circle",type="default",placement="top",icon=_react.default.createElement(_FileTextOutlined.default,null),closeIcon,description,trigger,children,onOpenChange,open:customOpen,onClick:onTriggerButtonClick}=
props,floatButtonProps=__rest(props,"prefixCls className style shape type placement icon closeIcon description trigger children onOpenChange open onClick".split(" ")),{direction,getPrefixCls,floatButtonGroup}=_react.default.useContext(_configProvider.ConfigContext),mergedCloseIcon=null!==(_a=null!==closeIcon&&void 0!==closeIcon?closeIcon:null===floatButtonGroup||void 0===floatButtonGroup?void 0:floatButtonGroup.closeIcon)&&void 0!==_a?_a:_react.default.createElement(_CloseOutlined.default,null);_a=
getPrefixCls(_FloatButton.floatButtonPrefixCls,customizePrefixCls);var rootCls=(0,_useCSSVarCls.default)(_a);const [wrapCSSVar,hashId,cssVarCls]=(0,_style.default)(_a,rootCls);_a=`${_a}-group`;const isMenuMode=trigger&&["click","hover"].includes(trigger);var isValidPlacement=placement&&["top","left","right","bottom"].includes(placement);rootCls=(0,_classnames.default)(_a,hashId,cssVarCls,rootCls,className,{[`${_a}-rtl`]:"rtl"===direction,[`${_a}-${shape}`]:shape,[`${_a}-${shape}-shadow`]:!isMenuMode,
[`${_a}-${placement}`]:isMenuMode&&isValidPlacement});[isValidPlacement]=(0,_useZIndex.useZIndex)("FloatButton",null===style||void 0===style?void 0:style.zIndex);isValidPlacement=Object.assign(Object.assign({},style),{zIndex:isValidPlacement});const wrapperCls=(0,_classnames.default)(hashId,`${_a}-wrap`),[open,setOpen]=(0,_useMergedState.default)(!1,{value:customOpen}),floatButtonGroupRef=_react.default.useRef(null),hoverTrigger="hover"===trigger,clickTrigger="click"===trigger,triggerOpen=(0,_useEvent.default)(nextOpen=>
{open!==nextOpen&&(setOpen(nextOpen),null===onOpenChange||void 0===onOpenChange?void 0:onOpenChange(nextOpen))}),onInternalTriggerButtonClick=e=>{clickTrigger&&triggerOpen(!open);null===onTriggerButtonClick||void 0===onTriggerButtonClick?void 0:onTriggerButtonClick(e)};_react.default.useEffect(()=>{if(clickTrigger){const onDocClick=e=>{var _a;(null===(_a=floatButtonGroupRef.current)||void 0===_a?0:_a.contains(e.target))||triggerOpen(!1)};document.addEventListener("click",onDocClick,{capture:!0});
return()=>document.removeEventListener("click",onDocClick,{capture:!0})}},[clickTrigger]);(0,_warning.devUseWarning)("FloatButton.Group")(!("open"in props)||!!trigger,"usage","`open` need to be used together with `trigger`");return wrapCSSVar(_react.default.createElement(_context.FloatButtonGroupProvider,{value:shape},_react.default.createElement("div",{ref:floatButtonGroupRef,className:rootCls,style:isValidPlacement,onMouseEnter:()=>{hoverTrigger&&triggerOpen(!0)},onMouseLeave:()=>{hoverTrigger&&
triggerOpen(!1)}},isMenuMode?_react.default.createElement(_react.default.Fragment,null,_react.default.createElement(_rcMotion.default,{visible:open,motionName:`${_a}-wrap`},_ref=>{({className:_ref}=_ref);return _react.default.createElement("div",{className:(0,_classnames.default)(_ref,wrapperCls)},children)}),_react.default.createElement(_FloatButton.default,Object.assign({type,icon:open?mergedCloseIcon:icon,description,"aria-label":props["aria-label"],className:`${_a}-trigger`,onClick:onInternalTriggerButtonClick},
floatButtonProps))):children)))}}
//# sourceMappingURL=module$node_modules$antd$lib$float_button$FloatButtonGroup.js.map
