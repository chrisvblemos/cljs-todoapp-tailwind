{
"version":3,
"file":"module$node_modules$antd$lib$cascader$hooks$useBase.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,mDAAA,CAAwE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG5GC,MAAAA,CAA0BH,OAAA,CAAQ,mEAAR,CAAyDI,CAAAA,OACvFC,OAAOC,CAAAA,cAAP,CAAsBJ,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CK,MAAO,CAAA,CADoC,CAA7C,CAGAL,QAAQE,CAAAA,OAAR,CAAkB,IAAK,EACvB,KAAII,MAAQL,MAAA,CAAwBH,OAAA,CAAQ,iCAAR,CAAxB,CAAZ,CACIS,gBAAkBT,OAAA,CAAQ,oDAAR,CAYPE,QAAQE,CAAAA,OAAR,CAXfM,QAAgB,CAACC,kBAAD,CAAqBC,SAArB,CAAgC,CAC9C,MAAM,CACJC,YADI,CAEJ,UAAWC,aAFP;AAGJC,WAHI,CAAA,CAIFP,KAAMQ,CAAAA,UAAN,CAAiBP,eAAgBQ,CAAAA,aAAjC,CACEC,UAAAA,CAAkBN,SAAlBM,EAA+BJ,aACrC,OAAMK,UAAYN,YAAA,CAAa,QAAb,CAAuBF,kBAAvB,CACZS,mBAAAA,CAAoBP,YAAA,CAAa,UAAb,CAAyBF,kBAAzB,CAC1B,OAAO,CAACQ,SAAD,CAAYC,kBAAZ,CAA+BF,SAA/B,CAAgDH,WAAhD,CATuC,CAVgE;",
"sources":["node_modules/antd/lib/cascader/hooks/useBase.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$lib$cascader$hooks$useBase\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _configProvider = require(\"../../config-provider\");\nfunction useBase(customizePrefixCls, direction) {\n  const {\n    getPrefixCls,\n    direction: rootDirection,\n    renderEmpty\n  } = React.useContext(_configProvider.ConfigContext);\n  const mergedDirection = direction || rootDirection;\n  const prefixCls = getPrefixCls('select', customizePrefixCls);\n  const cascaderPrefixCls = getPrefixCls('cascader', customizePrefixCls);\n  return [prefixCls, cascaderPrefixCls, mergedDirection, renderEmpty];\n}\nvar _default = exports.default = useBase;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireWildcard","default","Object","defineProperty","value","React","_configProvider","useBase","customizePrefixCls","direction","getPrefixCls","rootDirection","renderEmpty","useContext","ConfigContext","mergedDirection","prefixCls","cascaderPrefixCls"]
}
