shadow$provide.module$node_modules$rc_picker$lib$PickerInput$hooks$useCellRender=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=function(cellRender,dateRender,monthCellRender,range){(0,_rcUtil.warning)(!dateRender,"'dateRender' is deprecated. Please use 'cellRender' instead.");
(0,_rcUtil.warning)(!monthCellRender,"'monthCellRender' is deprecated. Please use 'cellRender' instead.");var mergedCellRender=React.useMemo(function(){return cellRender?cellRender:function(current,info){return dateRender&&"date"===info.type?dateRender(current,info.today):monthCellRender&&"month"===info.type?monthCellRender(current,info.locale):info.originNode}},[cellRender,monthCellRender,dateRender]);return React.useCallback(function(date,info){return mergedCellRender(date,(0,_objectSpread2.default)((0,_objectSpread2.default)({},
info),{},{range}))},[mergedCellRender,range])};var _objectSpread2=module(require("module$node_modules$$babel$runtime$helpers$objectSpread2")),_rcUtil=require("module$node_modules$rc_util$lib$index"),React=global(require("module$node_modules$react$index"))}
//# sourceMappingURL=module$node_modules$rc_picker$lib$PickerInput$hooks$useCellRender.js.map
