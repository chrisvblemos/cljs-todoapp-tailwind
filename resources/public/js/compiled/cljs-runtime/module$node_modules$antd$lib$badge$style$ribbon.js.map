{
"version":3,
"file":"module$node_modules$antd$lib$badge$style$ribbon.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/antd/lib/badge/style/ribbon.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$lib$badge$style$ribbon\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _cssinjs = require(\"@ant-design/cssinjs\");\nvar _ = require(\".\");\nvar _style = require(\"../../style\");\nvar _internal = require(\"../../theme/internal\");\n// ============================== Ribbon ==============================\nconst genRibbonStyle = token => {\n  const {\n    antCls,\n    badgeFontHeight,\n    marginXS,\n    badgeRibbonOffset,\n    calc\n  } = token;\n  const ribbonPrefixCls = `${antCls}-ribbon`;\n  const ribbonWrapperPrefixCls = `${antCls}-ribbon-wrapper`;\n  const statusRibbonPreset = (0, _internal.genPresetColor)(token, (colorKey, _ref) => {\n    let {\n      darkColor\n    } = _ref;\n    return {\n      [`&${ribbonPrefixCls}-color-${colorKey}`]: {\n        background: darkColor,\n        color: darkColor\n      }\n    };\n  });\n  return {\n    [ribbonWrapperPrefixCls]: {\n      position: 'relative'\n    },\n    [ribbonPrefixCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, (0, _style.resetComponent)(token)), {\n      position: 'absolute',\n      top: marginXS,\n      padding: `0 ${(0, _cssinjs.unit)(token.paddingXS)}`,\n      color: token.colorPrimary,\n      lineHeight: (0, _cssinjs.unit)(badgeFontHeight),\n      whiteSpace: 'nowrap',\n      backgroundColor: token.colorPrimary,\n      borderRadius: token.borderRadiusSM,\n      [`${ribbonPrefixCls}-text`]: {\n        color: token.badgeTextColor\n      },\n      [`${ribbonPrefixCls}-corner`]: {\n        position: 'absolute',\n        top: '100%',\n        width: badgeRibbonOffset,\n        height: badgeRibbonOffset,\n        color: 'currentcolor',\n        border: `${(0, _cssinjs.unit)(calc(badgeRibbonOffset).div(2).equal())} solid`,\n        transform: token.badgeRibbonCornerTransform,\n        transformOrigin: 'top',\n        filter: token.badgeRibbonCornerFilter\n      }\n    }), statusRibbonPreset), {\n      [`&${ribbonPrefixCls}-placement-end`]: {\n        insetInlineEnd: calc(badgeRibbonOffset).mul(-1).equal(),\n        borderEndEndRadius: 0,\n        [`${ribbonPrefixCls}-corner`]: {\n          insetInlineEnd: 0,\n          borderInlineEndColor: 'transparent',\n          borderBlockEndColor: 'transparent'\n        }\n      },\n      [`&${ribbonPrefixCls}-placement-start`]: {\n        insetInlineStart: calc(badgeRibbonOffset).mul(-1).equal(),\n        borderEndStartRadius: 0,\n        [`${ribbonPrefixCls}-corner`]: {\n          insetInlineStart: 0,\n          borderBlockEndColor: 'transparent',\n          borderInlineStartColor: 'transparent'\n        }\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl'\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nvar _default = exports.default = (0, _internal.genStyleHooks)(['Badge', 'Ribbon'], token => {\n  const badgeToken = (0, _.prepareToken)(token);\n  return genRibbonStyle(badgeToken);\n}, _.prepareComponentToken);\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","default","_cssinjs","_","_style","_internal","genRibbonStyle","token","antCls","badgeFontHeight","marginXS","badgeRibbonOffset","calc","ribbonPrefixCls","ribbonWrapperPrefixCls","statusRibbonPreset","genPresetColor","colorKey","_ref","darkColor","background","color","position","assign","resetComponent","top","padding","unit","paddingXS","colorPrimary","lineHeight","whiteSpace","backgroundColor","borderRadius","borderRadiusSM","badgeTextColor","width","height","border","div","equal","transform","badgeRibbonCornerTransform","transformOrigin","filter","badgeRibbonCornerFilter","insetInlineEnd","mul","borderEndEndRadius","borderInlineEndColor","borderBlockEndColor","insetInlineStart","borderEndStartRadius","borderInlineStartColor","direction","genStyleHooks","badgeToken","prepareToken","prepareComponentToken"]
}
