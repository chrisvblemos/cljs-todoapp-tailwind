shadow$provide.module$node_modules$antd$lib$grid$row=function(global,require,module,exports){function useMergedPropByScreen(oriProp,screen){const [prop,setProp]=React.useState("string"===typeof oriProp?oriProp:"");React.useEffect(()=>{a:if("string"===typeof oriProp&&setProp(oriProp),"object"===typeof oriProp)for(let i=0;i<_responsiveObserver.responsiveArray.length;i++){var breakpoint=_responsiveObserver.responsiveArray[i];if(screen[breakpoint]&&(breakpoint=oriProp[breakpoint],void 0!==breakpoint)){setProp(breakpoint);
break a}}},[JSON.stringify(oriProp),screen]);return prop}"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var React=module(require("module$node_modules$react$index")),_classnames=global(require("module$node_modules$classnames$index")),_responsiveObserver=module(require("module$node_modules$antd$lib$_util$responsiveObserver")),
_configProvider=require("module$node_modules$antd$lib$config_provider$index"),_RowContext=global(require("module$node_modules$antd$lib$grid$RowContext")),_style=require("module$node_modules$antd$lib$grid$style$index"),__rest=function(s,e){var t={},p;for(p in s)Object.prototype.hasOwnProperty.call(s,p)&&0>e.indexOf(p)&&(t[p]=s[p]);if(null!=s&&"function"===typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)0>e.indexOf(p[i])&&Object.prototype.propertyIsEnumerable.call(s,
p[i])&&(t[p[i]]=s[p[i]])}return t};require=React.forwardRef((props,ref)=>{const {prefixCls:customizePrefixCls,justify,align,className,style,children,gutter=0,wrap}=props;props=__rest(props,"prefixCls justify align className style children gutter wrap".split(" "));const {getPrefixCls,direction}=React.useContext(_configProvider.ConfigContext),[screens,setScreens]=React.useState({xs:!0,sm:!0,md:!0,lg:!0,xl:!0,xxl:!0}),[curScreens,setCurScreens]=React.useState({xs:!1,sm:!1,md:!1,lg:!1,xl:!1,xxl:!1});
var mergedAlign=useMergedPropByScreen(align,curScreens),mergedJustify=useMergedPropByScreen(justify,curScreens);const gutterRef=React.useRef(gutter),responsiveObserver=(0,_responsiveObserver.default)();React.useEffect(()=>{const token=responsiveObserver.subscribe(screen=>{setCurScreens(screen);const currentGutter=gutterRef.current||0;(!Array.isArray(currentGutter)&&"object"===typeof currentGutter||Array.isArray(currentGutter)&&("object"===typeof currentGutter[0]||"object"===typeof currentGutter[1]))&&
setScreens(screen)});return()=>responsiveObserver.unsubscribe(token)},[]);var prefixCls=getPrefixCls("row",customizePrefixCls);const [wrapCSSVar,hashId,cssVarCls]=(0,_style.useRowStyle)(prefixCls);var gutters=(()=>{const results=[void 0,void 0];(Array.isArray(gutter)?gutter:[gutter,void 0]).forEach((g,index)=>{if("object"===typeof g)for(let i=0;i<_responsiveObserver.responsiveArray.length;i++){const breakpoint=_responsiveObserver.responsiveArray[i];if(screens[breakpoint]&&void 0!==g[breakpoint]){results[index]=
g[breakpoint];break}}else results[index]=g});return results})();mergedAlign=(0,_classnames.default)(prefixCls,{[`${prefixCls}-no-wrap`]:!1===wrap,[`${prefixCls}-${mergedJustify}`]:mergedJustify,[`${prefixCls}-${mergedAlign}`]:mergedAlign,[`${prefixCls}-rtl`]:"rtl"===direction},className,hashId,cssVarCls);mergedJustify={};if(prefixCls=null!=gutters[0]&&0<gutters[0]?gutters[0]/-2:void 0)mergedJustify.marginLeft=prefixCls,mergedJustify.marginRight=prefixCls;const [gutterH,gutterV]=gutters;mergedJustify.rowGap=
gutterV;gutters=React.useMemo(()=>({gutter:[gutterH,gutterV],wrap}),[gutterH,gutterV,wrap]);return wrapCSSVar(React.createElement(_RowContext.default.Provider,{value:gutters},React.createElement("div",Object.assign({},props,{className:mergedAlign,style:Object.assign(Object.assign({},mergedJustify),style),ref}),children)))});require.displayName="Row";exports.default=require}
//# sourceMappingURL=module$node_modules$antd$lib$grid$row.js.map
