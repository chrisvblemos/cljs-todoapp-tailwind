shadow$provide.module$node_modules$antd$lib$grid$col=function(global,require,module,exports){function parseFlex(flex){return"number"===typeof flex?`${flex} ${flex} auto`:/^\d+(\.\d+)?(px|em|rem|%)$/.test(flex)?`0 0 ${flex}`:flex}"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;
var React=module(require("module$node_modules$react$index")),_classnames=global(require("module$node_modules$classnames$index")),_configProvider=require("module$node_modules$antd$lib$config_provider$index"),_RowContext=global(require("module$node_modules$antd$lib$grid$RowContext")),_style=require("module$node_modules$antd$lib$grid$style$index"),__rest=function(s,e){var t={},p;for(p in s)Object.prototype.hasOwnProperty.call(s,p)&&0>e.indexOf(p)&&(t[p]=s[p]);if(null!=s&&"function"===typeof Object.getOwnPropertySymbols){var i=
0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)0>e.indexOf(p[i])&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};const sizes="xs sm md lg xl xxl".split(" ");require=React.forwardRef((props,ref)=>{const {getPrefixCls,direction}=React.useContext(_configProvider.ConfigContext),{gutter,wrap}=React.useContext(_RowContext.default),{prefixCls:customizePrefixCls,span,order,offset,push,pull,className,children,flex,style}=props,others=__rest(props,"prefixCls span order offset push pull className children flex style".split(" ")),
prefixCls=getPrefixCls("col",customizePrefixCls),[wrapCSSVar,hashId,cssVarCls]=(0,_style.useColStyle)(prefixCls),sizeStyle={};let sizeClassObj={};sizes.forEach(size=>{let sizeProps={};const propSize=props[size];"number"===typeof propSize?sizeProps.span=propSize:"object"===typeof propSize&&(sizeProps=propSize||{});delete others[size];sizeClassObj=Object.assign(Object.assign({},sizeClassObj),{[`${prefixCls}-${size}-${sizeProps.span}`]:void 0!==sizeProps.span,[`${prefixCls}-${size}-order-${sizeProps.order}`]:sizeProps.order||
0===sizeProps.order,[`${prefixCls}-${size}-offset-${sizeProps.offset}`]:sizeProps.offset||0===sizeProps.offset,[`${prefixCls}-${size}-push-${sizeProps.push}`]:sizeProps.push||0===sizeProps.push,[`${prefixCls}-${size}-pull-${sizeProps.pull}`]:sizeProps.pull||0===sizeProps.pull,[`${prefixCls}-rtl`]:"rtl"===direction});sizeProps.flex&&(sizeClassObj[`${prefixCls}-${size}-flex`]=!0,sizeStyle[`--${prefixCls}-${size}-flex`]=parseFlex(sizeProps.flex))});const classes=(0,_classnames.default)(prefixCls,{[`${prefixCls}-${span}`]:void 0!==
span,[`${prefixCls}-order-${order}`]:order,[`${prefixCls}-offset-${offset}`]:offset,[`${prefixCls}-push-${push}`]:push,[`${prefixCls}-pull-${pull}`]:pull},className,sizeClassObj,hashId,cssVarCls),mergedStyle={};if(gutter&&0<gutter[0]){const horizontalGutter=gutter[0]/2;mergedStyle.paddingLeft=horizontalGutter;mergedStyle.paddingRight=horizontalGutter}flex&&(mergedStyle.flex=parseFlex(flex),!1!==wrap||mergedStyle.minWidth||(mergedStyle.minWidth=0));return wrapCSSVar(React.createElement("div",Object.assign({},
others,{style:Object.assign(Object.assign(Object.assign({},mergedStyle),style),sizeStyle),className:classes,ref}),children))});require.displayName="Col";exports.default=require}
//# sourceMappingURL=module$node_modules$antd$lib$grid$col.js.map
