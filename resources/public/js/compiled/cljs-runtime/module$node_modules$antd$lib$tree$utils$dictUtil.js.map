{
"version":3,
"file":"module$node_modules$antd$lib$tree$utils$dictUtil.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,gDAAA,CAAqE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAc7GC,QAASA,iBAAgB,CAACC,QAAD,CAAWC,QAAX,CAAqBC,UAArB,CAAiC,CACxD,MAAM,CACJ,IAAKC,QADD,CAEJ,SAAUC,aAFN,CAAA,CAGFF,UAQJF,SAASK,CAAAA,OAAT,CAPAC,QAAoB,CAACC,QAAD,CAAW,CAE7B,MAAMC,SAAWD,QAAA,CAASH,aAAT,CACe,EAAA,CAAhC,GAAIH,QAAA,CAFQM,QAAAE,CAASN,QAATM,CAER,CAAcF,QAAd,CAAJ,EACER,gBAAA,CAAiBS,QAAjB,EAA6B,EAA7B,CAAiCP,QAAjC,CAA2CC,UAA3C,CAJ2B,CAO/B,CAZwD,CAXtDQ,MAAAA,CAAyBd,OAAA,CAAQ,kEAAR,CAAwDe,CAAAA,OACrFC,OAAOC,CAAAA,cAAP,CAAsBf,OAAtB;AAA+B,YAA/B,CAA6C,CAC3CgB,MAAO,CAAA,CADoC,CAA7C,CAGAhB,QAAQiB,CAAAA,aAAR,CAsBAA,QAAsB,CAACC,IAAD,CAAO,CAC3B,IAAI,CACFhB,QADE,CAEFiB,YAFE,CAGFC,QAHE,CAIFC,MAJE,CAKFjB,UALE,CAAA,CAMAc,IACJ,OAAMI,KAAO,EACb,KAAIC,OA3BcC,CA4BlB,IAAIJ,QAAJ,EAAgBA,QAAhB,GAA6BC,MAA7B,CACE,MAAO,CAACD,QAAD,CAET,IAAI,CAACA,QAAL,EAAiB,CAACC,MAAlB,CACE,MAAO,EAKTpB,iBAAA,CAAiBC,QAAjB,CAA2BS,GAAA,EAAO,CAChC,GApCec,CAoCf,GAAIF,MAAJ,CACE,MAAO,CAAA,CAET,IAAaZ,GAAb,GANeS,QAMf,EAAaT,GAAb,GANmCU,MAMnC,CAGE,GADAC,IAAKI,CAAAA,IAAL,CAAUf,GAAV,CACI,CA5CUa,CA4CV,GAAAD,MAAJ,CACEA,MAAA,CA5CaI,CA2Cf,KAEO,IA7CQA,CA6CR,GAAIJ,MAAJ,CAEL,MADAA,OACO,CA9CIE,CA8CJ,CAAA,CAAA,CAFF,CALT,IAxCiBE,EAiDV,GAAIJ,MAAJ,EAELD,IAAKI,CAAAA,IAAL,CAAUf,GAAV,CAEF,OAAOQ,aAAaS,CAAAA,QAAb,CAAsBjB,GAAtB,CAjByB,CAAlC,CAkBG,GAAIkB,SAAUC,CAAAA,cAAd,EAA8B1B,UAA9B,CAlBH,CAmBA,OAAOkB,KAtCoB,CArB7BtB;OAAQ+B,CAAAA,2BAAR,CA6DAA,QAAoC,CAAC7B,QAAD,CAAWoB,IAAX,CAAiBlB,UAAjB,CAA6B,CAC/D,MAAM4B,SAAW,GAAIC,mBAAoBpB,CAAAA,OAAxB,EAAiCS,IAAjC,CAAjB,CACMY,MAAQ,EACdjC,iBAAA,CAAiBC,QAAjB,CAA2B,CAACS,GAAD,CAAMwB,IAAN,CAAA,EAAe,CAClCC,GAAAA,CAAQJ,QAASK,CAAAA,OAAT,CAAiB1B,GAAjB,CACA,EAAC,CAAf,GAAIyB,GAAJ,GACEF,KAAMR,CAAAA,IAAN,CAAWS,IAAX,CACA,CAAAH,QAASM,CAAAA,MAAT,CAAgBF,GAAhB,CAAuB,CAAvB,CAFF,CAIA,OAAO,CAAC,CAACJ,QAASO,CAAAA,MANsB,CAA1C,CAOG,GAAIV,SAAUC,CAAAA,cAAd,EAA8B1B,UAA9B,CAPH,CAQA,OAAO8B,MAXwD,CA5DjE,KAAID,oBAAsBrB,MAAA,CAAuBd,OAAA,CAAQ,8DAAR,CAAvB,CAA1B,CACI+B,UAAY/B,OAAA,CAAQ,gDAAR,CAV6F;",
"sources":["node_modules/antd/lib/tree/utils/dictUtil.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$lib$tree$utils$dictUtil\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calcRangeKeys = calcRangeKeys;\nexports.convertDirectoryKeysToNodes = convertDirectoryKeysToNodes;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _treeUtil = require(\"rc-tree/lib/utils/treeUtil\");\nconst RECORD_NONE = 0;\nconst RECORD_START = 1;\nconst RECORD_END = 2;\nfunction traverseNodesKey(treeData, callback, fieldNames) {\n  const {\n    key: fieldKey,\n    children: fieldChildren\n  } = fieldNames;\n  function processNode(dataNode) {\n    const key = dataNode[fieldKey];\n    const children = dataNode[fieldChildren];\n    if (callback(key, dataNode) !== false) {\n      traverseNodesKey(children || [], callback, fieldNames);\n    }\n  }\n  treeData.forEach(processNode);\n}\n/** \u8ba1\u7b97\u9009\u4e2d\u8303\u56f4\uff0c\u53ea\u8003\u8651expanded\u60c5\u51b5\u4ee5\u4f18\u5316\u6027\u80fd */\nfunction calcRangeKeys(_ref) {\n  let {\n    treeData,\n    expandedKeys,\n    startKey,\n    endKey,\n    fieldNames\n  } = _ref;\n  const keys = [];\n  let record = RECORD_NONE;\n  if (startKey && startKey === endKey) {\n    return [startKey];\n  }\n  if (!startKey || !endKey) {\n    return [];\n  }\n  function matchKey(key) {\n    return key === startKey || key === endKey;\n  }\n  traverseNodesKey(treeData, key => {\n    if (record === RECORD_END) {\n      return false;\n    }\n    if (matchKey(key)) {\n      // Match test\n      keys.push(key);\n      if (record === RECORD_NONE) {\n        record = RECORD_START;\n      } else if (record === RECORD_START) {\n        record = RECORD_END;\n        return false;\n      }\n    } else if (record === RECORD_START) {\n      // Append selection\n      keys.push(key);\n    }\n    return expandedKeys.includes(key);\n  }, (0, _treeUtil.fillFieldNames)(fieldNames));\n  return keys;\n}\nfunction convertDirectoryKeysToNodes(treeData, keys, fieldNames) {\n  const restKeys = (0, _toConsumableArray2.default)(keys);\n  const nodes = [];\n  traverseNodesKey(treeData, (key, node) => {\n    const index = restKeys.indexOf(key);\n    if (index !== -1) {\n      nodes.push(node);\n      restKeys.splice(index, 1);\n    }\n    return !!restKeys.length;\n  }, (0, _treeUtil.fillFieldNames)(fieldNames));\n  return nodes;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","traverseNodesKey","treeData","callback","fieldNames","fieldKey","fieldChildren","forEach","processNode","dataNode","children","key","_interopRequireDefault","default","Object","defineProperty","value","calcRangeKeys","_ref","expandedKeys","startKey","endKey","keys","record","RECORD_NONE","RECORD_END","push","RECORD_START","includes","_treeUtil","fillFieldNames","convertDirectoryKeysToNodes","restKeys","_toConsumableArray2","nodes","node","index","indexOf","splice","length"]
}
