shadow$provide.module$node_modules$antd$lib$form$FormItemInput=function(global,require,module,exports){"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var React=module(require("module$node_modules$react$index")),_classnames=global(require("module$node_modules$classnames$index")),
_rcUtil=require("module$node_modules$rc_util$lib$index"),_useLayoutEffect=global(require("module$node_modules$rc_util$lib$hooks$useLayoutEffect")),_col=global(require("module$node_modules$antd$lib$grid$col")),_context=require("module$node_modules$antd$lib$form$context"),_ErrorList=global(require("module$node_modules$antd$lib$form$ErrorList")),_fallbackCmp=global(require("module$node_modules$antd$lib$form$style$fallbackCmp"));exports.default=props=>{const {prefixCls,status,labelCol,wrapperCol,children,
errors,warnings,_internalItemRender:formItemRender,extra,help,fieldId,marginBottom,onErrorVisibleChanged,label}=props;var baseClassName=`${prefixCls}-item`;const formContext=React.useContext(_context.FormContext),mergedWrapperCol=React.useMemo(()=>{let mergedWrapper=Object.assign({},wrapperCol||formContext.wrapperCol||{});null!==label||labelCol||wrapperCol||!formContext.labelCol||[void 0,"xs","sm","md","lg","xl","xxl"].forEach(size=>{size=size?[size]:[];var formLabel=(0,_rcUtil.get)(formContext.labelCol,
size);formLabel="object"===typeof formLabel?formLabel:{};var wrapper=(0,_rcUtil.get)(mergedWrapper,size);wrapper="object"===typeof wrapper?wrapper:{};"span"in formLabel&&!("offset"in wrapper)&&24>formLabel.span&&(mergedWrapper=(0,_rcUtil.set)(mergedWrapper,[].concat(size,["offset"]),formLabel.span))});return mergedWrapper},[wrapperCol,formContext]),className=(0,_classnames.default)(`${baseClassName}-control`,mergedWrapperCol.className),subFormContext=React.useMemo(()=>{var e=["labelCol","wrapperCol"],
t={},p;for(p in formContext)Object.prototype.hasOwnProperty.call(formContext,p)&&0>e.indexOf(p)&&(t[p]=formContext[p]);if(null!=formContext&&"function"===typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(formContext);i<p.length;i++)0>e.indexOf(p[i])&&Object.prototype.propertyIsEnumerable.call(formContext,p[i])&&(t[p[i]]=formContext[p[i]])}return t},[formContext]),extraRef=React.useRef(null),[extraHeight,setExtraHeight]=React.useState(0);(0,_useLayoutEffect.default)(()=>
{extra&&extraRef.current?setExtraHeight(extraRef.current.clientHeight):setExtraHeight(0)},[extra]);const inputDom=React.createElement("div",{className:`${baseClassName}-control-input`},React.createElement("div",{className:`${baseClassName}-control-input-content`},children));var formItemContext=React.useMemo(()=>({prefixCls,status}),[prefixCls,status]);formItemContext=null!==marginBottom||errors.length||warnings.length?React.createElement(_context.FormItemPrefixContext.Provider,{value:formItemContext},
React.createElement(_ErrorList.default,{fieldId,errors,warnings,help,helpStatus:status,className:`${baseClassName}-explain-connected`,onVisibleChanged:onErrorVisibleChanged})):null;var extraProps={};fieldId&&(extraProps.id=`${fieldId}_extra`);extraProps=extra?React.createElement("div",Object.assign({},extraProps,{className:`${baseClassName}-extra`,ref:extraRef}),extra):null;baseClassName=formItemContext||extraProps?React.createElement("div",{className:`${baseClassName}-additional`,style:marginBottom?
{minHeight:marginBottom+extraHeight}:{}},formItemContext,extraProps):null;props=formItemRender&&"pro_table_render"===formItemRender.mark&&formItemRender.render?formItemRender.render(props,{input:inputDom,errorList:formItemContext,extra:extraProps}):React.createElement(React.Fragment,null,inputDom,baseClassName);return React.createElement(_context.FormContext.Provider,{value:subFormContext},React.createElement(_col.default,Object.assign({},mergedWrapperCol,{className}),props),React.createElement(_fallbackCmp.default,
{prefixCls}))}}
//# sourceMappingURL=module$node_modules$antd$lib$form$FormItemInput.js.map
