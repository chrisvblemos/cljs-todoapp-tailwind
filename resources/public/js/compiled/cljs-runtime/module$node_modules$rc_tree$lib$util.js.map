{
"version":3,
"file":"module$node_modules$rc_tree$lib$util.js",
"lineCount":13,
"mappings":"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",
"sources":["node_modules/rc-tree/lib/util.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rc_tree$lib$util\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.arrAdd = arrAdd;\nexports.arrDel = arrDel;\nexports.calcDropPosition = calcDropPosition;\nexports.calcSelectedKeys = calcSelectedKeys;\nexports.conductExpandParent = conductExpandParent;\nexports.convertDataToTree = convertDataToTree;\nexports.getDragChildrenKeys = getDragChildrenKeys;\nObject.defineProperty(exports, \"getPosition\", {\n  enumerable: true,\n  get: function get() {\n    return _treeUtil.getPosition;\n  }\n});\nexports.isFirstChild = isFirstChild;\nexports.isLastChild = isLastChild;\nObject.defineProperty(exports, \"isTreeNode\", {\n  enumerable: true,\n  get: function get() {\n    return _treeUtil.isTreeNode;\n  }\n});\nexports.parseCheckedKeys = parseCheckedKeys;\nexports.posToArr = posToArr;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _warning = _interopRequireDefault(require(\"rc-util/lib/warning\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _TreeNode = _interopRequireDefault(require(\"./TreeNode\"));\nvar _keyUtil = _interopRequireDefault(require(\"./utils/keyUtil\"));\nvar _treeUtil = require(\"./utils/treeUtil\");\nvar _excluded = [\"children\"];\n/* eslint-disable no-lonely-if */\n/**\n * Legacy code. Should avoid to use if you are new to import these code.\n */\nfunction arrDel(list, value) {\n  if (!list) return [];\n  var clone = list.slice();\n  var index = clone.indexOf(value);\n  if (index >= 0) {\n    clone.splice(index, 1);\n  }\n  return clone;\n}\nfunction arrAdd(list, value) {\n  var clone = (list || []).slice();\n  if (clone.indexOf(value) === -1) {\n    clone.push(value);\n  }\n  return clone;\n}\nfunction posToArr(pos) {\n  return pos.split('-');\n}\nfunction getDragChildrenKeys(dragNodeKey, keyEntities) {\n  // not contains self\n  // self for left or right drag\n  var dragChildrenKeys = [];\n  var entity = (0, _keyUtil.default)(keyEntities, dragNodeKey);\n  function dig() {\n    var list = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    list.forEach(function (_ref) {\n      var key = _ref.key,\n        children = _ref.children;\n      dragChildrenKeys.push(key);\n      dig(children);\n    });\n  }\n  dig(entity.children);\n  return dragChildrenKeys;\n}\nfunction isLastChild(treeNodeEntity) {\n  if (treeNodeEntity.parent) {\n    var posArr = posToArr(treeNodeEntity.pos);\n    return Number(posArr[posArr.length - 1]) === treeNodeEntity.parent.children.length - 1;\n  }\n  return false;\n}\nfunction isFirstChild(treeNodeEntity) {\n  var posArr = posToArr(treeNodeEntity.pos);\n  return Number(posArr[posArr.length - 1]) === 0;\n}\n\n// Only used when drag, not affect SSR.\nfunction calcDropPosition(event, dragNodeProps, targetNodeProps, indent, startMousePosition, allowDrop, flattenedNodes, keyEntities, expandKeys, direction) {\n  var _abstractDropNodeEnti;\n  var clientX = event.clientX,\n    clientY = event.clientY;\n  var _getBoundingClientRec = event.target.getBoundingClientRect(),\n    top = _getBoundingClientRec.top,\n    height = _getBoundingClientRec.height;\n  // optional chain for testing\n  var horizontalMouseOffset = (direction === 'rtl' ? -1 : 1) * (((startMousePosition === null || startMousePosition === void 0 ? void 0 : startMousePosition.x) || 0) - clientX);\n  var rawDropLevelOffset = (horizontalMouseOffset - 12) / indent;\n\n  // Filter the expanded keys to exclude the node that not has children currently (like async nodes).\n  var filteredExpandKeys = expandKeys.filter(function (key) {\n    var _keyEntities$key;\n    return (_keyEntities$key = keyEntities[key]) === null || _keyEntities$key === void 0 || (_keyEntities$key = _keyEntities$key.children) === null || _keyEntities$key === void 0 ? void 0 : _keyEntities$key.length;\n  });\n\n  // find abstract drop node by horizontal offset\n  var abstractDropNodeEntity = (0, _keyUtil.default)(keyEntities, targetNodeProps.eventKey);\n  if (clientY < top + height / 2) {\n    // first half, set abstract drop node to previous node\n    var nodeIndex = flattenedNodes.findIndex(function (flattenedNode) {\n      return flattenedNode.key === abstractDropNodeEntity.key;\n    });\n    var prevNodeIndex = nodeIndex <= 0 ? 0 : nodeIndex - 1;\n    var prevNodeKey = flattenedNodes[prevNodeIndex].key;\n    abstractDropNodeEntity = (0, _keyUtil.default)(keyEntities, prevNodeKey);\n  }\n  var initialAbstractDropNodeKey = abstractDropNodeEntity.key;\n  var abstractDragOverEntity = abstractDropNodeEntity;\n  var dragOverNodeKey = abstractDropNodeEntity.key;\n  var dropPosition = 0;\n  var dropLevelOffset = 0;\n\n  // Only allow cross level drop when dragging on a non-expanded node\n  if (!filteredExpandKeys.includes(initialAbstractDropNodeKey)) {\n    for (var i = 0; i < rawDropLevelOffset; i += 1) {\n      if (isLastChild(abstractDropNodeEntity)) {\n        abstractDropNodeEntity = abstractDropNodeEntity.parent;\n        dropLevelOffset += 1;\n      } else {\n        break;\n      }\n    }\n  }\n  var abstractDragDataNode = dragNodeProps.data;\n  var abstractDropDataNode = abstractDropNodeEntity.node;\n  var dropAllowed = true;\n  if (isFirstChild(abstractDropNodeEntity) && abstractDropNodeEntity.level === 0 && clientY < top + height / 2 && allowDrop({\n    dragNode: abstractDragDataNode,\n    dropNode: abstractDropDataNode,\n    dropPosition: -1\n  }) && abstractDropNodeEntity.key === targetNodeProps.eventKey) {\n    // first half of first node in first level\n    dropPosition = -1;\n  } else if ((abstractDragOverEntity.children || []).length && filteredExpandKeys.includes(dragOverNodeKey)) {\n    // drop on expanded node\n    // only allow drop inside\n    if (allowDrop({\n      dragNode: abstractDragDataNode,\n      dropNode: abstractDropDataNode,\n      dropPosition: 0\n    })) {\n      dropPosition = 0;\n    } else {\n      dropAllowed = false;\n    }\n  } else if (dropLevelOffset === 0) {\n    if (rawDropLevelOffset > -1.5) {\n      // | Node     | <- abstractDropNode\n      // | -^-===== | <- mousePosition\n      // 1. try drop after\n      // 2. do not allow drop\n      if (allowDrop({\n        dragNode: abstractDragDataNode,\n        dropNode: abstractDropDataNode,\n        dropPosition: 1\n      })) {\n        dropPosition = 1;\n      } else {\n        dropAllowed = false;\n      }\n    } else {\n      // | Node     | <- abstractDropNode\n      // | ---==^== | <- mousePosition\n      // whether it has children or doesn't has children\n      // always\n      // 1. try drop inside\n      // 2. try drop after\n      // 3. do not allow drop\n      if (allowDrop({\n        dragNode: abstractDragDataNode,\n        dropNode: abstractDropDataNode,\n        dropPosition: 0\n      })) {\n        dropPosition = 0;\n      } else if (allowDrop({\n        dragNode: abstractDragDataNode,\n        dropNode: abstractDropDataNode,\n        dropPosition: 1\n      })) {\n        dropPosition = 1;\n      } else {\n        dropAllowed = false;\n      }\n    }\n  } else {\n    // | Node1 | <- abstractDropNode\n    //      |  Node2  |\n    // --^--|----=====| <- mousePosition\n    // 1. try insert after Node1\n    // 2. do not allow drop\n    if (allowDrop({\n      dragNode: abstractDragDataNode,\n      dropNode: abstractDropDataNode,\n      dropPosition: 1\n    })) {\n      dropPosition = 1;\n    } else {\n      dropAllowed = false;\n    }\n  }\n  return {\n    dropPosition: dropPosition,\n    dropLevelOffset: dropLevelOffset,\n    dropTargetKey: abstractDropNodeEntity.key,\n    dropTargetPos: abstractDropNodeEntity.pos,\n    dragOverNodeKey: dragOverNodeKey,\n    dropContainerKey: dropPosition === 0 ? null : ((_abstractDropNodeEnti = abstractDropNodeEntity.parent) === null || _abstractDropNodeEnti === void 0 ? void 0 : _abstractDropNodeEnti.key) || null,\n    dropAllowed: dropAllowed\n  };\n}\n\n/**\n * Return selectedKeys according with multiple prop\n * @param selectedKeys\n * @param props\n * @returns [string]\n */\nfunction calcSelectedKeys(selectedKeys, props) {\n  if (!selectedKeys) return undefined;\n  var multiple = props.multiple;\n  if (multiple) {\n    return selectedKeys.slice();\n  }\n  if (selectedKeys.length) {\n    return [selectedKeys[0]];\n  }\n  return selectedKeys;\n}\nvar internalProcessProps = function internalProcessProps(props) {\n  return props;\n};\nfunction convertDataToTree(treeData, processor) {\n  if (!treeData) return [];\n  var _ref2 = processor || {},\n    _ref2$processProps = _ref2.processProps,\n    processProps = _ref2$processProps === void 0 ? internalProcessProps : _ref2$processProps;\n  var list = Array.isArray(treeData) ? treeData : [treeData];\n  return list.map(function (_ref3) {\n    var children = _ref3.children,\n      props = (0, _objectWithoutProperties2.default)(_ref3, _excluded);\n    var childrenNodes = convertDataToTree(children, processor);\n    return /*#__PURE__*/_react.default.createElement(_TreeNode.default, (0, _extends2.default)({\n      key: props.key\n    }, processProps(props)), childrenNodes);\n  });\n}\n\n/**\n * Parse `checkedKeys` to { checkedKeys, halfCheckedKeys } style\n */\nfunction parseCheckedKeys(keys) {\n  if (!keys) {\n    return null;\n  }\n\n  // Convert keys to object format\n  var keyProps;\n  if (Array.isArray(keys)) {\n    // [Legacy] Follow the api doc\n    keyProps = {\n      checkedKeys: keys,\n      halfCheckedKeys: undefined\n    };\n  } else if ((0, _typeof2.default)(keys) === 'object') {\n    keyProps = {\n      checkedKeys: keys.checked || undefined,\n      halfCheckedKeys: keys.halfChecked || undefined\n    };\n  } else {\n    (0, _warning.default)(false, '`checkedKeys` is not an array or an object');\n    return null;\n  }\n  return keyProps;\n}\n\n/**\n * If user use `autoExpandParent` we should get the list of parent node\n * @param keyList\n * @param keyEntities\n */\nfunction conductExpandParent(keyList, keyEntities) {\n  var expandedKeys = new Set();\n  function conductUp(key) {\n    if (expandedKeys.has(key)) return;\n    var entity = (0, _keyUtil.default)(keyEntities, key);\n    if (!entity) return;\n    expandedKeys.add(key);\n    var parent = entity.parent,\n      node = entity.node;\n    if (node.disabled) return;\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n  (keyList || []).forEach(function (key) {\n    conductUp(key);\n  });\n  return (0, _toConsumableArray2.default)(expandedKeys);\n}\n};"],
"names":["shadow$provide","global","require","module","exports","posToArr","pos","split","isLastChild","treeNodeEntity","parent","posArr","Number","length","children","isFirstChild","convertDataToTree","treeData","processor","_ref2$processProps","processProps","internalProcessProps","map","Array","isArray","list","_ref3","props","_objectWithoutProperties2","default","_excluded","childrenNodes","_react","createElement","_TreeNode","_extends2","key","_interopRequireDefault","Object","defineProperty","value","arrAdd","clone","slice","indexOf","push","arrDel","index","splice","calcDropPosition","event","dragNodeProps","targetNodeProps","indent","startMousePosition","allowDrop","flattenedNodes","keyEntities","expandKeys","direction","_abstractDropNodeEnti","clientX","clientY","_getBoundingClientRec","target","getBoundingClientRect","top","height","rawDropLevelOffset","x","filteredExpandKeys","filter","_keyEntities$key","abstractDropNodeEntity","_keyUtil","eventKey","nodeIndex","findIndex","flattenedNode","prevNodeIndex","abstractDragOverEntity","dragOverNodeKey","dropLevelOffset","dropPosition","includes","i","abstractDragDataNode","data","abstractDropDataNode","node","dropAllowed","level","dragNode","dropNode","dropTargetKey","dropTargetPos","dropContainerKey","calcSelectedKeys","selectedKeys","multiple","conductExpandParent","keyList","conductUp","expandedKeys","has","entity","add","disabled","Set","forEach","_toConsumableArray2","getDragChildrenKeys","dragNodeKey","dig","arguments","undefined","_ref","dragChildrenKeys","enumerable","get","_treeUtil","getPosition","isTreeNode","parseCheckedKeys","keys","keyProps","checkedKeys","halfCheckedKeys","_typeof2","checked","halfChecked","_warning"]
}
