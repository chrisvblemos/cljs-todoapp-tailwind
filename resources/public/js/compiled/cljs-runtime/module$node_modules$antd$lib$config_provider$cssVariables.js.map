{
"version":3,
"file":"module$node_modules$antd$lib$config_provider$cssVariables.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/antd/lib/config-provider/cssVariables.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$lib$config_provider$cssVariables\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getStyle = getStyle;\nexports.registerTheme = registerTheme;\nvar _colors = require(\"@ant-design/colors\");\nvar _fastColor = require(\"@ant-design/fast-color\");\nvar _canUseDom = _interopRequireDefault(require(\"rc-util/lib/Dom/canUseDom\"));\nvar _dynamicCSS = require(\"rc-util/lib/Dom/dynamicCSS\");\nvar _warning = _interopRequireDefault(require(\"../_util/warning\"));\nconst dynamicStyleMark = `-ant-${Date.now()}-${Math.random()}`;\nfunction getStyle(globalPrefixCls, theme) {\n  const variables = {};\n  const formatColor = (color, updater) => {\n    let clone = color.clone();\n    clone = (updater === null || updater === void 0 ? void 0 : updater(clone)) || clone;\n    return clone.toRgbString();\n  };\n  const fillColor = (colorVal, type) => {\n    const baseColor = new _fastColor.FastColor(colorVal);\n    const colorPalettes = (0, _colors.generate)(baseColor.toRgbString());\n    variables[`${type}-color`] = formatColor(baseColor);\n    variables[`${type}-color-disabled`] = colorPalettes[1];\n    variables[`${type}-color-hover`] = colorPalettes[4];\n    variables[`${type}-color-active`] = colorPalettes[6];\n    variables[`${type}-color-outline`] = baseColor.clone().setA(0.2).toRgbString();\n    variables[`${type}-color-deprecated-bg`] = colorPalettes[0];\n    variables[`${type}-color-deprecated-border`] = colorPalettes[2];\n  };\n  // ================ Primary Color ================\n  if (theme.primaryColor) {\n    fillColor(theme.primaryColor, 'primary');\n    const primaryColor = new _fastColor.FastColor(theme.primaryColor);\n    const primaryColors = (0, _colors.generate)(primaryColor.toRgbString());\n    // Legacy - We should use semantic naming standard\n    primaryColors.forEach((color, index) => {\n      variables[`primary-${index + 1}`] = color;\n    });\n    // Deprecated\n    variables['primary-color-deprecated-l-35'] = formatColor(primaryColor, c => c.lighten(35));\n    variables['primary-color-deprecated-l-20'] = formatColor(primaryColor, c => c.lighten(20));\n    variables['primary-color-deprecated-t-20'] = formatColor(primaryColor, c => c.tint(20));\n    variables['primary-color-deprecated-t-50'] = formatColor(primaryColor, c => c.tint(50));\n    variables['primary-color-deprecated-f-12'] = formatColor(primaryColor, c => c.setA(c.a * 0.12));\n    const primaryActiveColor = new _fastColor.FastColor(primaryColors[0]);\n    variables['primary-color-active-deprecated-f-30'] = formatColor(primaryActiveColor, c => c.setA(c.a * 0.3));\n    variables['primary-color-active-deprecated-d-02'] = formatColor(primaryActiveColor, c => c.darken(2));\n  }\n  // ================ Success Color ================\n  if (theme.successColor) {\n    fillColor(theme.successColor, 'success');\n  }\n  // ================ Warning Color ================\n  if (theme.warningColor) {\n    fillColor(theme.warningColor, 'warning');\n  }\n  // ================= Error Color =================\n  if (theme.errorColor) {\n    fillColor(theme.errorColor, 'error');\n  }\n  // ================= Info Color ==================\n  if (theme.infoColor) {\n    fillColor(theme.infoColor, 'info');\n  }\n  // Convert to css variables\n  const cssList = Object.keys(variables).map(key => `--${globalPrefixCls}-${key}: ${variables[key]};`);\n  return `\n  :root {\n    ${cssList.join('\\n')}\n  }\n  `.trim();\n}\nfunction registerTheme(globalPrefixCls, theme) {\n  const style = getStyle(globalPrefixCls, theme);\n  if ((0, _canUseDom.default)()) {\n    (0, _dynamicCSS.updateCSS)(style, `${dynamicStyleMark}-dynamic-theme`);\n  } else {\n    process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(false, 'ConfigProvider', 'SSR do not support dynamic theme with css variables.') : void 0;\n  }\n}\n};"],
"names":["shadow$provide","global","require","module","exports","getStyle","globalPrefixCls","theme","variables","formatColor","color","updater","clone","toRgbString","fillColor","colorVal","type","baseColor","_fastColor","FastColor","colorPalettes","_colors","generate","setA","primaryColor","primaryColors","forEach","index","c","lighten","tint","a","primaryActiveColor","darken","successColor","warningColor","errorColor","infoColor","Object","keys","map","cssList","key","join","trim","_interopRequireDefault","default","defineProperty","value","registerTheme","style","_canUseDom","_dynamicCSS","updateCSS","dynamicStyleMark","_warning","Date","now","Math","random"]
}
