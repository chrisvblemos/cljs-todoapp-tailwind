shadow$provide.module$node_modules$rc_picker$lib$PickerInput$Selector$Input=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _extends2=global(require("module$node_modules$$babel$runtime$helpers$extends")),_defineProperty2=global(require("module$node_modules$$babel$runtime$helpers$defineProperty")),
_slicedToArray2=global(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),_objectWithoutProperties2=global(require("module$node_modules$$babel$runtime$helpers$objectWithoutProperties")),_classnames=global(require("module$node_modules$classnames$index")),_rcUtil=require("module$node_modules$rc_util$lib$index"),_useLayoutEffect=global(require("module$node_modules$rc_util$lib$hooks$useLayoutEffect")),_raf=global(require("module$node_modules$rc_util$lib$raf")),React=module(require("module$node_modules$react$index")),
_miscUtil=require("module$node_modules$rc_picker$lib$utils$miscUtil"),_context=global(require("module$node_modules$rc_picker$lib$PickerInput$context")),_useLockEffect=global(require("module$node_modules$rc_picker$lib$PickerInput$hooks$useLockEffect")),_Icon=global(require("module$node_modules$rc_picker$lib$PickerInput$Selector$Icon")),_MaskFormat=global(require("module$node_modules$rc_picker$lib$PickerInput$Selector$MaskFormat")),_util=require("module$node_modules$rc_picker$lib$PickerInput$Selector$util"),
_excluded="active showActiveCls suffixIcon format validateFormat onChange onInput helped onHelp onSubmit onKeyDown preserveInvalidOnBlur invalid clearIcon".split(" ");require=React.forwardRef(function(props,ref){var active=props.active,_props$showActiveCls=props.showActiveCls;_props$showActiveCls=void 0===_props$showActiveCls?!0:_props$showActiveCls;var suffixIcon=props.suffixIcon,format=props.format,validateFormat=props.validateFormat,onChange=props.onChange,helped=props.helped,onHelp=props.onHelp,
onSubmit=props.onSubmit,onKeyDown=props.onKeyDown,_props$preserveInvali=props.preserveInvalidOnBlur,preserveInvalidOnBlur=void 0===_props$preserveInvali?!1:_props$preserveInvali;_props$preserveInvali=props.invalid;var clearIcon=props.clearIcon,restProps=(0,_objectWithoutProperties2.default)(props,_excluded),value=props.value,onFocus=props.onFocus,onBlur=props.onBlur,onMouseUp=props.onMouseUp,_React$useContext=React.useContext(_context.default);props=_React$useContext.input;props=void 0===props?"input":
props;_React$useContext="".concat(_React$useContext.prefixCls,"-input");var _React$useState=React.useState(!1);_React$useState=(0,_slicedToArray2.default)(_React$useState,2);var focused=_React$useState[0],setFocused=_React$useState[1];_React$useState=React.useState(value);_React$useState=(0,_slicedToArray2.default)(_React$useState,2);var internalInputValue=_React$useState[0],setInputValue=_React$useState[1];_React$useState=React.useState("");_React$useState=(0,_slicedToArray2.default)(_React$useState,
2);var focusCellText=_React$useState[0],setFocusCellText=_React$useState[1];_React$useState=React.useState(null);_React$useState=(0,_slicedToArray2.default)(_React$useState,2);var focusCellIndex=_React$useState[0],setFocusCellIndex=_React$useState[1];_React$useState=React.useState(null);var _React$useState10=(0,_slicedToArray2.default)(_React$useState,2);_React$useState=_React$useState10[0];var forceSelectionSync=_React$useState10[1],inputValue=internalInputValue||"";React.useEffect(function(){setInputValue(value)},
[value]);var holderRef=React.useRef(),inputRef=React.useRef();React.useImperativeHandle(ref,function(){return{nativeElement:holderRef.current,inputElement:inputRef.current,focus:function(options){inputRef.current.focus(options)},blur:function(){inputRef.current.blur()}}});var maskFormat=React.useMemo(function(){return new _MaskFormat.default(format||"")},[format]);ref=React.useMemo(function(){return helped?[0,0]:maskFormat.getSelection(focusCellIndex)},[maskFormat,focusCellIndex,helped]);ref=(0,_slicedToArray2.default)(ref,
2);var selectionStart=ref[0],selectionEnd=ref[1],triggerInputChange=(0,_rcUtil.useEvent)(function(text){validateFormat(text)&&onChange(text);setInputValue(text);text&&text!==format&&text!==value&&onHelp()});ref=function(event){event=event.clipboardData.getData("text");validateFormat(event)&&triggerInputChange(event)};var mouseDownRef=React.useRef(!1);internalInputValue=function(){mouseDownRef.current=!0};_React$useState10=function(event){var closeMaskIndex=maskFormat.getMaskCellIndex(event.target.selectionStart);
setFocusCellIndex(closeMaskIndex);forceSelectionSync({});null===onMouseUp||void 0===onMouseUp||onMouseUp(event);mouseDownRef.current=!1};var onFormatFocus=function(event){setFocused(!0);setFocusCellIndex(0);setFocusCellText("");onFocus(event)},onFormatBlur=function(event){setFocused(!1);onBlur(event)};(0,_useLockEffect.default)(active,function(){active||preserveInvalidOnBlur||setInputValue(value)});var onSharedKeyDown=function(event){"Enter"===event.key&&validateFormat(inputValue)&&onSubmit();null===
onKeyDown||void 0===onKeyDown||onKeyDown(event)},onFormatKeyDown=function(event){onSharedKeyDown(event);event=event.key;var nextCellText=null,nextFillText=null,maskCellLen=selectionEnd-selectionStart,cellFormat=format.slice(selectionStart,selectionEnd),offsetCellIndex=function(offset){setFocusCellIndex(function(idx){idx+=offset;idx=Math.max(idx,0);return idx=Math.min(idx,maskFormat.size()-1)})},offsetCellValue=function(offset){var _getMaskRange=(0,_util.getMaskRange)(cellFormat),_getMaskRange2=(0,_slicedToArray2.default)(_getMaskRange,
3);_getMaskRange=_getMaskRange2[0];var rangeEnd=_getMaskRange2[1];_getMaskRange2=_getMaskRange2[2];var currentText=inputValue.slice(selectionStart,selectionEnd);currentText=Number(currentText);if(isNaN(currentText))return String(_getMaskRange2?_getMaskRange2:0<offset?_getMaskRange:rangeEnd);rangeEnd=rangeEnd-_getMaskRange+1;return String(_getMaskRange+(rangeEnd+(currentText+offset)-_getMaskRange)%rangeEnd)};switch(event){case "Backspace":case "Delete":nextCellText="";nextFillText=cellFormat;break;
case "ArrowLeft":nextCellText="";offsetCellIndex(-1);break;case "ArrowRight":nextCellText="";offsetCellIndex(1);break;case "ArrowUp":nextCellText="";nextFillText=offsetCellValue(1);break;case "ArrowDown":nextCellText="";nextFillText=offsetCellValue(-1);break;default:isNaN(Number(event))||(nextFillText=nextCellText=focusCellText+event)}null!==nextCellText&&(setFocusCellText(nextCellText),nextCellText.length>=maskCellLen&&(offsetCellIndex(1),setFocusCellText("")));null!==nextFillText&&(event=inputValue.slice(0,
selectionStart)+(0,_miscUtil.leftPad)(nextFillText,maskCellLen)+inputValue.slice(selectionEnd),triggerInputChange(event.slice(0,format.length)));forceSelectionSync({})},rafRef=React.useRef();(0,_useLayoutEffect.default)(function(){if(focused&&format&&!mouseDownRef.current){if(maskFormat.match(inputValue))return inputRef.current.setSelectionRange(selectionStart,selectionEnd),rafRef.current=(0,_raf.default)(function(){inputRef.current.setSelectionRange(selectionStart,selectionEnd)}),function(){_raf.default.cancel(rafRef.current)};
triggerInputChange(format)}},[maskFormat,format,focused,inputValue,focusCellIndex,selectionStart,selectionEnd,_React$useState,triggerInputChange]);ref=format?{onFocus:onFormatFocus,onBlur:onFormatBlur,onKeyDown:onFormatKeyDown,onMouseDown:internalInputValue,onMouseUp:_React$useState10,onPaste:ref}:{};return React.createElement("div",{ref:holderRef,className:(0,_classnames.default)(_React$useContext,(0,_defineProperty2.default)((0,_defineProperty2.default)({},"".concat(_React$useContext,"-active"),
active&&_props$showActiveCls),"".concat(_React$useContext,"-placeholder"),helped))},React.createElement(props,(0,_extends2.default)({ref:inputRef,"aria-invalid":_props$preserveInvali,autoComplete:"off"},restProps,{onKeyDown:onSharedKeyDown,onBlur:function(event){onBlur(event)}},ref,{value:inputValue,onChange:function(event){format||((event=event.target.value)&&event!==format&&event!==value&&onHelp(),setInputValue(event),onChange(event))}})),React.createElement(_Icon.default,{type:"suffix",icon:suffixIcon}),
clearIcon)});require.displayName="Input";exports.default=require}
//# sourceMappingURL=module$node_modules$rc_picker$lib$PickerInput$Selector$Input.js.map
