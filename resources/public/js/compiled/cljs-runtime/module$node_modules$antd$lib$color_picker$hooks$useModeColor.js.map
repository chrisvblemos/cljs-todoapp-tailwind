{
"version":3,
"file":"module$node_modules$antd$lib$color_picker$hooks$useModeColor.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAA,4DAAA,CAAiF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGrHC,MAAAA,CAAyBH,OAAA,CAAQ,kEAAR,CAAwDI,CAAAA,OACjFC,OAAAA,CAA0BL,OAAA,CAAQ,mEAAR,CAAyDI,CAAAA,OACvFE,OAAOC,CAAAA,cAAP,CAAsBL,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CM,MAAO,CAAA,CADoC,CAA7C,CAGAN,QAAQE,CAAAA,OAAR,CASAK,QAAqB,CAACC,YAAD,CAAeF,KAAf,CAAsBG,IAAtB,CAA4B,CAC/C,MAAM,CAACC,MAAD,CAAA,CAAW,GAAIC,OAAQC,CAAAA,SAAZ,EAAuB,aAAvB,CAAjB,CAGM,CAACC,WAAD,CAAcC,cAAd,CAAA,CAAgC,GAAIC,eAAgBb,CAAAA,OAApB,EAA6BM,YAA7B;AAA2C,CAC/EF,KAD+E,CAA3C,CAHtC,CAOM,CAACU,SAAD,CAAYC,YAAZ,CAAA,CAA4BC,KAAMC,CAAAA,QAAN,CAAe,QAAf,CAPlC,CAQM,CAACC,cAAD,CAAiBC,OAAjB,CAAA,CAA4BH,KAAMI,CAAAA,OAAN,CAAc,EAAA,EAAM,CACpD,IAAMC,KAA6CC,CAArCC,KAAMC,CAAAA,OAAN,CAAcjB,IAAd,CAAA,CAAsBA,IAAtB,CAA6B,CAACA,IAAD,CAAQe,EAAAA,MAAtC,CAA6CG,CAAA,EAAKA,CAAlD,CACRJ,KAAKK,CAAAA,MAAV,EACEL,IAAKM,CAAAA,IAAL,CAAU,QAAV,CAEF,OAAMC,MAAQ,IAAIC,GAAJ,CAAQR,IAAR,CAAd,CACMS,WAAa,EACbC,KAAAA,CAAa,CAACC,QAAD,CAAWC,SAAX,CAAAF,EAAyB,CACtCH,KAAMM,CAAAA,GAAN,CAAUF,QAAV,CAAJ,EACEF,UAAWH,CAAAA,IAAX,CAAgB,CACdQ,MAAOF,SADO,CAEd7B,MAAO4B,QAFO,CAAhB,CAFwC,CAQ5CD,KAAA,CAAW,QAAX,CAAqBvB,MAAO4B,CAAAA,WAA5B,CACAL,KAAA,CAAW,UAAX,CAAuBvB,MAAO6B,CAAAA,aAA9B,CACA,OAAO,CAACP,UAAD,CAAaF,KAAb,CAjB6C,CAApB,CAkB/B,CAACrB,IAAD,CAlB+B,CARlC,CA8BM,CAAC+B,UAAD,CAAaC,aAAb,CAAA,CAA8BvB,KAAMC,CAAAA,QAAN,CAAe,IAAf,CAC9BuB,aAAAA,CAAW,GAAIC,SAAUzC,CAAAA,OAAd,EAAuB0C,SAAA;AAAa,CACnDH,aAAA,CAAcG,SAAd,CACA9B,eAAA,CAAe8B,SAAf,CAFmD,CAApC,CAIjB,OAAMC,UAAY3B,KAAMI,CAAAA,OAAN,CAAc,EAAA,EAAM,CACpC,MAAMwB,SAAW,GAAIC,KAAMC,CAAAA,aAAV,EAAyBnC,WAAzB,EAAwC,EAAxC,CAEjB,OAAOiC,SAASG,CAAAA,MAAT,CAAgBT,UAAhB,CAAA,CAA8BA,UAA9B,CAA2CM,QAHd,CAApB,CAIf,CAACjC,WAAD,CAAc2B,UAAd,CAJe,CAMZU,MAAAA,CAAWhC,KAAMI,CAAAA,OAAN,CAAc,EAAA,EAAM,CACnC,IAAI6B,EACJ,OAAI9B,QAAQe,CAAAA,GAAR,CAAYpB,SAAZ,CAAJ,CACSA,SADT,CAGoC,IAA7B,IAACmC,EAAD,CAAM/B,cAAA,CAAe,CAAf,CAAN,GAA4C,IAAK,EAAjD,GAAqC+B,EAArC,CAAqD,IAAK,EAA1D,CAA8DA,EAAG7C,CAAAA,KALrC,CAApB,CAMd,CAACe,OAAD,CAAUL,SAAV,CAAqBI,cAArB,CANc,CASjBF,MAAMkC,CAAAA,SAAN,CAAgB,EAAA,EAAM,CACpBnC,YAAA,CAAa4B,SAAUQ,CAAAA,UAAV,EAAA,CAAyB,UAAzB,CAAsC,QAAnD,CADoB,CAAtB,CAEG,CAACR,SAAD,CAFH,CAIA,OAAO,CAACA,SAAD;AAAYH,YAAZ,CAAsBQ,KAAtB,CAAgCjC,YAAhC,CAA8CG,cAA9C,CAvDwC,CARjD,KAAIF,MAAQf,MAAA,CAAwBL,OAAA,CAAQ,iCAAR,CAAxB,CAAZ,CACI6C,UAAY1C,MAAA,CAAuBH,OAAA,CAAQ,gDAAR,CAAvB,CADhB,CAEIiB,gBAAkBd,MAAA,CAAuBH,OAAA,CAAQ,sDAAR,CAAvB,CAFtB,CAGIa,QAAUb,OAAA,CAAQ,2CAAR,CAHd,CAIIiD,MAAQjD,OAAA,CAAQ,gDAAR,CAb6G;",
"sources":["node_modules/antd/lib/color-picker/hooks/useModeColor.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$lib$color_picker$hooks$useModeColor\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useModeColor;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _useEvent = _interopRequireDefault(require(\"rc-util/lib/hooks/useEvent\"));\nvar _useMergedState = _interopRequireDefault(require(\"rc-util/lib/hooks/useMergedState\"));\nvar _locale = require(\"../../locale\");\nvar _util = require(\"../util\");\n/**\n * Combine the `color` and `mode` to make sure sync of state.\n */\nfunction useModeColor(defaultValue, value, mode) {\n  const [locale] = (0, _locale.useLocale)('ColorPicker');\n  // ======================== Base ========================\n  // Color\n  const [mergedColor, setMergedColor] = (0, _useMergedState.default)(defaultValue, {\n    value\n  });\n  // Mode\n  const [modeState, setModeState] = React.useState('single');\n  const [modeOptionList, modeSet] = React.useMemo(() => {\n    const list = (Array.isArray(mode) ? mode : [mode]).filter(m => m);\n    if (!list.length) {\n      list.push('single');\n    }\n    const modes = new Set(list);\n    const optionList = [];\n    const pushOption = (modeType, localeTxt) => {\n      if (modes.has(modeType)) {\n        optionList.push({\n          label: localeTxt,\n          value: modeType\n        });\n      }\n    };\n    pushOption('single', locale.singleColor);\n    pushOption('gradient', locale.gradientColor);\n    return [optionList, modes];\n  }, [mode]);\n  // ======================== Post ========================\n  // We need align `mode` with `color` state\n  // >>>>> Color\n  const [cacheColor, setCacheColor] = React.useState(null);\n  const setColor = (0, _useEvent.default)(nextColor => {\n    setCacheColor(nextColor);\n    setMergedColor(nextColor);\n  });\n  const postColor = React.useMemo(() => {\n    const colorObj = (0, _util.generateColor)(mergedColor || '');\n    // Use `cacheColor` in case the color is `cleared`\n    return colorObj.equals(cacheColor) ? cacheColor : colorObj;\n  }, [mergedColor, cacheColor]);\n  // >>>>> Mode\n  const postMode = React.useMemo(() => {\n    var _a;\n    if (modeSet.has(modeState)) {\n      return modeState;\n    }\n    return (_a = modeOptionList[0]) === null || _a === void 0 ? void 0 : _a.value;\n  }, [modeSet, modeState, modeOptionList]);\n  // ======================= Effect =======================\n  // Dynamic update mode when color change\n  React.useEffect(() => {\n    setModeState(postColor.isGradient() ? 'gradient' : 'single');\n  }, [postColor]);\n  // ======================= Return =======================\n  return [postColor, setColor, postMode, setModeState, modeOptionList];\n}\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","default","_interopRequireWildcard","Object","defineProperty","value","useModeColor","defaultValue","mode","locale","_locale","useLocale","mergedColor","setMergedColor","_useMergedState","modeState","setModeState","React","useState","modeOptionList","modeSet","useMemo","list","filter","Array","isArray","m","length","push","modes","Set","optionList","pushOption","modeType","localeTxt","has","label","singleColor","gradientColor","cacheColor","setCacheColor","setColor","_useEvent","nextColor","postColor","colorObj","_util","generateColor","equals","postMode","_a","useEffect","isGradient"]
}
