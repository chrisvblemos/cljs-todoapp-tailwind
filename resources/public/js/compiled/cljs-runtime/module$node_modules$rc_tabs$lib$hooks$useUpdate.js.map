{
"version":3,
"file":"module$node_modules$rc_tabs$lib$hooks$useUpdate.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAA,+CAAA,CAAoE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAgB5GC,QAASA,UAAS,CAACC,QAAD,CAAW,CAAA,IACvBC,UAAY,GAAIC,MAAOC,CAAAA,QAAX,EAAqB,CAArB,CACdC,UAAAA,CAAa,GAAIC,eAAgBC,CAAAA,OAApB,EAA6BL,SAA7B,CAAwC,CAAxC,CAFY,KAGzBM,MAAQH,SAAA,CAAW,CAAX,CAHiB,CAIzBI,SAAWJ,SAAA,CAAW,CAAX,CAJc,CAKvBK,UAAY,GAAIP,MAAOQ,CAAAA,MAAX,EAAmB,CAAnB,CALW,CAMvBC,YAAc,GAAIT,MAAOQ,CAAAA,MAAX,GAClBC,YAAYC,CAAAA,OAAZ,CAAsBZ,QAGtB,IAAIa,gBAAiBC,CAAAA,qBAArB,EAA4C,QAAS,EAAG,CACtD,IAAIC,oBAC6C,KAAjD,IAACA,oBAAD,CAAwBJ,WAAYC,CAAAA,OAApC,GAAkF,IAAK,EAAvF,GAAyDG,oBAAzD;AAA4FA,oBAAqBC,CAAAA,IAArB,CAA0BL,WAA1B,CAFtC,CAAxD,CAGG,CAACJ,KAAD,CAHH,CAMA,OAAO,SAAS,EAAG,CACbE,SAAUG,CAAAA,OAAd,GAA0BL,KAA1B,GAGAE,SAAUG,CAAAA,OACV,EADqB,CACrB,CAAAJ,QAAA,CAASC,SAAUG,CAAAA,OAAnB,CAJA,CADiB,CAhBQ,CAbzBK,MAAAA,CAAyBrB,OAAA,CAAQ,kEAAR,CAC7BsB,OAAOC,CAAAA,cAAP,CAAsBrB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CsB,MAAO,CAAA,CADoC,CAA7C,CAGAtB,QAAQQ,CAAAA,OAAR,CAAkBP,SAClBD,QAAQuB,CAAAA,cAAR,CAgCAA,QAAuB,CAACC,YAAD,CAAe,CACpC,IAAIC,SAAW,GAAIrB,MAAOQ,CAAAA,MAAX,EAAmB,EAAnB,CAAf,CACIc,WAAa,GAAItB,MAAOC,CAAAA,QAAX,EAAqB,EAArB,CADjB,CAGEsB,YADaC,GAAIrB,eAAgBC,CAAAA,OAApBoB,EAA6BF,UAA7BE,CAAyC,CAAzCA,CACC,CAAW,CAAX,CAHhB,CAIIC,MAAQ,GAAIzB,MAAOQ,CAAAA,MAAX,EAA2C,UAAxB;AAAA,MAAOY,aAAP,CAAqCA,YAAA,EAArC,CAAsDA,YAAzE,CAJZ,CAKIM,YAAc7B,SAAA,CAAU,QAAS,EAAG,CACtC,IAAIa,QAAUe,KAAMf,CAAAA,OACpBW,SAASX,CAAAA,OAAQiB,CAAAA,OAAjB,CAAyB,QAAS,CAAC7B,QAAD,CAAW,CAC3CY,OAAA,CAAUZ,QAAA,CAASY,OAAT,CADiC,CAA7C,CAGAW,SAASX,CAAAA,OAAT,CAAmB,EACnBe,MAAMf,CAAAA,OAAN,CAAgBA,OAChBa,YAAA,CAAY,EAAZ,CAPsC,CAAtB,CAalB,OAAO,CAACE,KAAMf,CAAAA,OAAP,CAJPkB,QAAgB,CAAC9B,QAAD,CAAW,CACzBuB,QAASX,CAAAA,OAAQmB,CAAAA,IAAjB,CAAsB/B,QAAtB,CACA4B,YAAA,EAFyB,CAIpB,CAnB6B,CA/BtC,KAAIvB,gBAAkBY,MAAA,CAAuBrB,OAAA,CAAQ,0DAAR,CAAvB,CAAtB,CACIiB,iBAAmBjB,OAAA,CAAQ,uDAAR,CADvB;AAEIM,OAASN,OAAA,CAAQ,iCAAR,CAX+F;",
"sources":["node_modules/rc-tabs/lib/hooks/useUpdate.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rc_tabs$lib$hooks$useUpdate\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useUpdate;\nexports.useUpdateState = useUpdateState;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _useLayoutEffect = require(\"rc-util/lib/hooks/useLayoutEffect\");\nvar _react = require(\"react\");\n/**\n * Help to merge callback with `useLayoutEffect`.\n * One time will only trigger once.\n */\nfunction useUpdate(callback) {\n  var _useState = (0, _react.useState)(0),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    count = _useState2[0],\n    setCount = _useState2[1];\n  var effectRef = (0, _react.useRef)(0);\n  var callbackRef = (0, _react.useRef)();\n  callbackRef.current = callback;\n\n  // Trigger on `useLayoutEffect`\n  (0, _useLayoutEffect.useLayoutUpdateEffect)(function () {\n    var _callbackRef$current;\n    (_callbackRef$current = callbackRef.current) === null || _callbackRef$current === void 0 || _callbackRef$current.call(callbackRef);\n  }, [count]);\n\n  // Trigger to update count\n  return function () {\n    if (effectRef.current !== count) {\n      return;\n    }\n    effectRef.current += 1;\n    setCount(effectRef.current);\n  };\n}\nfunction useUpdateState(defaultState) {\n  var batchRef = (0, _react.useRef)([]);\n  var _useState3 = (0, _react.useState)({}),\n    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n    forceUpdate = _useState4[1];\n  var state = (0, _react.useRef)(typeof defaultState === 'function' ? defaultState() : defaultState);\n  var flushUpdate = useUpdate(function () {\n    var current = state.current;\n    batchRef.current.forEach(function (callback) {\n      current = callback(current);\n    });\n    batchRef.current = [];\n    state.current = current;\n    forceUpdate({});\n  });\n  function updater(callback) {\n    batchRef.current.push(callback);\n    flushUpdate();\n  }\n  return [state.current, updater];\n}\n};"],
"names":["shadow$provide","global","require","module","exports","useUpdate","callback","_useState","_react","useState","_useState2","_slicedToArray2","default","count","setCount","effectRef","useRef","callbackRef","current","_useLayoutEffect","useLayoutUpdateEffect","_callbackRef$current","call","_interopRequireDefault","Object","defineProperty","value","useUpdateState","defaultState","batchRef","_useState3","forceUpdate","_useState4","state","flushUpdate","forEach","updater","push"]
}
