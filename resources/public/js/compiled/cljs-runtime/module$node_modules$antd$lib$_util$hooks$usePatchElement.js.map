{
"version":3,
"file":"module$node_modules$antd$lib$_util$hooks$usePatchElement.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,wDAAA,CAA6E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGjHC,MAAAA,CAA0BH,OAAA,CAAQ,mEAAR,CAAyDI,CAAAA,OACnFC,OAAAA,CAAyBL,OAAA,CAAQ,kEAAR,CAAwDI,CAAAA,OACrFE,OAAOC,CAAAA,cAAP,CAAsBL,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CM,MAAO,CAAA,CADoC,CAA7C,CAGAN,QAAQE,CAAAA,OAAR,CAGAK,QAAwB,EAAG,CACzB,MAAM,CAACC,QAAD,CAAWC,WAAX,CAAA,CAA0BC,KAAMC,CAAAA,QAAN,CAAe,EAAf,CAAhC,CACMC,aAAeF,KAAMG,CAAAA,WAAN,CAAkBC,OAAA,EAAW,CAEhDL,WAAA,CAAYM,cAAA,EAAkB,EAAGC,CAAAA,MAAH,CAAU,GAAIC,mBAAoBf,CAAAA,OAAxB,EAAiCa,cAAjC,CAAV;AAA4D,CAACD,OAAD,CAA5D,CAA9B,CAGA,OAAO,EAAA,EAAM,CACXL,WAAA,CAAYM,cAAA,EAAkBA,cAAeG,CAAAA,MAAf,CAAsBC,GAAA,EAAOA,GAAP,GAAeL,OAArC,CAA9B,CADW,CALmC,CAA7B,CAQlB,EARkB,CASrB,OAAO,CAACN,QAAD,CAAWI,YAAX,CAXkB,CAF3B,KAAIK,oBAAsBd,MAAA,CAAuBL,OAAA,CAAQ,8DAAR,CAAvB,CAA1B,CACIY,MAAQT,MAAA,CAAwBH,OAAA,CAAQ,iCAAR,CAAxB,CAVyG;",
"sources":["node_modules/antd/lib/_util/hooks/usePatchElement.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$lib$_util$hooks$usePatchElement\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = usePatchElement;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nfunction usePatchElement() {\n  const [elements, setElements] = React.useState([]);\n  const patchElement = React.useCallback(element => {\n    // append a new element to elements (and create a new ref)\n    setElements(originElements => [].concat((0, _toConsumableArray2.default)(originElements), [element]));\n    // return a function that removes the new element out of elements (and create a new ref)\n    // it works a little like useEffect\n    return () => {\n      setElements(originElements => originElements.filter(ele => ele !== element));\n    };\n  }, []);\n  return [elements, patchElement];\n}\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireWildcard","default","_interopRequireDefault","Object","defineProperty","value","usePatchElement","elements","setElements","React","useState","patchElement","useCallback","element","originElements","concat","_toConsumableArray2","filter","ele"]
}
