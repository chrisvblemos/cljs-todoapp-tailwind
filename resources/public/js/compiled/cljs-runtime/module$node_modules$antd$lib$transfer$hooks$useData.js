shadow$provide.module$node_modules$antd$lib$transfer$hooks$useData=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var React=global(require("module$node_modules$react$index")),_transKeys=require("module$node_modules$antd$lib$_util$transKeys");exports.default=(dataSource,rowKey,targetKeys)=>{const mergedDataSource=React.useMemo(()=>(dataSource||
[]).map(record=>rowKey?Object.assign(Object.assign({},record),{key:rowKey(record)}):record),[dataSource,rowKey]),[leftDataSource,rightDataSource]=React.useMemo(()=>{const leftData=[],rightData=Array((targetKeys||[]).length),targetKeysMap=(0,_transKeys.groupKeysMap)(targetKeys||[]);mergedDataSource.forEach(record=>{targetKeysMap.has(record.key)?rightData[targetKeysMap.get(record.key)]=record:leftData.push(record)});return[leftData,rightData]},[mergedDataSource,targetKeys,rowKey]);return[mergedDataSource,
leftDataSource,rightDataSource]}}
//# sourceMappingURL=module$node_modules$antd$lib$transfer$hooks$useData.js.map
