shadow$provide.module$node_modules$antd$lib$statistic$Countdown=function(global,require,module,exports){"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var React=module(require("module$node_modules$react$index")),_useForceUpdate=global(require("module$node_modules$antd$lib$_util$hooks$useForceUpdate")),
_reactNode=require("module$node_modules$antd$lib$_util$reactNode"),_Statistic=global(require("module$node_modules$antd$lib$statistic$Statistic")),_utils=require("module$node_modules$antd$lib$statistic$utils"),__rest=function(s,e){var t={},p;for(p in s)Object.prototype.hasOwnProperty.call(s,p)&&0>e.indexOf(p)&&(t[p]=s[p]);if(null!=s&&"function"===typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)0>e.indexOf(p[i])&&Object.prototype.propertyIsEnumerable.call(s,
p[i])&&(t[p[i]]=s[p[i]])}return t};const REFRESH_INTERVAL=1E3/30;exports.default=React.memo(props=>{const {value,format="HH:mm:ss",onChange,onFinish}=props;props=__rest(props,["value","format","onChange","onFinish"]);const forceUpdate=(0,_useForceUpdate.default)(),countdown=React.useRef(null),syncTimer=()=>{const timestamp=(new Date(value)).getTime();timestamp>=Date.now()&&(countdown.current=setInterval(()=>{forceUpdate();null===onChange||void 0===onChange?void 0:onChange(timestamp-Date.now());timestamp<
Date.now()&&(null===onFinish||void 0===onFinish?void 0:onFinish(),countdown.current&&(clearInterval(countdown.current),countdown.current=null))},REFRESH_INTERVAL))};React.useEffect(()=>{syncTimer();return()=>{countdown.current&&(clearInterval(countdown.current),countdown.current=null)}},[value]);return React.createElement(_Statistic.default,Object.assign({},props,{value,valueRender:node=>(0,_reactNode.cloneElement)(node,{title:void 0}),formatter:(formatValue,config)=>(0,_utils.formatCountdown)(formatValue,
Object.assign(Object.assign({},config),{format}))}))})}
//# sourceMappingURL=module$node_modules$antd$lib$statistic$Countdown.js.map
