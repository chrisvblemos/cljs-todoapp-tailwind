{
"version":3,
"file":"module$node_modules$rc_cascader$lib$hooks$useEntities.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,qDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG9GC,MAAAA,CAA0BH,OAAA,CAAQ,mEAAR,CAAyDI,CAAAA,OACnFC,OAAAA,CAAyBL,OAAA,CAAQ,kEAAR,CAAwDI,CAAAA,OACrFE,OAAOC,CAAAA,cAAP,CAAsBL,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CM,MAAO,CAAA,CADoC,CAA7C,CAGAN,QAAQE,CAAAA,OAAR,CAAkB,IAAK,EACvB,KAAIK,eAAiBJ,MAAA,CAAuBL,OAAA,CAAQ,0DAAR,CAAvB,CAArB,CACIU,MAAQP,MAAA,CAAwBH,OAAA,CAAQ,iCAAR,CAAxB,CADZ;AAEIW,UAAYX,OAAA,CAAQ,gDAAR,CAFhB,CAGIY,YAAcZ,OAAA,CAAQ,sDAAR,CAEHE,QAAQE,CAAAA,OAAR,CAAkBS,QAAiB,CAACC,OAAD,CAAUC,UAAV,CAAsB,CACtE,IAAIC,SAAWN,KAAMO,CAAAA,MAAN,CAAa,CAC1BH,QAAS,EADiB,CAE1BI,KAAM,CACJC,YAAa,EADT,CAEJC,gBAAiB,EAFb,CAFoB,CAAb,CA+Bf,OAxBkBV,MAAMW,CAAAA,WAANC,CAAkB,QAAS,EAAG,CAC1CN,QAASO,CAAAA,OAAQT,CAAAA,OAArB,GAAiCA,OAAjC,GACEE,QAASO,CAAAA,OAAQT,CAAAA,OACjB,CAD2BA,OAC3B,CAAAE,QAASO,CAAAA,OAAQL,CAAAA,IAAjB,CAAwB,GAAIP,SAAUa,CAAAA,qBAAd,EAAqCV,OAArC,CAA8C,CACxDC,UADwD,CAEpEU,YAAaA,QAAoB,CAACC,OAAD,CAAU,CACzC,MAAO,GAAIjB,cAAeL,CAAAA,OAAnB,EAA4B,GAAIK,cAAeL,CAAAA,OAAnB,EAA4B,EAA5B;AAAgCsB,OAAhC,CAA5B,CAAsE,EAAtE,CAA0E,CAC/EN,gBAAiB,EAD8D,CAA1E,CADkC,CAFyB,CAOpEO,cAAeA,QAAsB,CAACC,MAAD,CAASF,OAAT,CAAkB,CACrD,IAAIG,QAAUD,MAAOE,CAAAA,KAAMC,CAAAA,GAAb,CAAiB,QAAS,CAACC,IAAD,CAAO,CAC7C,MAAOA,KAAA,CAAKjB,UAAWP,CAAAA,KAAhB,CADsC,CAAjC,CAEXyB,CAAAA,IAFW,CAENrB,WAAYsB,CAAAA,WAFN,CAGdR,QAAQN,CAAAA,eAAR,CAAwBS,OAAxB,CAAA,CAAmCD,MAInCA,OAAOO,CAAAA,GAAP,CAAaN,OARwC,CAPa,CAA9C,CAF1B,CAqBA,OAAOb,SAASO,CAAAA,OAAQL,CAAAA,IAAKE,CAAAA,eAtBiB,CAA9BE,CAuBf,CAACP,UAAD,CAAaD,OAAb,CAvBeQ,CARoD,CAd0C;",
"sources":["node_modules/rc-cascader/lib/hooks/useEntities.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rc_cascader$lib$hooks$useEntities\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _treeUtil = require(\"rc-tree/lib/utils/treeUtil\");\nvar _commonUtil = require(\"../utils/commonUtil\");\n/** Lazy parse options data into conduct-able info to avoid perf issue in single mode */\nvar _default = exports.default = function _default(options, fieldNames) {\n  var cacheRef = React.useRef({\n    options: [],\n    info: {\n      keyEntities: {},\n      pathKeyEntities: {}\n    }\n  });\n  var getEntities = React.useCallback(function () {\n    if (cacheRef.current.options !== options) {\n      cacheRef.current.options = options;\n      cacheRef.current.info = (0, _treeUtil.convertDataToEntities)(options, {\n        fieldNames: fieldNames,\n        initWrapper: function initWrapper(wrapper) {\n          return (0, _objectSpread2.default)((0, _objectSpread2.default)({}, wrapper), {}, {\n            pathKeyEntities: {}\n          });\n        },\n        processEntity: function processEntity(entity, wrapper) {\n          var pathKey = entity.nodes.map(function (node) {\n            return node[fieldNames.value];\n          }).join(_commonUtil.VALUE_SPLIT);\n          wrapper.pathKeyEntities[pathKey] = entity;\n\n          // Overwrite origin key.\n          // this is very hack but we need let conduct logic work with connect path\n          entity.key = pathKey;\n        }\n      });\n    }\n    return cacheRef.current.info.pathKeyEntities;\n  }, [fieldNames, options]);\n  return getEntities;\n};\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireWildcard","default","_interopRequireDefault","Object","defineProperty","value","_objectSpread2","React","_treeUtil","_commonUtil","exports.default","options","fieldNames","cacheRef","useRef","info","keyEntities","pathKeyEntities","useCallback","getEntities","current","convertDataToEntities","initWrapper","wrapper","processEntity","entity","pathKey","nodes","map","node","join","VALUE_SPLIT","key"]
}
