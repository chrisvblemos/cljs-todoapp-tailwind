{
"version":3,
"file":"module$node_modules$rc_util$lib$getScrollBarSize.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/rc-util/lib/getScrollBarSize.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rc_util$lib$getScrollBarSize\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getScrollBarSize;\nexports.getTargetScrollBarSize = getTargetScrollBarSize;\nvar _dynamicCSS = require(\"./Dom/dynamicCSS\");\n/* eslint-disable no-param-reassign */\n\nvar cached;\nfunction measureScrollbarSize(ele) {\n  var randomId = \"rc-scrollbar-measure-\".concat(Math.random().toString(36).substring(7));\n  var measureEle = document.createElement('div');\n  measureEle.id = randomId;\n\n  // Create Style\n  var measureStyle = measureEle.style;\n  measureStyle.position = 'absolute';\n  measureStyle.left = '0';\n  measureStyle.top = '0';\n  measureStyle.width = '100px';\n  measureStyle.height = '100px';\n  measureStyle.overflow = 'scroll';\n\n  // Clone Style if needed\n  var fallbackWidth;\n  var fallbackHeight;\n  if (ele) {\n    var targetStyle = getComputedStyle(ele);\n    measureStyle.scrollbarColor = targetStyle.scrollbarColor;\n    measureStyle.scrollbarWidth = targetStyle.scrollbarWidth;\n\n    // Set Webkit style\n    var webkitScrollbarStyle = getComputedStyle(ele, '::-webkit-scrollbar');\n    var width = parseInt(webkitScrollbarStyle.width, 10);\n    var height = parseInt(webkitScrollbarStyle.height, 10);\n\n    // Try wrap to handle CSP case\n    try {\n      var widthStyle = width ? \"width: \".concat(webkitScrollbarStyle.width, \";\") : '';\n      var heightStyle = height ? \"height: \".concat(webkitScrollbarStyle.height, \";\") : '';\n      (0, _dynamicCSS.updateCSS)(\"\\n#\".concat(randomId, \"::-webkit-scrollbar {\\n\").concat(widthStyle, \"\\n\").concat(heightStyle, \"\\n}\"), randomId);\n    } catch (e) {\n      // Can't wrap, just log error\n      console.error(e);\n\n      // Get from style directly\n      fallbackWidth = width;\n      fallbackHeight = height;\n    }\n  }\n  document.body.appendChild(measureEle);\n\n  // Measure. Get fallback style if provided\n  var scrollWidth = ele && fallbackWidth && !isNaN(fallbackWidth) ? fallbackWidth : measureEle.offsetWidth - measureEle.clientWidth;\n  var scrollHeight = ele && fallbackHeight && !isNaN(fallbackHeight) ? fallbackHeight : measureEle.offsetHeight - measureEle.clientHeight;\n\n  // Clean up\n  document.body.removeChild(measureEle);\n  (0, _dynamicCSS.removeCSS)(randomId);\n  return {\n    width: scrollWidth,\n    height: scrollHeight\n  };\n}\nfunction getScrollBarSize(fresh) {\n  if (typeof document === 'undefined') {\n    return 0;\n  }\n  if (fresh || cached === undefined) {\n    cached = measureScrollbarSize();\n  }\n  return cached.width;\n}\nfunction getTargetScrollBarSize(target) {\n  if (typeof document === 'undefined' || !target || !(target instanceof Element)) {\n    return {\n      width: 0,\n      height: 0\n    };\n  }\n  return measureScrollbarSize(target);\n}\n};"],
"names":["shadow$provide","global","require","module","exports","measureScrollbarSize","ele","randomId","concat","Math","random","toString","substring","measureEle","document","createElement","id","measureStyle","style","position","left","top","width","height","overflow","targetStyle","getComputedStyle","scrollbarColor","scrollbarWidth","webkitScrollbarStyle","parseInt","widthStyle","heightStyle","_dynamicCSS","updateCSS","e","console","error","fallbackWidth","fallbackHeight","body","appendChild","scrollWidth","isNaN","offsetWidth","clientWidth","scrollHeight","offsetHeight","clientHeight","removeChild","removeCSS","Object","defineProperty","value","default","getScrollBarSize","fresh","undefined","cached","getTargetScrollBarSize","target","Element"]
}
