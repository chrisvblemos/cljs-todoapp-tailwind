shadow$provide.module$node_modules$$rc_component$mini_decimal$lib$BigIntDecimal=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _classCallCheck2=global(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),_createClass2=global(require("module$node_modules$$babel$runtime$helpers$createClass")),_defineProperty2=global(require("module$node_modules$$babel$runtime$helpers$defineProperty")),
_numberUtil=require("module$node_modules$$rc_component$mini_decimal$lib$numberUtil");require=function(){function BigIntDecimal(value){(0,_classCallCheck2.default)(this,BigIntDecimal);(0,_defineProperty2.default)(this,"origin","");(0,_defineProperty2.default)(this,"negative",void 0);(0,_defineProperty2.default)(this,"integer",void 0);(0,_defineProperty2.default)(this,"decimal",void 0);(0,_defineProperty2.default)(this,"decimalLen",void 0);(0,_defineProperty2.default)(this,"empty",void 0);(0,_defineProperty2.default)(this,
"nan",void 0);(0,_numberUtil.isEmpty)(value)?this.empty=!0:(this.origin=String(value),"-"===value||Number.isNaN(value)?this.nan=!0:((0,_numberUtil.isE)(value)&&(value=Number(value)),value="string"===typeof value?value:(0,_numberUtil.num2str)(value),(0,_numberUtil.validateNumber)(value)?(value=(0,_numberUtil.trimNumber)(value),this.negative=value.negative,value=value.trimStr.split("."),this.integer=BigInt(value[0]),value=value[1]||"0",this.decimal=BigInt(value),this.decimalLen=value.length):this.nan=
!0))}(0,_createClass2.default)(BigIntDecimal,[{key:"getMark",value:function(){return this.negative?"-":""}},{key:"getIntegerStr",value:function(){return this.integer.toString()}},{key:"getDecimalStr",value:function(){return this.decimal.toString().padStart(this.decimalLen,"0")}},{key:"alignDecimal",value:function(decimalLength){decimalLength="".concat(this.getMark()).concat(this.getIntegerStr()).concat(this.getDecimalStr().padEnd(decimalLength,"0"));return BigInt(decimalLength)}},{key:"negate",value:function(){var clone=
new BigIntDecimal(this.toString());clone.negative=!clone.negative;return clone}},{key:"cal",value:function(offset,calculator,calDecimalLen){var maxDecimalLength=Math.max(this.getDecimalStr().length,offset.getDecimalStr().length),myAlignedDecimal=this.alignDecimal(maxDecimalLength);offset=offset.alignDecimal(maxDecimalLength);calculator=calculator(myAlignedDecimal,offset).toString();calDecimalLen=calDecimalLen(maxDecimalLength);maxDecimalLength=(0,_numberUtil.trimNumber)(calculator);calculator=maxDecimalLength.trimStr;
maxDecimalLength="".concat(maxDecimalLength.negativeStr).concat(calculator.padStart(calDecimalLen+1,"0"));return new BigIntDecimal("".concat(maxDecimalLength.slice(0,-calDecimalLen),".").concat(maxDecimalLength.slice(-calDecimalLen)))}},{key:"add",value:function(value){if(this.isInvalidate())return new BigIntDecimal(value);value=new BigIntDecimal(value);return value.isInvalidate()?this:this.cal(value,function(num1,num2){return num1+num2},function(len){return len})}},{key:"multi",value:function(value){value=
new BigIntDecimal(value);return this.isInvalidate()||value.isInvalidate()?new BigIntDecimal(NaN):this.cal(value,function(num1,num2){return num1*num2},function(len){return 2*len})}},{key:"isEmpty",value:function(){return this.empty}},{key:"isNaN",value:function(){return this.nan}},{key:"isInvalidate",value:function(){return this.isEmpty()||this.isNaN()}},{key:"equals",value:function(target){return this.toString()===(null===target||void 0===target?void 0:target.toString())}},{key:"lessEquals",value:function(target){return 0>=
this.add(target.negate().toString()).toNumber()}},{key:"toNumber",value:function(){return this.isNaN()?NaN:Number(this.toString())}},{key:"toString",value:function(){return 0<arguments.length&&void 0!==arguments[0]&&!arguments[0]?this.origin:this.isInvalidate()?"":(0,_numberUtil.trimNumber)("".concat(this.getMark()).concat(this.getIntegerStr(),".").concat(this.getDecimalStr())).fullStr}}]);return BigIntDecimal}();exports.default=require}
//# sourceMappingURL=module$node_modules$$rc_component$mini_decimal$lib$BigIntDecimal.js.map
