shadow$provide.module$node_modules$antd$lib$input$TextArea=function(global,require,module,exports){"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _react=module(require("module$node_modules$react$index")),_classnames=global(require("module$node_modules$classnames$index")),
_rcTextarea=global(require("module$node_modules$rc_textarea$lib$index")),_getAllowClear=global(require("module$node_modules$antd$lib$_util$getAllowClear")),_statusUtils=require("module$node_modules$antd$lib$_util$statusUtils"),_warning=require("module$node_modules$antd$lib$_util$warning"),_configProvider=require("module$node_modules$antd$lib$config_provider$index"),_DisabledContext=global(require("module$node_modules$antd$lib$config_provider$DisabledContext")),_useCSSVarCls=global(require("module$node_modules$antd$lib$config_provider$hooks$useCSSVarCls")),
_useSize=global(require("module$node_modules$antd$lib$config_provider$hooks$useSize")),_context=require("module$node_modules$antd$lib$form$context"),_useVariants=global(require("module$node_modules$antd$lib$form$hooks$useVariants")),_Input=require("module$node_modules$antd$lib$input$Input"),_style=global(require("module$node_modules$antd$lib$input$style$index")),__rest=function(s,e){var t={},p;for(p in s)Object.prototype.hasOwnProperty.call(s,p)&&0>e.indexOf(p)&&(t[p]=s[p]);if(null!=s&&"function"===
typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)0>e.indexOf(p[i])&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};require=(0,_react.forwardRef)((props,ref)=>{var _a,_b;const {prefixCls:customizePrefixCls,bordered=!0,size:customizeSize,disabled:customDisabled,status:customStatus,allowClear,classNames:classes,rootClassName,className,style,styles,variant:customVariant}=props,rest=__rest(props,"prefixCls bordered size disabled status allowClear classNames rootClassName className style styles variant".split(" "));
var {deprecated}=(0,_warning.devUseWarning)("TextArea");deprecated(!("bordered"in props),"bordered","variant");const {getPrefixCls,direction,textArea}=_react.useContext(_configProvider.ConfigContext);deprecated=(0,_useSize.default)(customizeSize);var disabled=_react.useContext(_DisabledContext.default);disabled=null!==customDisabled&&void 0!==customDisabled?customDisabled:disabled;const {status:contextStatus,hasFeedback,feedbackIcon}=_react.useContext(_context.FormItemInputContext),mergedStatus=(0,_statusUtils.getMergedStatus)(contextStatus,
customStatus),innerRef=_react.useRef(null);_react.useImperativeHandle(ref,()=>{var _a;return{resizableTextArea:null===(_a=innerRef.current)||void 0===_a?void 0:_a.resizableTextArea,focus:option=>{var _a,_b;(0,_Input.triggerFocus)(null===(_b=null===(_a=innerRef.current)||void 0===_a?void 0:_a.resizableTextArea)||void 0===_b?void 0:_b.textArea,option)},blur:()=>{var _a;return null===(_a=innerRef.current)||void 0===_a?void 0:_a.blur()}}});ref=getPrefixCls("input",customizePrefixCls);const rootCls=(0,_useCSSVarCls.default)(ref),
[wrapCSSVar,hashId,cssVarCls]=(0,_style.default)(ref,rootCls),[variant,enableVariantCls]=(0,_useVariants.default)("textArea",customVariant,bordered),mergedAllowClear=(0,_getAllowClear.default)(null!==allowClear&&void 0!==allowClear?allowClear:null===textArea||void 0===textArea?void 0:textArea.allowClear);return wrapCSSVar(_react.createElement(_rcTextarea.default,Object.assign({autoComplete:null===textArea||void 0===textArea?void 0:textArea.autoComplete},rest,{style:Object.assign(Object.assign({},
null===textArea||void 0===textArea?void 0:textArea.style),style),styles:Object.assign(Object.assign({},null===textArea||void 0===textArea?void 0:textArea.styles),styles),disabled,allowClear:mergedAllowClear,className:(0,_classnames.default)(cssVarCls,rootCls,className,rootClassName,null===textArea||void 0===textArea?void 0:textArea.className),classNames:Object.assign(Object.assign(Object.assign({},classes),null===textArea||void 0===textArea?void 0:textArea.classNames),{textarea:(0,_classnames.default)({[`${ref}-sm`]:"small"===
deprecated,[`${ref}-lg`]:"large"===deprecated},hashId,null===classes||void 0===classes?void 0:classes.textarea,null===(_a=null===textArea||void 0===textArea?void 0:textArea.classNames)||void 0===_a?void 0:_a.textarea),variant:(0,_classnames.default)({[`${ref}-${variant}`]:enableVariantCls},(0,_statusUtils.getStatusClassNames)(ref,mergedStatus)),affixWrapper:(0,_classnames.default)(`${ref}-textarea-affix-wrapper`,{[`${ref}-affix-wrapper-rtl`]:"rtl"===direction,[`${ref}-affix-wrapper-sm`]:"small"===
deprecated,[`${ref}-affix-wrapper-lg`]:"large"===deprecated,[`${ref}-textarea-show-count`]:props.showCount||(null===(_b=props.count)||void 0===_b?void 0:_b.show)},hashId)}),prefixCls:ref,suffix:hasFeedback&&_react.createElement("span",{className:`${ref}-textarea-suffix`},feedbackIcon),ref:innerRef})))});exports.default=require}
//# sourceMappingURL=module$node_modules$antd$lib$input$TextArea.js.map
