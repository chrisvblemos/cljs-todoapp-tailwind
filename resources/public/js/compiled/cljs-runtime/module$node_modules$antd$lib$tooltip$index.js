shadow$provide.module$node_modules$antd$lib$tooltip$index=function(global,require,module,exports){"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var React=module(require("module$node_modules$react$index")),_classnames=global(require("module$node_modules$classnames$index")),
_rcTooltip=global(require("module$node_modules$rc_tooltip$lib$index")),_useMergedState=global(require("module$node_modules$rc_util$lib$hooks$useMergedState")),_ContextIsolator=global(require("module$node_modules$antd$lib$_util$ContextIsolator")),_useZIndex=require("module$node_modules$antd$lib$_util$hooks$useZIndex"),_motion=require("module$node_modules$antd$lib$_util$motion"),_placements=global(require("module$node_modules$antd$lib$_util$placements")),_reactNode=require("module$node_modules$antd$lib$_util$reactNode"),
_warning=require("module$node_modules$antd$lib$_util$warning"),_zindexContext=global(require("module$node_modules$antd$lib$_util$zindexContext")),_configProvider=require("module$node_modules$antd$lib$config_provider$index"),_internal=require("module$node_modules$antd$lib$theme$internal");module=global(require("module$node_modules$antd$lib$tooltip$PurePanel"));var _style=global(require("module$node_modules$antd$lib$tooltip$style$index")),_util=require("module$node_modules$antd$lib$tooltip$util"),__rest=
function(s,e){var t={},p;for(p in s)Object.prototype.hasOwnProperty.call(s,p)&&0>e.indexOf(p)&&(t[p]=s[p]);if(null!=s&&"function"===typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)0>e.indexOf(p[i])&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};require=React.forwardRef((props,ref)=>{var _a,_b,_c,_d,_e,_f;const {prefixCls:customizePrefixCls,openClassName,getTooltipContainer,color,overlayInnerStyle,children,afterOpenChange,
afterVisibleChange,destroyTooltipOnHide,arrow=!0,title,overlay,builtinPlacements,arrowPointAtCenter=!1,autoAdjustOverflow=!0}=props,mergedShowArrow=!!arrow,[,token]=(0,_internal.useToken)(),{getPopupContainer:getContextPopupContainer,getPrefixCls,direction,tooltip}=React.useContext(_configProvider.ConfigContext),warning=(0,_warning.devUseWarning)("Tooltip"),tooltipRef=React.useRef(null),forceAlign=()=>{var _a;null===(_a=tooltipRef.current)||void 0===_a?void 0:_a.forceAlign()};React.useImperativeHandle(ref,
()=>{var _a;return{forceAlign,forcePopupAlign:()=>{warning.deprecated(!1,"forcePopupAlign","forceAlign");forceAlign()},nativeElement:null===(_a=tooltipRef.current)||void 0===_a?void 0:_a.nativeElement}});[["visible","open"],["defaultVisible","defaultOpen"],["onVisibleChange","onOpenChange"],["afterVisibleChange","afterOpenChange"],["arrowPointAtCenter","arrow\x3d{{ pointAtCenter: true }}"],["overlayStyle","styles\x3d{{ root: {} }}"],["overlayInnerStyle","styles\x3d{{ body: {} }}"],["overlayClassName",
"classNames\x3d{{ root: {} }}"]].forEach(_ref=>{let [deprecatedName,newName]=_ref;warning.deprecated(!(deprecatedName in props),deprecatedName,newName)});warning(!destroyTooltipOnHide||"boolean"===typeof destroyTooltipOnHide,"usage","`destroyTooltipOnHide` no need config `keepParent` anymore. Please use `boolean` value directly.");warning(!arrow||"boolean"===typeof arrow||!("arrowPointAtCenter"in arrow),"deprecated","`arrowPointAtCenter` in `arrow` is deprecated. Please use `pointAtCenter` instead.");
const [open,setOpen]=(0,_useMergedState.default)(!1,{value:null!==(_a=props.open)&&void 0!==_a?_a:props.visible,defaultValue:null!==(_b=props.defaultOpen)&&void 0!==_b?_b:props.defaultVisible}),noTitle=!title&&!overlay&&0!==title;ref=React.useMemo(()=>{var _a,_b;let mergedArrowPointAtCenter=arrowPointAtCenter;"object"===typeof arrow&&(mergedArrowPointAtCenter=null!==(_b=null!==(_a=arrow.pointAtCenter)&&void 0!==_a?_a:arrow.arrowPointAtCenter)&&void 0!==_b?_b:arrowPointAtCenter);return builtinPlacements||
(0,_placements.default)({arrowPointAtCenter:mergedArrowPointAtCenter,autoAdjustOverflow,arrowWidth:mergedShowArrow?token.sizePopupArrow:0,borderRadius:token.borderRadius,offset:token.marginXXS,visibleFirst:!0})},[arrowPointAtCenter,arrow,builtinPlacements,token]);_a=React.useMemo(()=>0===title?title:overlay||title||"",[overlay,title]);_a=React.createElement(_ContextIsolator.default,{space:!0},"function"===typeof _a?_a():_a);const {getPopupContainer,placement="top",mouseEnterDelay=.1,mouseLeaveDelay=
.1,overlayStyle,rootClassName,overlayClassName,styles,classNames:tooltipClassNames}=props,otherProps=__rest(props,"getPopupContainer placement mouseEnterDelay mouseLeaveDelay overlayStyle rootClassName overlayClassName styles classNames".split(" "));_b=getPrefixCls("tooltip",customizePrefixCls);const rootPrefixCls=getPrefixCls();var injectFromPopover=props["data-popover-inject"];let tempOpen=open;"open"in props||"visible"in props||!noTitle||(tempOpen=!1);const child=React.isValidElement(children)&&
!(0,_reactNode.isFragment)(children)?children:React.createElement("span",null,children);var childProps=child.props;childProps=childProps.className&&"string"!==typeof childProps.className?childProps.className:(0,_classnames.default)(childProps.className,openClassName||`${_b}-open`);const [wrapCSSVar,hashId,cssVarCls]=(0,_style.default)(_b,!injectFromPopover);injectFromPopover=(0,_util.parseColor)(_b,color);const arrowContentStyle=injectFromPopover.arrowStyle,rootClassNames=(0,_classnames.default)(overlayClassName,
{[`${_b}-rtl`]:"rtl"===direction},injectFromPopover.className,rootClassName,hashId,cssVarCls,null===tooltip||void 0===tooltip?void 0:tooltip.className,null===(_c=null===tooltip||void 0===tooltip?void 0:tooltip.classNames)||void 0===_c?void 0:_c.root,null===tooltipClassNames||void 0===tooltipClassNames?void 0:tooltipClassNames.root);_c=(0,_classnames.default)(null===(_d=null===tooltip||void 0===tooltip?void 0:tooltip.classNames)||void 0===_d?void 0:_d.body,null===tooltipClassNames||void 0===tooltipClassNames?
void 0:tooltipClassNames.body);const [zIndex,contextZIndex]=(0,_useZIndex.useZIndex)("Tooltip",otherProps.zIndex);_d=React.createElement(_rcTooltip.default,Object.assign({},otherProps,{zIndex,showArrow:mergedShowArrow,placement,mouseEnterDelay,mouseLeaveDelay,prefixCls:_b,classNames:{root:rootClassNames,body:_c},styles:{root:Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},arrowContentStyle),null===(_e=null===tooltip||void 0===tooltip?void 0:tooltip.styles)||void 0===_e?void 0:
_e.root),null===tooltip||void 0===tooltip?void 0:tooltip.style),overlayStyle),null===styles||void 0===styles?void 0:styles.root),body:Object.assign(Object.assign(Object.assign(Object.assign({},null===(_f=null===tooltip||void 0===tooltip?void 0:tooltip.styles)||void 0===_f?void 0:_f.body),overlayInnerStyle),null===styles||void 0===styles?void 0:styles.body),injectFromPopover.overlayStyle)},getTooltipContainer:getPopupContainer||getTooltipContainer||getContextPopupContainer,ref:tooltipRef,builtinPlacements:ref,
overlay:_a,visible:tempOpen,onVisibleChange:vis=>{var _a,_b;setOpen(noTitle?!1:vis);noTitle||(null===(_a=props.onOpenChange)||void 0===_a?void 0:_a.call(props,vis),null===(_b=props.onVisibleChange)||void 0===_b?void 0:_b.call(props,vis))},afterVisibleChange:null!==afterOpenChange&&void 0!==afterOpenChange?afterOpenChange:afterVisibleChange,arrowContent:React.createElement("span",{className:`${_b}-arrow-content`}),motion:{motionName:(0,_motion.getTransitionName)(rootPrefixCls,"zoom-big-fast",props.transitionName),
motionDeadline:1E3},destroyTooltipOnHide:!!destroyTooltipOnHide}),tempOpen?(0,_reactNode.cloneElement)(child,{className:childProps}):child);return wrapCSSVar(React.createElement(_zindexContext.default.Provider,{value:contextZIndex},_d))});require.displayName="Tooltip";require._InternalPanelDoNotUseOrYouWillBeFired=module.default;exports.default=require}
//# sourceMappingURL=module$node_modules$antd$lib$tooltip$index.js.map
