{
"version":3,
"file":"module$node_modules$rc_field_form$lib$utils$valueUtil.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/rc-field-form/lib/utils/valueUtil.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rc_field_form$lib$utils$valueUtil\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cloneByNamePathList = cloneByNamePathList;\nexports.containsNamePath = containsNamePath;\nexports.defaultGetValueFromEvent = defaultGetValueFromEvent;\nexports.getNamePath = getNamePath;\nObject.defineProperty(exports, \"getValue\", {\n  enumerable: true,\n  get: function get() {\n    return _get.default;\n  }\n});\nexports.isSimilar = isSimilar;\nexports.matchNamePath = matchNamePath;\nexports.move = move;\nObject.defineProperty(exports, \"setValue\", {\n  enumerable: true,\n  get: function get() {\n    return _set.default;\n  }\n});\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _get = _interopRequireDefault(require(\"rc-util/lib/utils/get\"));\nvar _set = _interopRequireDefault(require(\"rc-util/lib/utils/set\"));\nvar _typeUtil = require(\"./typeUtil\");\n/**\n * Convert name to internal supported format.\n * This function should keep since we still thinking if need support like `a.b.c` format.\n * 'a' => ['a']\n * 123 => [123]\n * ['a', 123] => ['a', 123]\n */\nfunction getNamePath(path) {\n  return (0, _typeUtil.toArray)(path);\n}\nfunction cloneByNamePathList(store, namePathList) {\n  var newStore = {};\n  namePathList.forEach(function (namePath) {\n    var value = (0, _get.default)(store, namePath);\n    newStore = (0, _set.default)(newStore, namePath, value);\n  });\n  return newStore;\n}\n\n/**\n * Check if `namePathList` includes `namePath`.\n * @param namePathList A list of `InternalNamePath[]`\n * @param namePath Compare `InternalNamePath`\n * @param partialMatch True will make `[a, b]` match `[a, b, c]`\n */\nfunction containsNamePath(namePathList, namePath) {\n  var partialMatch = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return namePathList && namePathList.some(function (path) {\n    return matchNamePath(namePath, path, partialMatch);\n  });\n}\n\n/**\n * Check if `namePath` is super set or equal of `subNamePath`.\n * @param namePath A list of `InternalNamePath[]`\n * @param subNamePath Compare `InternalNamePath`\n * @param partialMatch True will make `[a, b]` match `[a, b, c]`\n */\nfunction matchNamePath(namePath, subNamePath) {\n  var partialMatch = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  if (!namePath || !subNamePath) {\n    return false;\n  }\n  if (!partialMatch && namePath.length !== subNamePath.length) {\n    return false;\n  }\n  return subNamePath.every(function (nameUnit, i) {\n    return namePath[i] === nameUnit;\n  });\n}\n\n// Like `shallowEqual`, but we not check the data which may cause re-render\n\nfunction isSimilar(source, target) {\n  if (source === target) {\n    return true;\n  }\n  if (!source && target || source && !target) {\n    return false;\n  }\n  if (!source || !target || (0, _typeof2.default)(source) !== 'object' || (0, _typeof2.default)(target) !== 'object') {\n    return false;\n  }\n  var sourceKeys = Object.keys(source);\n  var targetKeys = Object.keys(target);\n  var keys = new Set([].concat(sourceKeys, targetKeys));\n  return (0, _toConsumableArray2.default)(keys).every(function (key) {\n    var sourceValue = source[key];\n    var targetValue = target[key];\n    if (typeof sourceValue === 'function' && typeof targetValue === 'function') {\n      return true;\n    }\n    return sourceValue === targetValue;\n  });\n}\nfunction defaultGetValueFromEvent(valuePropName) {\n  var event = arguments.length <= 1 ? undefined : arguments[1];\n  if (event && event.target && (0, _typeof2.default)(event.target) === 'object' && valuePropName in event.target) {\n    return event.target[valuePropName];\n  }\n  return event;\n}\n\n/**\n * Moves an array item from one position in an array to another.\n *\n * Note: This is a pure function so a new array will be returned, instead\n * of altering the array argument.\n *\n * @param array         Array in which to move an item.         (required)\n * @param moveIndex     The index of the item to move.          (required)\n * @param toIndex       The index to move item at moveIndex to. (required)\n */\nfunction move(array, moveIndex, toIndex) {\n  var length = array.length;\n  if (moveIndex < 0 || moveIndex >= length || toIndex < 0 || toIndex >= length) {\n    return array;\n  }\n  var item = array[moveIndex];\n  var diff = moveIndex - toIndex;\n  if (diff > 0) {\n    // move left\n    return [].concat((0, _toConsumableArray2.default)(array.slice(0, toIndex)), [item], (0, _toConsumableArray2.default)(array.slice(toIndex, moveIndex)), (0, _toConsumableArray2.default)(array.slice(moveIndex + 1, length)));\n  }\n  if (diff < 0) {\n    // move right\n    return [].concat((0, _toConsumableArray2.default)(array.slice(0, moveIndex)), (0, _toConsumableArray2.default)(array.slice(moveIndex + 1, toIndex + 1)), [item], (0, _toConsumableArray2.default)(array.slice(toIndex + 1, length)));\n  }\n  return array;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","matchNamePath","namePath","subNamePath","arguments","length","undefined","every","nameUnit","i","_interopRequireDefault","default","Object","defineProperty","value","cloneByNamePathList","store","namePathList","newStore","forEach","_get","_set","containsNamePath","partialMatch","some","path","defaultGetValueFromEvent","valuePropName","event","target","_typeof2","getNamePath","_typeUtil","toArray","enumerable","get","isSimilar","source","sourceKeys","keys","targetKeys","Set","concat","_toConsumableArray2","key","sourceValue","targetValue","move","array","moveIndex","toIndex","item","diff","slice"]
}
