shadow$provide.module$node_modules$rc_tree_select$lib$hooks$useDataEntities=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _objectSpread2=module(require("module$node_modules$$babel$runtime$helpers$objectSpread2")),React=global(require("module$node_modules$react$index")),
_treeUtil=require("module$node_modules$rc_tree$lib$utils$treeUtil"),_warning=module(require("module$node_modules$rc_util$lib$warning")),_valueUtil=require("module$node_modules$rc_tree_select$lib$utils$valueUtil");exports.default=function(treeData,fieldNames){return React.useMemo(function(){return(0,_treeUtil.convertDataToEntities)(treeData,{fieldNames,initWrapper:function(wrapper){return(0,_objectSpread2.default)((0,_objectSpread2.default)({},wrapper),{},{valueEntities:new Map})},processEntity:function(entity,
wrapper){var val=entity.node[fieldNames.value],key=entity.node.key;(0,_warning.default)(!(0,_valueUtil.isNil)(val),"TreeNode `value` is invalidate: undefined");(0,_warning.default)(!wrapper.valueEntities.has(val),"Same `value` exist in the tree: ".concat(val));(0,_warning.default)(!key||String(key)===String(val),"`key` or `value` with TreeNode must be the same or you can remove one of them. key: ".concat(key,", value: ").concat(val,"."));wrapper.valueEntities.set(val,entity)}})},[treeData,fieldNames])}}
//# sourceMappingURL=module$node_modules$rc_tree_select$lib$hooks$useDataEntities.js.map
