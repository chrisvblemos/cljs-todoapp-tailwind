{
"version":3,
"file":"module$node_modules$$ant_design$cssinjs_utils$lib$util$statistic.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/@ant-design/cssinjs-utils/lib/util/statistic.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$ant_design$cssinjs_utils$lib$util$statistic\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports._statistic_build_ = void 0;\nexports.merge = merge;\nexports.statistic = void 0;\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar enableStatistic = process.env.NODE_ENV !== 'production' || typeof CSSINJS_STATISTIC !== 'undefined';\nvar recording = true;\n\n/**\n * This function will do as `Object.assign` in production. But will use Object.defineProperty:get to\n * pass all value access in development. To support statistic field usage with alias token.\n */\nfunction merge() {\n  for (var _len = arguments.length, objs = new Array(_len), _key = 0; _key < _len; _key++) {\n    objs[_key] = arguments[_key];\n  }\n  /* istanbul ignore next */\n  if (!enableStatistic) {\n    return Object.assign.apply(Object, [{}].concat(objs));\n  }\n  recording = false;\n  var ret = {};\n  objs.forEach(function (obj) {\n    if ((0, _typeof2.default)(obj) !== 'object') {\n      return;\n    }\n    var keys = Object.keys(obj);\n    keys.forEach(function (key) {\n      Object.defineProperty(ret, key, {\n        configurable: true,\n        enumerable: true,\n        get: function get() {\n          return obj[key];\n        }\n      });\n    });\n  });\n  recording = true;\n  return ret;\n}\n\n/** @internal Internal Usage. Not use in your production. */\nvar statistic = exports.statistic = {};\n\n/** @internal Internal Usage. Not use in your production. */\nvar _statistic_build_ = exports._statistic_build_ = {};\n\n/* istanbul ignore next */\nfunction noop() {}\n\n/** Statistic token usage case. Should use `merge` function if you do not want spread record. */\nvar statisticToken = function statisticToken(token) {\n  var tokenKeys;\n  var proxy = token;\n  var flush = noop;\n  if (enableStatistic && typeof Proxy !== 'undefined') {\n    tokenKeys = new Set();\n    proxy = new Proxy(token, {\n      get: function get(obj, prop) {\n        if (recording) {\n          var _tokenKeys;\n          (_tokenKeys = tokenKeys) === null || _tokenKeys === void 0 || _tokenKeys.add(prop);\n        }\n        return obj[prop];\n      }\n    });\n    flush = function flush(componentName, componentToken) {\n      var _statistic$componentN;\n      statistic[componentName] = {\n        global: Array.from(tokenKeys),\n        component: (0, _objectSpread2.default)((0, _objectSpread2.default)({}, (_statistic$componentN = statistic[componentName]) === null || _statistic$componentN === void 0 ? void 0 : _statistic$componentN.component), componentToken)\n      };\n    };\n  }\n  return {\n    token: proxy,\n    keys: tokenKeys,\n    flush: flush\n  };\n};\nvar _default = exports.default = statisticToken;\n};"],
"names":["shadow$provide","global","require","module","exports","noop","_interopRequireDefault","default","Object","defineProperty","value","_statistic_build_","merge","_len","arguments","length","objs","Array","_key","enableStatistic","assign","apply","concat","recording","ret","forEach","obj","_typeof2","keys","key","configurable","enumerable","get","statistic","_objectSpread2","statisticToken","token","proxy","flush","Proxy","tokenKeys","Set","prop","_tokenKeys","add","componentName","componentToken","_statistic$componentN","from","component"]
}
