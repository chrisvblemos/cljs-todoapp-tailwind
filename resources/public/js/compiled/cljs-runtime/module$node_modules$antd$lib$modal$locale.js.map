{
"version":3,
"file":"module$node_modules$antd$lib$modal$locale.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,yCAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGlGC,MAAAA,CAAyBH,OAAA,CAAQ,kEAAR,CAAwDI,CAAAA,OACrFC,OAAOC,CAAAA,cAAP,CAAsBJ,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CK,MAAO,CAAA,CADoC,CAA7C,CAGAL,QAAQM,CAAAA,mBAAR,CAMAA,QAA4B,CAACC,SAAD,CAAY,CACtC,GAAIA,SAAJ,CAAe,CACb,MAAMC,YAAcL,MAAOM,CAAAA,MAAP,CAAc,EAAd,CAAkBF,SAAlB,CACpBG,WAAWC,CAAAA,IAAX,CAAgBH,WAAhB,CACAI,cAAA,CAAgBC,cAAA,EAChB,OAAO,EAAA,EAAM,CACXH,UAAA,CAAaA,UAAWI,CAAAA,MAAX,CAAkBC,MAAA,EAAUA,MAAV,GAAqBP,WAAvC,CACbI,cAAA,CAAgBC,cAAA,EAFL,CAJA,CASfD,aAAA;AAAgBT,MAAOM,CAAAA,MAAP,CAAc,EAAd,CAAkBO,MAAOd,CAAAA,OAAQe,CAAAA,KAAjC,CAVsB,CALxCjB,QAAQkB,CAAAA,gBAAR,CAiBAA,QAAyB,EAAG,CAC1B,MAAON,cADmB,CAhB5B,KAAII,OAASf,MAAA,CAAuBH,OAAA,CAAQ,2CAAR,CAAvB,CACb,KAAIc,cAAgBT,MAAOM,CAAAA,MAAP,CAAc,EAAd,CAAkBO,MAAOd,CAAAA,OAAQe,CAAAA,KAAjC,CAApB,CACIP,WAAa,EACjB,OAAMG,eAAiB,EAAAA,EAAMH,UAAWS,CAAAA,MAAX,CAAkB,CAACC,MAAD,CAASL,MAAT,CAAA,EAAoBZ,MAAOM,CAAAA,MAAP,CAAcN,MAAOM,CAAAA,MAAP,CAAc,EAAd,CAAkBW,MAAlB,CAAd,CAAyCL,MAAzC,CAAtC,CAAwFC,MAAOd,CAAAA,OAAQe,CAAAA,KAAvG,CAZyE;",
"sources":["node_modules/antd/lib/modal/locale.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$lib$modal$locale\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.changeConfirmLocale = changeConfirmLocale;\nexports.getConfirmLocale = getConfirmLocale;\nvar _en_US = _interopRequireDefault(require(\"../locale/en_US\"));\nlet runtimeLocale = Object.assign({}, _en_US.default.Modal);\nlet localeList = [];\nconst generateLocale = () => localeList.reduce((merged, locale) => Object.assign(Object.assign({}, merged), locale), _en_US.default.Modal);\nfunction changeConfirmLocale(newLocale) {\n  if (newLocale) {\n    const cloneLocale = Object.assign({}, newLocale);\n    localeList.push(cloneLocale);\n    runtimeLocale = generateLocale();\n    return () => {\n      localeList = localeList.filter(locale => locale !== cloneLocale);\n      runtimeLocale = generateLocale();\n    };\n  }\n  runtimeLocale = Object.assign({}, _en_US.default.Modal);\n}\nfunction getConfirmLocale() {\n  return runtimeLocale;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","default","Object","defineProperty","value","changeConfirmLocale","newLocale","cloneLocale","assign","localeList","push","runtimeLocale","generateLocale","filter","locale","_en_US","Modal","getConfirmLocale","reduce","merged"]
}
