shadow$provide.module$node_modules$antd$lib$_util$ActionButton=function(global,require,module,exports){function isThenable(thing){return!(null===thing||void 0===thing||!thing.then)}"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var React=module(require("module$node_modules$react$index")),
_useState=global(require("module$node_modules$rc_util$lib$hooks$useState")),_button=global(require("module$node_modules$antd$lib$button$index")),_buttonHelpers=require("module$node_modules$antd$lib$button$buttonHelpers");exports.default=props=>{const {type,children,prefixCls,buttonProps,close,autoFocus,emitEvent,isSilent,quitOnNullishReturnValue,actionFn}=props,clickedRef=React.useRef(!1),buttonRef=React.useRef(null),[loading,setLoading]=(0,_useState.default)(!1),onInternalClose=function(){null===
close||void 0===close?void 0:close.apply(void 0,arguments)};React.useEffect(()=>{let timeoutId=null;autoFocus&&(timeoutId=setTimeout(()=>{var _a;null===(_a=buttonRef.current)||void 0===_a?void 0:_a.focus({preventScroll:!0})}));return()=>{timeoutId&&clearTimeout(timeoutId)}},[]);const handlePromiseOnOk=returnValueOfOnOk=>{isThenable(returnValueOfOnOk)&&(setLoading(!0),returnValueOfOnOk.then(function(){setLoading(!1,!0);onInternalClose.apply(void 0,arguments);clickedRef.current=!1},e=>{setLoading(!1,
!0);clickedRef.current=!1;if(null===isSilent||void 0===isSilent||!isSilent())return Promise.reject(e)}))};return React.createElement(_button.default,Object.assign({},(0,_buttonHelpers.convertLegacyProps)(type),{onClick:e=>{if(!clickedRef.current)if(clickedRef.current=!0,actionFn){if(emitEvent){var returnValueOfOnOk=actionFn(e);if(quitOnNullishReturnValue&&!isThenable(returnValueOfOnOk)){clickedRef.current=!1;onInternalClose(e);return}}else if(actionFn.length)returnValueOfOnOk=actionFn(close),clickedRef.current=
!1;else if(returnValueOfOnOk=actionFn(),!isThenable(returnValueOfOnOk)){onInternalClose();return}handlePromiseOnOk(returnValueOfOnOk)}else onInternalClose()},loading,prefixCls},buttonProps,{ref:buttonRef}),children)}}
//# sourceMappingURL=module$node_modules$antd$lib$_util$ActionButton.js.map
