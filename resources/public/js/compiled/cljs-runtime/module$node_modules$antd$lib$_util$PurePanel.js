shadow$provide.module$node_modules$antd$lib$_util$PurePanel=function(global,require,module,exports){function withPureRenderTheme(Component){return props=>React.createElement(_configProvider.default,{theme:{token:{motion:!1,zIndexPopupBase:0}}},React.createElement(Component,Object.assign({},props)))}"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,
"__esModule",{value:!0});exports.default=void 0;exports.withPureRenderTheme=withPureRenderTheme;var React=module(require("module$node_modules$react$index")),_useMergedState=global(require("module$node_modules$rc_util$lib$hooks$useMergedState")),_configProvider=module(require("module$node_modules$antd$lib$config_provider$index"));exports.default=(Component,alignPropName,postProps,defaultPrefixCls,getDropdownCls)=>withPureRenderTheme(props=>{const {prefixCls:customizePrefixCls,style}=props,holderRef=
React.useRef(null),[popupHeight,setPopupHeight]=React.useState(0),[popupWidth,setPopupWidth]=React.useState(0),[open,setOpen]=(0,_useMergedState.default)(!1,{value:props.open}),{getPrefixCls}=React.useContext(_configProvider.ConfigContext),prefixCls=getPrefixCls(defaultPrefixCls||"select",customizePrefixCls);React.useEffect(()=>{setOpen(!0);if("undefined"!==typeof ResizeObserver){const resizeObserver=new ResizeObserver(entries=>{entries=entries[0].target;setPopupHeight(entries.offsetHeight+8);setPopupWidth(entries.offsetWidth)}),
interval=setInterval(()=>{var _a;const dropdownCls=getDropdownCls?`.${getDropdownCls(prefixCls)}`:`.${prefixCls}-dropdown`,popup=null===(_a=holderRef.current)||void 0===_a?void 0:_a.querySelector(dropdownCls);popup&&(clearInterval(interval),resizeObserver.observe(popup))},10);return()=>{clearInterval(interval);resizeObserver.disconnect()}}},[]);props=Object.assign(Object.assign({},props),{style:Object.assign(Object.assign({},style),{margin:0}),open,visible:open,getPopupContainer:()=>holderRef.current});
postProps&&(props=postProps(props));alignPropName&&Object.assign(props,{[alignPropName]:{overflow:{adjustX:!1,adjustY:!1}}});return React.createElement("div",{ref:holderRef,style:{paddingBottom:popupHeight,position:"relative",minWidth:popupWidth}},React.createElement(Component,Object.assign({},props)))})}
//# sourceMappingURL=module$node_modules$antd$lib$_util$PurePanel.js.map
