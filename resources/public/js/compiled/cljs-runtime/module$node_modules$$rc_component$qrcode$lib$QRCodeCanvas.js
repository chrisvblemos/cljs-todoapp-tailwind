shadow$provide.module$node_modules$$rc_component$qrcode$lib$QRCodeCanvas=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.QRCodeCanvas=void 0;var _extends2=global(require("module$node_modules$$babel$runtime$helpers$extends")),_objectSpread2=global(require("module$node_modules$$babel$runtime$helpers$objectSpread2")),
_slicedToArray2=global(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),_objectWithoutProperties2=global(require("module$node_modules$$babel$runtime$helpers$objectWithoutProperties")),_react=module(require("module$node_modules$react$index")),_useQRCode2=require("module$node_modules$$rc_component$qrcode$lib$hooks$useQRCode"),_utils=require("module$node_modules$$rc_component$qrcode$lib$utils"),_excluded="value size level bgColor fgColor includeMargin minVersion marginSize style imageSettings".split(" ");
(exports.QRCodeCanvas=_react.default.forwardRef(function(props,forwardedRef){var value=props.value,_props$size=props.size,size=void 0===_props$size?_utils.DEFAULT_SIZE:_props$size;_props$size=props.level;_props$size=void 0===_props$size?_utils.DEFAULT_LEVEL:_props$size;var _props$bgColor=props.bgColor,bgColor=void 0===_props$bgColor?_utils.DEFAULT_BACKGROUND_COLOR:_props$bgColor;_props$bgColor=props.fgColor;var fgColor=void 0===_props$bgColor?_utils.DEFAULT_FRONT_COLOR:_props$bgColor;_props$bgColor=
props.includeMargin;var includeMargin=void 0===_props$bgColor?_utils.DEFAULT_NEED_MARGIN:_props$bgColor;_props$bgColor=props.minVersion;var minVersion=void 0===_props$bgColor?_utils.DEFAULT_MINVERSION:_props$bgColor,marginSize=props.marginSize,style=props.style,imageSettings=props.imageSettings;props=(0,_objectWithoutProperties2.default)(props,_excluded);_props$bgColor=null===imageSettings||void 0===imageSettings?void 0:imageSettings.src;var _canvas=(0,_react.useRef)(null),_image=(0,_react.useRef)(null),
setCanvasRef=(0,_react.useCallback)(function(node){_canvas.current=node;"function"===typeof forwardedRef?forwardedRef(node):forwardedRef&&(forwardedRef.current=node)},[forwardedRef]),_useState=(0,_react.useState)(!1),setIsImageLoaded=(0,_slicedToArray2.default)(_useState,2)[1];value=(0,_useQRCode2.useQRCode)({value,level:_props$size,minVersion,includeMargin,marginSize,imageSettings,size});var margin=value.margin,cells=value.cells,numCells=value.numCells,calculatedImageSettings=value.calculatedImageSettings;
(0,_react.useEffect)(function(){if(null!=_canvas.current){var canvas=_canvas.current,ctx=canvas.getContext("2d");if(ctx){var cellsToDraw=cells,image=_image.current,haveImageToRender=null!=calculatedImageSettings&&null!==image&&image.complete&&0!==image.naturalHeight&&0!==image.naturalWidth;haveImageToRender&&null!=calculatedImageSettings.excavation&&(cellsToDraw=(0,_utils.excavateModules)(cells,calculatedImageSettings.excavation));var pixelRatio=window.devicePixelRatio||1;canvas.height=canvas.width=
size*pixelRatio;canvas=size/numCells*pixelRatio;ctx.scale(canvas,canvas);ctx.fillStyle=bgColor;ctx.fillRect(0,0,numCells,numCells);ctx.fillStyle=fgColor;_utils.isSupportPath2d?ctx.fill(new Path2D((0,_utils.generatePath)(cellsToDraw,margin))):cells.forEach(function(row,rdx){row.forEach(function(cell,cdx){cell&&ctx.fillRect(cdx+margin,rdx+margin,1,1)})});calculatedImageSettings&&(ctx.globalAlpha=calculatedImageSettings.opacity);haveImageToRender&&ctx.drawImage(image,calculatedImageSettings.x+margin,
calculatedImageSettings.y+margin,calculatedImageSettings.w,calculatedImageSettings.h)}}});(0,_react.useEffect)(function(){setIsImageLoaded(!1)},[_props$bgColor]);value=(0,_objectSpread2.default)({height:size,width:size},style);_props$size=null;null!=_props$bgColor&&(_props$size=_react.default.createElement("img",{src:_props$bgColor,key:_props$bgColor,style:{display:"none"},onLoad:function(){setIsImageLoaded(!0)},ref:_image,crossOrigin:null===calculatedImageSettings||void 0===calculatedImageSettings?
void 0:calculatedImageSettings.crossOrigin}));return _react.default.createElement(_react.default.Fragment,null,_react.default.createElement("canvas",(0,_extends2.default)({style:value,height:size,width:size,ref:setCanvasRef,role:"img"},props)),_props$size)})).displayName="QRCodeCanvas"}
//# sourceMappingURL=module$node_modules$$rc_component$qrcode$lib$QRCodeCanvas.js.map
