{
"version":3,
"file":"module$node_modules$antd$lib$watermark$useClips.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/antd/lib/watermark/useClips.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$lib$watermark$useClips\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FontGap = void 0;\nexports.default = useClips;\nvar _toList = _interopRequireDefault(require(\"../_util/toList\"));\nconst FontGap = exports.FontGap = 3;\nfunction prepareCanvas(width, height) {\n  let ratio = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  const realWidth = width * ratio;\n  const realHeight = height * ratio;\n  canvas.setAttribute('width', `${realWidth}px`);\n  canvas.setAttribute('height', `${realHeight}px`);\n  ctx.save();\n  return [ctx, canvas, realWidth, realHeight];\n}\n/**\n * Get the clips of text content.\n * This is a lazy hook function since SSR no need this\n */\nfunction useClips() {\n  // Get single clips\n  function getClips(content, rotate, ratio, width, height, font, gapX, gapY) {\n    // ================= Text / Image =================\n    const [ctx, canvas, contentWidth, contentHeight] = prepareCanvas(width, height, ratio);\n    if (content instanceof HTMLImageElement) {\n      // Image\n      ctx.drawImage(content, 0, 0, contentWidth, contentHeight);\n    } else {\n      // Text\n      const {\n        color,\n        fontSize,\n        fontStyle,\n        fontWeight,\n        fontFamily,\n        textAlign\n      } = font;\n      const mergedFontSize = Number(fontSize) * ratio;\n      ctx.font = `${fontStyle} normal ${fontWeight} ${mergedFontSize}px/${height}px ${fontFamily}`;\n      ctx.fillStyle = color;\n      ctx.textAlign = textAlign;\n      ctx.textBaseline = 'top';\n      const contents = (0, _toList.default)(content);\n      contents === null || contents === void 0 ? void 0 : contents.forEach((item, index) => {\n        ctx.fillText(item !== null && item !== void 0 ? item : '', contentWidth / 2, index * (mergedFontSize + FontGap * ratio));\n      });\n    }\n    // ==================== Rotate ====================\n    const angle = Math.PI / 180 * Number(rotate);\n    const maxSize = Math.max(width, height);\n    const [rCtx, rCanvas, realMaxSize] = prepareCanvas(maxSize, maxSize, ratio);\n    // Copy from `ctx` and rotate\n    rCtx.translate(realMaxSize / 2, realMaxSize / 2);\n    rCtx.rotate(angle);\n    if (contentWidth > 0 && contentHeight > 0) {\n      rCtx.drawImage(canvas, -contentWidth / 2, -contentHeight / 2);\n    }\n    // Get boundary of rotated text\n    function getRotatePos(x, y) {\n      const targetX = x * Math.cos(angle) - y * Math.sin(angle);\n      const targetY = x * Math.sin(angle) + y * Math.cos(angle);\n      return [targetX, targetY];\n    }\n    let left = 0;\n    let right = 0;\n    let top = 0;\n    let bottom = 0;\n    const halfWidth = contentWidth / 2;\n    const halfHeight = contentHeight / 2;\n    const points = [[0 - halfWidth, 0 - halfHeight], [0 + halfWidth, 0 - halfHeight], [0 + halfWidth, 0 + halfHeight], [0 - halfWidth, 0 + halfHeight]];\n    points.forEach(_ref => {\n      let [x, y] = _ref;\n      const [targetX, targetY] = getRotatePos(x, y);\n      left = Math.min(left, targetX);\n      right = Math.max(right, targetX);\n      top = Math.min(top, targetY);\n      bottom = Math.max(bottom, targetY);\n    });\n    const cutLeft = left + realMaxSize / 2;\n    const cutTop = top + realMaxSize / 2;\n    const cutWidth = right - left;\n    const cutHeight = bottom - top;\n    // ================ Fill Alternate ================\n    const realGapX = gapX * ratio;\n    const realGapY = gapY * ratio;\n    const filledWidth = (cutWidth + realGapX) * 2;\n    const filledHeight = cutHeight + realGapY;\n    const [fCtx, fCanvas] = prepareCanvas(filledWidth, filledHeight);\n    function drawImg() {\n      let targetX = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      let targetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      fCtx.drawImage(rCanvas, cutLeft, cutTop, cutWidth, cutHeight, targetX, targetY, cutWidth, cutHeight);\n    }\n    drawImg();\n    drawImg(cutWidth + realGapX, -cutHeight / 2 - realGapY / 2);\n    drawImg(cutWidth + realGapX, +cutHeight / 2 + realGapY / 2);\n    return [fCanvas.toDataURL(), filledWidth / ratio, filledHeight / ratio];\n  }\n  return getClips;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","prepareCanvas","width","height","ratio","arguments","length","undefined","canvas","document","createElement","ctx","getContext","realWidth","realHeight","setAttribute","save","_interopRequireDefault","default","Object","defineProperty","value","FontGap","useClips","getClips","content","rotate","font","gapX","gapY","drawImg","fCtx","drawImage","rCanvas","cutLeft","cutTop","cutWidth","cutHeight","targetX","targetY","contentWidth","contentHeight","HTMLImageElement","color","fontSize","fontStyle","fontWeight","fontFamily","textAlign","mergedFontSize","Number","fillStyle","textBaseline","contents","_toList","forEach","item","index","fillText","angle","Math","PI","maxSize","max","rCtx","realMaxSize","translate","left","right","top","bottom","halfWidth","halfHeight","points","_ref","x","y","cos","sin","min","realGapX","realGapY","filledWidth","filledHeight","fCanvas","toDataURL"]
}
