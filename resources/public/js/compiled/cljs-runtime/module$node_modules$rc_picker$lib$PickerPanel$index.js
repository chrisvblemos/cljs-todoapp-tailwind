shadow$provide.module$node_modules$rc_picker$lib$PickerPanel$index=function(global,require,module,exports){module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _extends2=global(require("module$node_modules$$babel$runtime$helpers$extends")),_defineProperty2=global(require("module$node_modules$$babel$runtime$helpers$defineProperty")),
_objectSpread2=global(require("module$node_modules$$babel$runtime$helpers$objectSpread2")),_toConsumableArray2=global(require("module$node_modules$$babel$runtime$helpers$toConsumableArray")),_slicedToArray2=global(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),_classnames=global(require("module$node_modules$classnames$index")),_rcUtil=require("module$node_modules$rc_util$lib$index"),React=module(require("module$node_modules$react$index")),_useLocale=global(require("module$node_modules$rc_picker$lib$hooks$useLocale")),
_useTimeConfig=require("module$node_modules$rc_picker$lib$hooks$useTimeConfig"),_useToggleDates=global(require("module$node_modules$rc_picker$lib$hooks$useToggleDates")),_context=global(require("module$node_modules$rc_picker$lib$PickerInput$context")),_useCellRender=global(require("module$node_modules$rc_picker$lib$PickerInput$hooks$useCellRender")),_dateUtil=require("module$node_modules$rc_picker$lib$utils$dateUtil"),_miscUtil=require("module$node_modules$rc_picker$lib$utils$miscUtil"),_context2=
require("module$node_modules$rc_picker$lib$PickerPanel$context"),_DatePanel=global(require("module$node_modules$rc_picker$lib$PickerPanel$DatePanel$index"));module=global(require("module$node_modules$rc_picker$lib$PickerPanel$DateTimePanel$index"));var _DecadePanel=global(require("module$node_modules$rc_picker$lib$PickerPanel$DecadePanel$index")),_MonthPanel=global(require("module$node_modules$rc_picker$lib$PickerPanel$MonthPanel$index")),_QuarterPanel=global(require("module$node_modules$rc_picker$lib$PickerPanel$QuarterPanel$index")),
_TimePanel=global(require("module$node_modules$rc_picker$lib$PickerPanel$TimePanel$index")),_WeekPanel=global(require("module$node_modules$rc_picker$lib$PickerPanel$WeekPanel$index"));require=global(require("module$node_modules$rc_picker$lib$PickerPanel$YearPanel$index"));var DefaultComponents={date:_DatePanel.default,datetime:module.default,week:_WeekPanel.default,month:_MonthPanel.default,quarter:_QuarterPanel.default,year:require.default,decade:_DecadePanel.default,time:_TimePanel.default};require=
React.memo(React.forwardRef(function(props,ref){var _React$useContext,locale=props.locale,generateConfig=props.generateConfig,direction=props.direction,prefixCls=props.prefixCls,_props$tabIndex=props.tabIndex;_props$tabIndex=void 0===_props$tabIndex?0:_props$tabIndex;var multiple=props.multiple,defaultValue=props.defaultValue,value=props.value,onChange=props.onChange,onSelect=props.onSelect,defaultPickerValue=props.defaultPickerValue,pickerValue=props.pickerValue,onPickerValueChange=props.onPickerValueChange,
mode=props.mode,onPanelChange=props.onPanelChange,_props$picker=props.picker,picker=void 0===_props$picker?"date":_props$picker,showTime=props.showTime;_props$picker=props.hoverValue;var hoverRangeValue=props.hoverRangeValue,cellRender=props.cellRender,dateRender=props.dateRender,monthCellRender=props.monthCellRender,_props$components=props.components,components=void 0===_props$components?{}:_props$components,hideHeader=props.hideHeader;_props$components=(null===(_React$useContext=React.useContext(_context.default))||
void 0===_React$useContext?void 0:_React$useContext.prefixCls)||prefixCls||"rc-picker";var rootRef=React.useRef();React.useImperativeHandle(ref,function(){return{nativeElement:rootRef.current}});ref=(0,_useTimeConfig.getTimeProps)(props);ref=(0,_slicedToArray2.default)(ref,4);var timeProps=ref[0],showTimeFormat=ref[2],propFormat=ref[3],filledLocale=(0,_useLocale.default)(locale,ref[1]),internalPicker="date"===picker&&showTime?"datetime":picker;ref=React.useMemo(function(){return(0,_useTimeConfig.fillShowTimeConfig)(internalPicker,
showTimeFormat,propFormat,timeProps,filledLocale)},[internalPicker,showTimeFormat,propFormat,timeProps,filledLocale]);_React$useContext=generateConfig.getNow();mode=(0,_rcUtil.useMergedState)(picker,{value:mode,postState:function(val){return val||"date"}});mode=(0,_slicedToArray2.default)(mode,2);var mergedMode=mode[0],setMergedMode=mode[1];mode="date"===mergedMode&&ref?"datetime":mergedMode;var toggleDates=(0,_useToggleDates.default)(generateConfig,locale,internalPicker);defaultValue=(0,_rcUtil.useMergedState)(defaultValue,
{value});defaultValue=(0,_slicedToArray2.default)(defaultValue,2);var innerValue=defaultValue[0],setMergedValue=defaultValue[1],mergedValue=React.useMemo(function(){var values=(0,_miscUtil.toArray)(innerValue).filter(function(val){return val});return multiple?values:values.slice(0,1)},[innerValue,multiple]),triggerChange=(0,_rcUtil.useEvent)(function(nextValue){setMergedValue(nextValue);!onChange||null!==nextValue&&mergedValue.length===nextValue.length&&!mergedValue.some(function(ori,index){return!(0,_dateUtil.isSame)(generateConfig,
locale,ori,nextValue[index],internalPicker)})||null!==onChange&&void 0!==onChange&&onChange(multiple?nextValue:nextValue[0])}),onInternalSelect=(0,_rcUtil.useEvent)(function(newDate){null===onSelect||void 0===onSelect||onSelect(newDate);mergedMode===picker&&(newDate=multiple?toggleDates(mergedValue,newDate):[newDate],triggerChange(newDate))});defaultPickerValue=(0,_rcUtil.useMergedState)(defaultPickerValue||mergedValue[0]||_React$useContext,{value:pickerValue});defaultValue=(0,_slicedToArray2.default)(defaultPickerValue,
2);defaultPickerValue=defaultValue[0];var setInternalPickerValue=defaultValue[1];React.useEffect(function(){mergedValue[0]&&!pickerValue&&setInternalPickerValue(mergedValue[0])},[mergedValue[0]]);var setPickerValue=function(nextPickerValue){var triggerPanelEvent=1<arguments.length&&void 0!==arguments[1]?arguments[1]:!1;setInternalPickerValue(nextPickerValue);null===onPickerValueChange||void 0===onPickerValueChange||onPickerValueChange(nextPickerValue);triggerPanelEvent&&(null===onPanelChange||void 0===
onPanelChange||onPanelChange(nextPickerValue||pickerValue,mergedMode))},triggerModeChange=function(nextMode,viewDate){setMergedMode(nextMode);viewDate&&setPickerValue(viewDate);null===onPanelChange||void 0===onPanelChange||onPanelChange(viewDate||pickerValue,nextMode||mergedMode)};defaultValue=React.useMemo(function(){if(Array.isArray(hoverRangeValue)){var end=(0,_slicedToArray2.default)(hoverRangeValue,2);var start=end[0];end=end[1]}else start=hoverRangeValue;if(!start&&!end)return null;start=start||
end;end=end||start;return generateConfig.isAfter(start,end)?[end,start]:[start,end]},[hoverRangeValue,generateConfig]);cellRender=(0,_useCellRender.default)(cellRender,dateRender,monthCellRender);dateRender=components[mode]||DefaultComponents[mode]||_DatePanel.default;var parentHackContext=React.useContext(_context2.PickerHackContext);monthCellRender=React.useMemo(function(){return(0,_objectSpread2.default)((0,_objectSpread2.default)({},parentHackContext),{},{hideHeader})},[parentHackContext,hideHeader]);
(0,_rcUtil.warning)(!mergedValue||mergedValue.every(function(val){return generateConfig.isValidate(val)}),"Invalidate date pass to `value` or `defaultValue`.");components="".concat(_props$components,"-panel");props=(0,_miscUtil.pickProps)(props,"showWeek prevIcon nextIcon superPrevIcon superNextIcon disabledDate minDate maxDate onHover".split(" "));return React.createElement(_context2.PickerHackContext.Provider,{value:monthCellRender},React.createElement("div",{ref:rootRef,tabIndex:_props$tabIndex,
className:(0,_classnames.default)(components,(0,_defineProperty2.default)({},"".concat(components,"-rtl"),"rtl"===direction))},React.createElement(dateRender,(0,_extends2.default)({},props,{showTime:ref,prefixCls:_props$components,locale:filledLocale,generateConfig,onModeChange:triggerModeChange,pickerValue:defaultPickerValue,onPickerValueChange:function(nextPickerValue){setPickerValue(nextPickerValue,!0)},value:mergedValue[0],onSelect:function(nextValue){onInternalSelect(nextValue);setPickerValue(nextValue);
if(mergedMode!==picker){var decadeYearQueue=["decade","year"],decadeYearMonthQueue=[].concat(decadeYearQueue,["month"]);decadeYearQueue={quarter:[].concat(decadeYearQueue,["quarter"]),week:[].concat((0,_toConsumableArray2.default)(decadeYearMonthQueue),["week"]),date:[].concat((0,_toConsumableArray2.default)(decadeYearMonthQueue),["date"])}[picker]||decadeYearMonthQueue;decadeYearMonthQueue=decadeYearQueue.indexOf(mergedMode);(decadeYearQueue=decadeYearQueue[decadeYearMonthQueue+1])&&triggerModeChange(decadeYearQueue,
nextValue)}},values:mergedValue,cellRender,hoverRangeValue:defaultValue,hoverValue:_props$picker}))))}));require.displayName="PanelPicker";exports.default=require}
//# sourceMappingURL=module$node_modules$rc_picker$lib$PickerPanel$index.js.map
