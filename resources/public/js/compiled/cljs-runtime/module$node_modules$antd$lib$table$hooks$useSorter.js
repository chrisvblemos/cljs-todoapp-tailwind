shadow$provide.module$node_modules$antd$lib$table$hooks$useSorter=function(global,require,module,exports){"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.getSortData=exports.default=void 0;var _toConsumableArray2=module(require("module$node_modules$$babel$runtime$helpers$toConsumableArray")),
React=global(require("module$node_modules$react$index")),_CaretDownOutlined=module(require("module$node_modules$$ant_design$icons$CaretDownOutlined")),_CaretUpOutlined=module(require("module$node_modules$$ant_design$icons$CaretUpOutlined")),_classnames=module(require("module$node_modules$classnames$index")),_KeyCode=module(require("module$node_modules$rc_util$lib$KeyCode")),_tooltip=module(require("module$node_modules$antd$lib$tooltip$index")),_util=require("module$node_modules$antd$lib$table$util");
const getMultiplePriority=column=>"object"===typeof column.sorter&&"number"===typeof column.sorter.multiple?column.sorter.multiple:!1,getSortFunction=sorter=>"function"===typeof sorter?sorter:sorter&&"object"===typeof sorter&&sorter.compare?sorter.compare:!1,collectSortStates=(columns,init,pos)=>{let sortStates=[];const pushState=(column,columnPos)=>{sortStates.push({column,key:(0,_util.getColumnKey)(column,columnPos),multiplePriority:getMultiplePriority(column),sortOrder:column.sortOrder})};(columns||
[]).forEach((column,index)=>{index=(0,_util.getColumnPos)(index,pos);column.children?("sortOrder"in column&&pushState(column,index),sortStates=[].concat((0,_toConsumableArray2.default)(sortStates),(0,_toConsumableArray2.default)(collectSortStates(column.children,init,index)))):column.sorter&&("sortOrder"in column?pushState(column,index):init&&column.defaultSortOrder&&sortStates.push({column,key:(0,_util.getColumnKey)(column,index),multiplePriority:getMultiplePriority(column),sortOrder:column.defaultSortOrder}))});
return sortStates},injectSorter=(prefixCls,columns,sorterStates,triggerSorter,defaultSortDirections,tableLocale,tableShowSorterTooltip,pos)=>(columns||[]).map((column,index)=>{index=(0,_util.getColumnPos)(index,pos);let newColumn=column;if(newColumn.sorter){var sortDirections=newColumn.sortDirections||defaultSortDirections;const showSorterTooltip=void 0===newColumn.showSorterTooltip?tableShowSorterTooltip:newColumn.showSorterTooltip,columnKey=(0,_util.getColumnKey)(newColumn,index);var sorterState=
sorterStates.find(_ref=>{({key:_ref}=_ref);return _ref===columnKey});const sortOrder=sorterState?sorterState.sortOrder:null;var JSCompiler_inline_result=sortOrder?sortDirections[sortDirections.indexOf(sortOrder)+1]:sortDirections[0];let sorter;column.sortIcon?sorter=column.sortIcon({sortOrder}):(sorterState=sortDirections.includes("ascend")&&React.createElement(_CaretUpOutlined.default,{className:(0,_classnames.default)(`${prefixCls}-column-sorter-up`,{active:"ascend"===sortOrder})}),sortDirections=
sortDirections.includes("descend")&&React.createElement(_CaretDownOutlined.default,{className:(0,_classnames.default)(`${prefixCls}-column-sorter-down`,{active:"descend"===sortOrder})}),sorter=React.createElement("span",{className:(0,_classnames.default)(`${prefixCls}-column-sorter`,{[`${prefixCls}-column-sorter-full`]:!(!sorterState||!sortDirections)})},React.createElement("span",{className:`${prefixCls}-column-sorter-inner`,"aria-hidden":"true"},sorterState,sortDirections)));const {cancelSort,triggerAsc,
triggerDesc}=tableLocale||{};sortDirections=cancelSort;"descend"===JSCompiler_inline_result?sortDirections=triggerDesc:"ascend"===JSCompiler_inline_result&&(sortDirections=triggerAsc);const tooltipProps="object"===typeof showSorterTooltip?Object.assign({title:sortDirections},showSorterTooltip):{title:sortDirections};newColumn=Object.assign(Object.assign({},newColumn),{className:(0,_classnames.default)(newColumn.className,{[`${prefixCls}-column-sort`]:sortOrder}),title:renderProps=>{const columnSortersClass=
`${prefixCls}-column-sorters`;renderProps=React.createElement("span",{className:`${prefixCls}-column-title`},(0,_util.renderColumnTitle)(column.title,renderProps));const renderSortTitle=React.createElement("div",{className:columnSortersClass},renderProps,sorter);return showSorterTooltip?"boolean"!==typeof showSorterTooltip&&"sorter-icon"===(null===showSorterTooltip||void 0===showSorterTooltip?void 0:showSorterTooltip.target)?React.createElement("div",{className:`${columnSortersClass} ${prefixCls}-column-sorters-tooltip-target-sorter`},
renderProps,React.createElement(_tooltip.default,Object.assign({},tooltipProps),sorter)):React.createElement(_tooltip.default,Object.assign({},tooltipProps),renderSortTitle):renderSortTitle},onHeaderCell:col=>{var _a;const cell=(null===(_a=column.onHeaderCell)||void 0===_a?void 0:_a.call(column,col))||{},originOnClick=cell.onClick,originOKeyDown=cell.onKeyDown;cell.onClick=event=>{triggerSorter({column,key:columnKey,sortOrder:JSCompiler_inline_result,multiplePriority:getMultiplePriority(column)});
null===originOnClick||void 0===originOnClick?void 0:originOnClick(event)};cell.onKeyDown=event=>{event.keyCode===_KeyCode.default.ENTER&&(triggerSorter({column,key:columnKey,sortOrder:JSCompiler_inline_result,multiplePriority:getMultiplePriority(column)}),null===originOKeyDown||void 0===originOKeyDown?void 0:originOKeyDown(event))};col=(0,_util.safeColumnTitle)(column.title,{});_a=null===col||void 0===col?void 0:col.toString();sortOrder?cell["aria-sort"]="ascend"===sortOrder?"ascending":"descending":
cell["aria-label"]=_a||"";cell.className=(0,_classnames.default)(cell.className,`${prefixCls}-column-has-sorters`);cell.tabIndex=0;column.ellipsis&&(cell.title=(null!==col&&void 0!==col?col:"").toString());return cell}})}"children"in newColumn&&(newColumn=Object.assign(Object.assign({},newColumn),{children:injectSorter(prefixCls,newColumn.children,sorterStates,triggerSorter,defaultSortDirections,tableLocale,tableShowSorterTooltip,index)}));return newColumn}),stateToInfo=sorterState=>{const {column,
sortOrder}=sorterState;return{column,order:sortOrder,field:column.dataIndex,columnKey:column.key}},generateSorterInfo=sorterStates=>{const activeSorters=sorterStates.filter(_ref2=>{({sortOrder:_ref2}=_ref2);return _ref2}).map(stateToInfo);return 0===activeSorters.length&&sorterStates.length?Object.assign(Object.assign({},stateToInfo(sorterStates[sorterStates.length-1])),{column:void 0,order:void 0,field:void 0,columnKey:void 0}):1>=activeSorters.length?activeSorters[0]||{}:activeSorters},getSortData=
(data,sortStates,childrenColumnName)=>{const innerSorterStates=sortStates.slice().sort((a,b)=>b.multiplePriority-a.multiplePriority);data=data.slice();const runningSorters=innerSorterStates.filter(_ref3=>{let {column:{sorter},sortOrder}=_ref3;return getSortFunction(sorter)&&sortOrder});return runningSorters.length?data.sort((record1,record2)=>{for(let i=0;i<runningSorters.length;i+=1){const {column:{sorter},sortOrder}=runningSorters[i];var compareFn=getSortFunction(sorter);if(compareFn&&sortOrder&&
(compareFn=compareFn(record1,record2,sortOrder),0!==compareFn))return"ascend"===sortOrder?compareFn:-compareFn}return 0}).map(record=>{const subRecords=record[childrenColumnName];return subRecords?Object.assign(Object.assign({},record),{[childrenColumnName]:getSortData(subRecords,sortStates,childrenColumnName)}):record}):data};exports.getSortData=getSortData;exports.default=props=>{const {prefixCls,mergedColumns,sortDirections,tableLocale,showSorterTooltip,onSorterChange}=props,[sortStates,setSortStates]=
React.useState(collectSortStates(mergedColumns,!0)),getColumnKeys=(columns,pos)=>{const newKeys=[];columns.forEach((item,index)=>{index=(0,_util.getColumnPos)(index,pos);newKeys.push((0,_util.getColumnKey)(item,index));Array.isArray(item.children)&&(item=getColumnKeys(item.children,index),newKeys.push.apply(newKeys,(0,_toConsumableArray2.default)(item)))});return newKeys},mergedSorterStates=React.useMemo(()=>{function patchStates(state){validate?validateStates.push(state):validateStates.push(Object.assign(Object.assign({},
state),{sortOrder:null}))}let validate=!0;const collectedStates=collectSortStates(mergedColumns,!1);if(!collectedStates.length){const mergedColumnsKeys=getColumnKeys(mergedColumns);return sortStates.filter(_ref4=>{({key:_ref4}=_ref4);return mergedColumnsKeys.includes(_ref4)})}const validateStates=[];let multipleMode=null;collectedStates.forEach(state=>{null===multipleMode?(patchStates(state),state.sortOrder&&(!1===state.multiplePriority?validate=!1:multipleMode=!0)):(multipleMode&&!1!==state.multiplePriority||
(validate=!1),patchStates(state))});return validateStates},[mergedColumns,sortStates]);props=React.useMemo(()=>{var _a,_b;const sortColumns=mergedSorterStates.map(_ref5=>{let {column,sortOrder}=_ref5;return{column,order:sortOrder}});return{sortColumns,sortColumn:null===(_a=sortColumns[0])||void 0===_a?void 0:_a.column,sortOrder:null===(_b=sortColumns[0])||void 0===_b?void 0:_b.order}},[mergedSorterStates]);const triggerSorter=sortState=>{let newSorterStates;newSorterStates=!1!==sortState.multiplePriority&&
mergedSorterStates.length&&!1!==mergedSorterStates[0].multiplePriority?[].concat((0,_toConsumableArray2.default)(mergedSorterStates.filter(_ref6=>{({key:_ref6}=_ref6);return _ref6!==sortState.key})),[sortState]):[sortState];setSortStates(newSorterStates);onSorterChange(generateSorterInfo(newSorterStates),newSorterStates)};return[innerColumns=>injectSorter(prefixCls,innerColumns,mergedSorterStates,triggerSorter,sortDirections,tableLocale,showSorterTooltip),mergedSorterStates,props,()=>generateSorterInfo(mergedSorterStates)]}}
//# sourceMappingURL=module$node_modules$antd$lib$table$hooks$useSorter.js.map
