shadow$provide.module$node_modules$antd$lib$_util$hooks$useClosable=function(global,require,module,exports){function useClosableConfig(closableCollection){const {closable,closeIcon}=closableCollection||{};return _react.default.useMemo(()=>{if(!closable&&(!1===closable||!1===closeIcon||null===closeIcon))return!1;if(void 0===closable&&void 0===closeIcon)return null;let closableConfig={closeIcon:"boolean"!==typeof closeIcon&&null!==closeIcon?closeIcon:void 0};closable&&"object"===typeof closable&&(closableConfig=
Object.assign(Object.assign({},closableConfig),closable));return closableConfig},[closable,closeIcon])}function assignWithoutUndefined(){const target={};for(var _len=arguments.length,objList=Array(_len),_key=0;_key<_len;_key++)objList[_key]=arguments[_key];objList.forEach(obj=>{obj&&Object.keys(obj).forEach(key=>{void 0!==obj[key]&&(target[key]=obj[key])})});return target}"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;Object.defineProperty(exports,
"__esModule",{value:!0});exports.default=function(propCloseCollection,contextCloseCollection){let fallbackCloseCollection=2<arguments.length&&void 0!==arguments[2]?arguments[2]:EmptyFallbackCloseCollection;const propCloseConfig=useClosableConfig(propCloseCollection),contextCloseConfig=useClosableConfig(contextCloseCollection),closeBtnIsDisabled="boolean"!==typeof propCloseConfig?!(null===propCloseConfig||void 0===propCloseConfig||!propCloseConfig.disabled):!1,mergedFallbackCloseCollection=_react.default.useMemo(()=>
Object.assign({closeIcon:_react.default.createElement(_CloseOutlined.default,null)},fallbackCloseCollection),[fallbackCloseCollection]),mergedClosableConfig=_react.default.useMemo(()=>!1===propCloseConfig?!1:propCloseConfig?assignWithoutUndefined(mergedFallbackCloseCollection,contextCloseConfig,propCloseConfig):!1===contextCloseConfig?!1:contextCloseConfig?assignWithoutUndefined(mergedFallbackCloseCollection,contextCloseConfig):mergedFallbackCloseCollection.closable?mergedFallbackCloseCollection:
!1,[propCloseConfig,contextCloseConfig,mergedFallbackCloseCollection]);return _react.default.useMemo(()=>{if(!1===mergedClosableConfig)return[!1,null,closeBtnIsDisabled];var {closeIconRender}=mergedFallbackCloseCollection;const {closeIcon}=mergedClosableConfig;let mergedCloseIcon=closeIcon;null!==mergedCloseIcon&&void 0!==mergedCloseIcon&&(closeIconRender&&(mergedCloseIcon=closeIconRender(closeIcon)),closeIconRender=(0,_pickAttrs.default)(mergedClosableConfig,!0),Object.keys(closeIconRender).length&&
(mergedCloseIcon=_react.default.isValidElement(mergedCloseIcon)?_react.default.cloneElement(mergedCloseIcon,closeIconRender):_react.default.createElement("span",Object.assign({},closeIconRender),mergedCloseIcon)));return[!0,mergedCloseIcon,closeBtnIsDisabled]},[mergedClosableConfig,mergedFallbackCloseCollection])};exports.pickClosable=function(context){if(context)return{closable:context.closable,closeIcon:context.closeIcon}};var _react=global(require("module$node_modules$react$index")),_CloseOutlined=
global(require("module$node_modules$$ant_design$icons$CloseOutlined")),_pickAttrs=global(require("module$node_modules$rc_util$lib$pickAttrs"));const EmptyFallbackCloseCollection={}}
//# sourceMappingURL=module$node_modules$antd$lib$_util$hooks$useClosable.js.map
