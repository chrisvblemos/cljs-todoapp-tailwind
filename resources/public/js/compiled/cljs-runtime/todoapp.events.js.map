{"version":3,"sources":["todoapp/events.cljs"],"mappings":";AAMA,yDAAA,zDAACA,2JAEA,WAAKC,EAAEA;AAAP,AACEC;;AAEH,yDAAA,zDAACF,sHAEA,cAAAG,HAAKG;AAAL,AAAA,IAAAF,aAAAD;QAAA,AAAAE,4CAAAD,WAAA,IAAA,/DAASH;gBAAT,AAAAI,4CAAAD,WAAA,IAAA,vEAAWG;uBAAX,AAAAF,4CAAAD,WAAA,IAAA,9EAAqBI;oBAArB,AAAAH,4CAAAD,WAAA,IAAA,3EAAsCK;AAAtC,AACE,IAAMC,QAAM,AAAA,sFAAQJ;IACdK,OAAK,AAACC,oCAA4BF;IAClCG,cAAY,4CAAKF;AAFvB,AAGE,6BAAA,mFAAA,4EAAA,2CAAA,8DAAA,+DAAA,qFAAA,0EAAA,6DAAA,zjBAACG,mBAASR,8IAAWO,iHAAkBA,iEACEN,8EACOC,6EACHC;;AAGlD,yDAAA,zDAACT,qIAEA,cAAAe,HAAKT;AAAL,AAAA,IAAAU,aAAAD;QAAA,AAAAV,4CAAAW,WAAA,IAAA,/DAASf;WAAT,AAAAI,4CAAAW,WAAA,IAAA,lEAAWL;AAAX,AACE,4DAAA,mFAAA,xIAACM,kDAAUX,sJAAYY,iBAAOP;;AAEjC,yDAAA,zDAACX,wIAEA,cAAAmB,HAAKb;AAAL,AAAA,IAAAc,aAAAD;QAAA,AAAAd,4CAAAe,WAAA,IAAA,/DAASnB;WAAT,AAAAI,4CAAAe,WAAA,IAAA,lEAAWT;YAAX,AAAAN,4CAAAe,WAAA,IAAA,nEAAgBC;AAAhB,AACE,4DAAA,mFAAA,6DAAA,rMAACJ,kDAAUX,8IAAWK,0EAAgB,AAACW,qBAAWD;;AAErD,uBAAA,vBAACE,2EAEA,WAAKC,KAAKvB;AAAV,AACE,0DAAA,nDAACwB,8CAAMD,yDAAU,KAAAE","names":["re_frame.core.reg_event_db","_","todoapp.db/default-db","p__12404","vec__12405","cljs.core.nth","db","task-name","task-description","task-deadline","tasks","uuid","todoapp.utils/safe-random-task-uuid","uuid-string","cljs.core/assoc-in","p__12412","vec__12413","cljs.core.update_in","cljs.core/dissoc","p__12416","vec__12417","value","cljs.core/constantly","re-frame.core/reg-cofx","cofx","cljs.core.assoc","js/Date"],"sourcesContent":["(ns todoapp.events\n  (:require\n   [re-frame.core :as re-frame]\n   [todoapp.db :as db]\n   [todoapp.utils :as utils]))\n\n(re-frame/reg-event-db\n ::initialize-db\n (fn [_ _]\n   db/default-db))\n\n(re-frame/reg-event-db\n :add-task\n (fn [db [_ task-name task-description task-deadline]]\n   (let [tasks (:tasks db)\n         uuid (utils/safe-random-task-uuid tasks)\n         uuid-string (str uuid)]\n     (assoc-in db [:tasks uuid-string] {:id uuid-string\n                                        :name task-name\n                                        :description task-description\n                                        :deadline task-deadline\n                                        :is-done? false}))))\n\n(re-frame/reg-event-db\n :remove-task-uuid\n (fn [db [_ uuid]]\n   (update-in db [:tasks] dissoc uuid)))\n\n(re-frame/reg-event-db\n :set-task-is-done?\n (fn [db [_ uuid value]]\n   (update-in db [:tasks uuid :is-done?] (constantly value))))\n\n(re-frame/reg-cofx\n :now\n (fn [cofx _]\n   (assoc cofx :now (js/Date.))))\n\n"]}