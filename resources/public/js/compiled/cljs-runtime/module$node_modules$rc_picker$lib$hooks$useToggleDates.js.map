{
"version":3,
"file":"module$node_modules$rc_picker$lib$hooks$useToggleDates.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,sDAAA,CAA2E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG/GC,MAAAA,CAAyBH,OAAA,CAAQ,kEAAR,CAAwDI,CAAAA,OACrFC,OAAOC,CAAAA,cAAP,CAAsBJ,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CK,MAAO,CAAA,CADoC,CAA7C,CAGAL,QAAQE,CAAAA,OAAR,CAQAI,QAAuB,CAACC,cAAD,CAAiBC,MAAjB,CAAyBC,SAAzB,CAAoC,CAYzD,MAXAC,SAAoB,CAACC,IAAD,CAAOC,MAAP,CAAe,CACjC,IAAIC,MAAQF,IAAKG,CAAAA,SAAL,CAAe,QAAS,CAACC,IAAD,CAAO,CACzC,MAAO,GAAIC,SAAUC,CAAAA,MAAd,EAAsBV,cAAtB,CAAsCC,MAAtC,CAA8CO,IAA9C,CAAoDH,MAApD,CAA4DH,SAA5D,CADkC,CAA/B,CAGZ,IAAc,CAAC,CAAf,GAAII,KAAJ,CACE,MAAO,EAAGK,CAAAA,MAAH,CAAU,GAAIC,mBAAoBjB,CAAAA,OAAxB,EAAiCS,IAAjC,CAAV;AAAkD,CAACC,MAAD,CAAlD,CAELQ,KAAAA,CAAY,GAAID,mBAAoBjB,CAAAA,OAAxB,EAAiCS,IAAjC,CAChBS,KAAUC,CAAAA,MAAV,CAAiBR,KAAjB,CAAwB,CAAxB,CACA,OAAOO,KAT0B,CADsB,CAP3D,KAAID,oBAAsBlB,MAAA,CAAuBH,OAAA,CAAQ,8DAAR,CAAvB,CAA1B,CACIkB,UAAYlB,OAAA,CAAQ,kDAAR,CATmG;",
"sources":["node_modules/rc-picker/lib/hooks/useToggleDates.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rc_picker$lib$hooks$useToggleDates\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useToggleDates;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _dateUtil = require(\"../utils/dateUtil\");\n/**\n * Toggles the presence of a value in an array.\n * If the value exists in the array, removed it.\n * Else add it.\n */\nfunction useToggleDates(generateConfig, locale, panelMode) {\n  function toggleDates(list, target) {\n    var index = list.findIndex(function (date) {\n      return (0, _dateUtil.isSame)(generateConfig, locale, date, target, panelMode);\n    });\n    if (index === -1) {\n      return [].concat((0, _toConsumableArray2.default)(list), [target]);\n    }\n    var sliceList = (0, _toConsumableArray2.default)(list);\n    sliceList.splice(index, 1);\n    return sliceList;\n  }\n  return toggleDates;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","default","Object","defineProperty","value","useToggleDates","generateConfig","locale","panelMode","toggleDates","list","target","index","findIndex","date","_dateUtil","isSame","concat","_toConsumableArray2","sliceList","splice"]
}
