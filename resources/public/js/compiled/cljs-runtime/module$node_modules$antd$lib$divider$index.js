shadow$provide.module$node_modules$antd$lib$divider$index=function(global,require,module,exports){"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var React=module(require("module$node_modules$react$index")),_classnames=global(require("module$node_modules$classnames$index")),
_warning=require("module$node_modules$antd$lib$_util$warning"),_configProvider=require("module$node_modules$antd$lib$config_provider$index"),_style=global(require("module$node_modules$antd$lib$divider$style$index")),__rest=function(s,e){var t={},p;for(p in s)Object.prototype.hasOwnProperty.call(s,p)&&0>e.indexOf(p)&&(t[p]=s[p]);if(null!=s&&"function"===typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)0>e.indexOf(p[i])&&Object.prototype.propertyIsEnumerable.call(s,
p[i])&&(t[p[i]]=s[p[i]])}return t};require=props=>{const {getPrefixCls,direction,divider}=React.useContext(_configProvider.ConfigContext),{prefixCls:customizePrefixCls,type="horizontal",orientation="center",orientationMargin,className,rootClassName,children,dashed,variant="solid",plain,style}=props;props=__rest(props,"prefixCls type orientation orientationMargin className rootClassName children dashed variant plain style".split(" "));const prefixCls=getPrefixCls("divider",customizePrefixCls),[wrapCSSVar,
hashId,cssVarCls]=(0,_style.default)(prefixCls);var hasChildren=!!children,hasCustomMarginLeft="left"===orientation&&null!=orientationMargin;const hasCustomMarginRight="right"===orientation&&null!=orientationMargin;hasChildren=(0,_classnames.default)(prefixCls,null===divider||void 0===divider?void 0:divider.className,hashId,cssVarCls,`${prefixCls}-${type}`,{[`${prefixCls}-with-text`]:hasChildren,[`${prefixCls}-with-text-${orientation}`]:hasChildren,[`${prefixCls}-dashed`]:!!dashed,[`${prefixCls}-${variant}`]:"solid"!==
variant,[`${prefixCls}-plain`]:!!plain,[`${prefixCls}-rtl`]:"rtl"===direction,[`${prefixCls}-no-default-orientation-margin-left`]:hasCustomMarginLeft,[`${prefixCls}-no-default-orientation-margin-right`]:hasCustomMarginRight},className,rootClassName);const memoizedOrientationMargin=React.useMemo(()=>"number"===typeof orientationMargin?orientationMargin:/^\d+$/.test(orientationMargin)?Number(orientationMargin):orientationMargin,[orientationMargin]);hasCustomMarginLeft=Object.assign(Object.assign({},
hasCustomMarginLeft&&{marginLeft:memoizedOrientationMargin}),hasCustomMarginRight&&{marginRight:memoizedOrientationMargin});(0,_warning.devUseWarning)("Divider")(!children||"vertical"!==type,"usage","`children` not working in `vertical` mode.");return wrapCSSVar(React.createElement("div",Object.assign({className:hasChildren,style:Object.assign(Object.assign({},null===divider||void 0===divider?void 0:divider.style),style)},props,{role:"separator"}),children&&"vertical"!==type&&React.createElement("span",
{className:`${prefixCls}-inner-text`,style:hasCustomMarginLeft},children)))};require.displayName="Divider";exports.default=require}
//# sourceMappingURL=module$node_modules$antd$lib$divider$index.js.map
