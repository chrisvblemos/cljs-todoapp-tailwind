shadow$provide.module$node_modules$antd$lib$transfer$ListBody=function(global,require,module,exports){"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=exports.OmitProps=void 0;var React=module(require("module$node_modules$react$index")),_classnames=global(require("module$node_modules$classnames$index")),
_useMergedState=global(require("module$node_modules$rc_util$lib$hooks$useMergedState")),_pagination=global(require("module$node_modules$antd$lib$pagination$index")),_ListItem=global(require("module$node_modules$antd$lib$transfer$ListItem"));exports.OmitProps=["handleFilter","handleClear","checkedKeys"];require=(props,ref)=>{const {prefixCls,filteredRenderItems,selectedKeys,disabled:globalDisabled,showRemove,pagination,onScroll,onItemSelect,onItemRemove}=props,[current,setCurrent]=React.useState(1),
mergedPagination=React.useMemo(()=>{if(!pagination)return null;const convertPagination="object"===typeof pagination?pagination:{};return Object.assign(Object.assign({},{simple:!0,showSizeChanger:!1,showLessItems:!1}),convertPagination)},[pagination]),[pageSize,setPageSize]=(0,_useMergedState.default)(10,{value:null===mergedPagination||void 0===mergedPagination?void 0:mergedPagination.pageSize});React.useEffect(()=>{mergedPagination&&setCurrent(Math.min(current,Math.ceil(filteredRenderItems.length/
pageSize)))},[filteredRenderItems,mergedPagination,pageSize]);const onInternalClick=(item,e)=>{onItemSelect(item.key,!selectedKeys.includes(item.key),e)},onRemove=item=>{null===onItemRemove||void 0===onItemRemove?void 0:onItemRemove([item.key])};props=cur=>{setCurrent(cur)};const onSizeChange=(cur,size)=>{setCurrent(cur);setPageSize(size)},memoizedItems=React.useMemo(()=>mergedPagination?filteredRenderItems.slice((current-1)*pageSize,current*pageSize):filteredRenderItems,[current,filteredRenderItems,
mergedPagination,pageSize]);React.useImperativeHandle(ref,()=>({items:memoizedItems}));ref=mergedPagination?React.createElement(_pagination.default,{size:"small",disabled:globalDisabled,simple:mergedPagination.simple,pageSize,showLessItems:mergedPagination.showLessItems,showSizeChanger:mergedPagination.showSizeChanger,className:`${prefixCls}-pagination`,total:filteredRenderItems.length,current,onChange:props,onShowSizeChange:onSizeChange}):null;props=(0,_classnames.default)(`${prefixCls}-content`,
{[`${prefixCls}-content-show-remove`]:showRemove});return React.createElement(React.Fragment,null,React.createElement("ul",{className:props,onScroll},(memoizedItems||[]).map(_ref=>{let {renderedEl,renderedText,item}=_ref;return React.createElement(_ListItem.default,{key:item.key,item,renderedText,renderedEl,prefixCls,showRemove,onClick:onInternalClick,onRemove,checked:selectedKeys.includes(item.key),disabled:globalDisabled||item.disabled})})),ref)};require.displayName="TransferListBody";exports.default=
React.forwardRef(require)}
//# sourceMappingURL=module$node_modules$antd$lib$transfer$ListBody.js.map
