{
"version":3,
"file":"module$node_modules$antd$lib$space$style$index.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAA,8CAAA,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGvGC,MAAAA,CAAyBH,OAAA,CAAQ,kEAAR,CAAwDI,CAAAA,OACrFC,OAAOC,CAAAA,cAAP,CAAsBJ,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CK,MAAO,CAAA,CADoC,CAA7C,CAGAL,QAAQM,CAAAA,qBAAR,CAAgCN,OAAQE,CAAAA,OAAxC,CAAkD,IAAK,EACvD,KAAIK,UAAYT,OAAA,CAAQ,6CAAR,CAAhB,CACIU,SAAWP,MAAA,CAAuBH,OAAA,CAAQ,kDAAR,CAAvB,CAqEfE,QAAQM,CAAAA,qBAAR,CAD8B,EAAAA,EAAO,IAEtBN,QAAQE,CAAAA,OAAR;AAAkB,GAAIK,SAAUE,CAAAA,aAAd,EAA6B,OAA7B,CAAsCC,KAAA,EAAS,CACxEC,KAAAA,CAAa,GAAIJ,SAAUK,CAAAA,UAAd,EAA0BF,KAA1B,CAAiC,CAClDG,kBAAmBH,KAAMI,CAAAA,SADyB,CAElDC,mBAAoBL,KAAMM,CAAAA,OAFwB,CAGlDC,kBAAmBP,KAAMQ,CAAAA,SAHyB,CAAjC,CArEnB,OAAM,CACJC,YADI,CAEJC,MAFI,CAAA,CA0EgBT,KAtEtB,KAAA,yBAAO,CACL,CAACQ,YAAD,EAAgB,CACdE,QAAS,aADK,CAEd,WAAS,CACPC,UAAW,KADJ,CAFK,CAKd,gBAAc,CACZC,cAAe,QADH,CALA,CAQd,aAAW,CACTA,cAAe,QADN,CAET,cAAY,CACVC,WAAY,QADF,CAFH,CAKT,aAAW,CACTA,WAAY,YADH,CALF,CAQT,WAAS,CACPA,WAAY,UADL,CARA;AAWT,gBAAc,CACZA,WAAY,UADA,CAXL,CARG,CAuBd,CAAE,GAAEL,YAAF,aAAF,EAAgC,CAC9BE,QAAS,MADqB,CAvBlB,CA2Bd,CAAE,GAAEF,YAAF,WAAyBC,MAAzB,iCAAF,EAAqE,CACnEC,QAAS,OAD0D,CA3BvD,CADX,CAmCP,OAAM,CACJ,aAAAF,qBADI,CAAA,CAmC8CR,KAApD,OAAO,CAAC,wBAAD,CAhCA,CACL,CAACQ,qBAAD,EAAgB,CACd,qBAAmB,CACjBM,OA6B8Cd,KA7BhCE,CAAAA,iBADG,CADL,CAId,sBAAoB,CAClBY,OA0B8Cd,KA1BhCI,CAAAA,kBADI,CAJN,CAOd,qBAAmB,CACjBU,OAuB8Cd,KAvBhCM,CAAAA,iBADG,CAPL,CAUd,qBAAmB,CACjBS,UAoB8Cf,KApB7BE,CAAAA,iBADA,CAVL;AAad,sBAAoB,CAClBa,UAiB8Cf,KAjB7BI,CAAAA,kBADC,CAbN,CAgBd,qBAAmB,CACjBW,UAc8Cf,KAd7BM,CAAAA,iBADA,CAhBL,CADX,CAgCA,CAA0D,GAAIT,QAASN,CAAAA,OAAb,EAAsBS,KAAtB,CAA1D,CANuE,CAA/C,CAO9B,EAAA,EAAO,IAPuB,CAOlB,CAGbgB,WAAY,CAAA,CAHC,CAPkB,CA/E0E;",
"sources":["node_modules/antd/lib/space/style/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$lib$space$style$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.prepareComponentToken = exports.default = void 0;\nvar _internal = require(\"../../theme/internal\");\nvar _compact = _interopRequireDefault(require(\"./compact\"));\nconst genSpaceStyle = token => {\n  const {\n    componentCls,\n    antCls\n  } = token;\n  return {\n    [componentCls]: {\n      display: 'inline-flex',\n      '&-rtl': {\n        direction: 'rtl'\n      },\n      '&-vertical': {\n        flexDirection: 'column'\n      },\n      '&-align': {\n        flexDirection: 'column',\n        '&-center': {\n          alignItems: 'center'\n        },\n        '&-start': {\n          alignItems: 'flex-start'\n        },\n        '&-end': {\n          alignItems: 'flex-end'\n        },\n        '&-baseline': {\n          alignItems: 'baseline'\n        }\n      },\n      [`${componentCls}-item:empty`]: {\n        display: 'none'\n      },\n      // https://github.com/ant-design/ant-design/issues/47875\n      [`${componentCls}-item > ${antCls}-badge-not-a-wrapper:only-child`]: {\n        display: 'block'\n      }\n    }\n  };\n};\nconst genSpaceGapStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [componentCls]: {\n      '&-gap-row-small': {\n        rowGap: token.spaceGapSmallSize\n      },\n      '&-gap-row-middle': {\n        rowGap: token.spaceGapMiddleSize\n      },\n      '&-gap-row-large': {\n        rowGap: token.spaceGapLargeSize\n      },\n      '&-gap-col-small': {\n        columnGap: token.spaceGapSmallSize\n      },\n      '&-gap-col-middle': {\n        columnGap: token.spaceGapMiddleSize\n      },\n      '&-gap-col-large': {\n        columnGap: token.spaceGapLargeSize\n      }\n    }\n  };\n};\n// ============================== Export ==============================\nconst prepareComponentToken = () => ({});\nexports.prepareComponentToken = prepareComponentToken;\nvar _default = exports.default = (0, _internal.genStyleHooks)('Space', token => {\n  const spaceToken = (0, _internal.mergeToken)(token, {\n    spaceGapSmallSize: token.paddingXS,\n    spaceGapMiddleSize: token.padding,\n    spaceGapLargeSize: token.paddingLG\n  });\n  return [genSpaceStyle(spaceToken), genSpaceGapStyle(spaceToken), (0, _compact.default)(spaceToken)];\n}, () => ({}), {\n  // Space component don't apply extra font style\n  // https://github.com/ant-design/ant-design/issues/40315\n  resetStyle: false\n});\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","default","Object","defineProperty","value","prepareComponentToken","_internal","_compact","genStyleHooks","token","spaceToken","mergeToken","spaceGapSmallSize","paddingXS","spaceGapMiddleSize","padding","spaceGapLargeSize","paddingLG","componentCls","antCls","display","direction","flexDirection","alignItems","rowGap","columnGap","resetStyle"]
}
