{
"version":3,
"file":"module$node_modules$antd$lib$color_picker$components$PanelPicker$GradientColorBar.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/antd/lib/color-picker/components/PanelPicker/GradientColorBar.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$lib$color_picker$components$PanelPicker$GradientColorBar\"] = function(global,require,module,exports) {\n\"use strict\";\n\"use client\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _color = require(\"../../color\");\nvar _util = require(\"../../util\");\nvar _ColorSlider = require(\"../ColorSlider\");\nfunction sortColors(colors) {\n  return (0, _toConsumableArray2.default)(colors).sort((a, b) => a.percent - b.percent);\n}\n/**\n * GradientColorBar will auto show when the mode is `gradient`.\n */\nconst GradientColorBar = props => {\n  const {\n    prefixCls,\n    mode,\n    onChange,\n    onChangeComplete,\n    onActive,\n    activeIndex,\n    onGradientDragging,\n    colors\n  } = props;\n  const isGradient = mode === 'gradient';\n  // ============================= Colors =============================\n  const colorList = React.useMemo(() => colors.map(info => ({\n    percent: info.percent,\n    color: info.color.toRgbString()\n  })), [colors]);\n  const values = React.useMemo(() => colorList.map(info => info.percent), [colorList]);\n  // ============================== Drag ==============================\n  const colorsRef = React.useRef(colorList);\n  // Record current colors\n  const onDragStart = _ref => {\n    let {\n      rawValues,\n      draggingIndex,\n      draggingValue\n    } = _ref;\n    if (rawValues.length > colorList.length) {\n      // Add new node\n      const newPointColor = (0, _util.getGradientPercentColor)(colorList, draggingValue);\n      const nextColors = (0, _toConsumableArray2.default)(colorList);\n      nextColors.splice(draggingIndex, 0, {\n        percent: draggingValue,\n        color: newPointColor\n      });\n      colorsRef.current = nextColors;\n    } else {\n      colorsRef.current = colorList;\n    }\n    onGradientDragging(true);\n    onChange(new _color.AggregationColor(sortColors(colorsRef.current)), true);\n  };\n  // Adjust color when dragging\n  const onDragChange = _ref2 => {\n    let {\n      deleteIndex,\n      draggingIndex,\n      draggingValue\n    } = _ref2;\n    let nextColors = (0, _toConsumableArray2.default)(colorsRef.current);\n    if (deleteIndex !== -1) {\n      nextColors.splice(deleteIndex, 1);\n    } else {\n      nextColors[draggingIndex] = Object.assign(Object.assign({}, nextColors[draggingIndex]), {\n        percent: draggingValue\n      });\n      nextColors = sortColors(nextColors);\n    }\n    onChange(new _color.AggregationColor(nextColors), true);\n  };\n  // ============================== Key ===============================\n  const onKeyDelete = index => {\n    const nextColors = (0, _toConsumableArray2.default)(colorList);\n    nextColors.splice(index, 1);\n    const nextColor = new _color.AggregationColor(nextColors);\n    onChange(nextColor);\n    onChangeComplete(nextColor);\n  };\n  // ============================= Change =============================\n  const onInternalChangeComplete = nextValues => {\n    onChangeComplete(new _color.AggregationColor(colorList));\n    // Reset `activeIndex` if out of range\n    if (activeIndex >= nextValues.length) {\n      onActive(nextValues.length - 1);\n    }\n    onGradientDragging(false);\n  };\n  // ============================= Render =============================\n  if (!isGradient) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(_ColorSlider.GradientColorSlider, {\n    min: 0,\n    max: 100,\n    prefixCls: prefixCls,\n    className: `${prefixCls}-gradient-slider`,\n    colors: colorList,\n    color: null,\n    value: values,\n    range: true,\n    onChangeComplete: onInternalChangeComplete,\n    disabled: false,\n    type: \"gradient\",\n    // Active\n    activeIndex: activeIndex,\n    onActive: onActive,\n    // Drag\n    onDragStart: onDragStart,\n    onDragChange: onDragChange,\n    onKeyDelete: onKeyDelete\n  });\n};\nvar _default = exports.default = /*#__PURE__*/React.memo(GradientColorBar);\n};"],
"names":["shadow$provide","global","require","module","exports","sortColors","colors","_toConsumableArray2","default","sort","a","b","percent","_interopRequireWildcard","_interopRequireDefault","Object","defineProperty","value","React","_color","_util","_ColorSlider","memo","props","GradientColorBar","prefixCls","mode","onChange","onChangeComplete","onActive","activeIndex","onGradientDragging","isGradient","colorList","useMemo","map","info","color","toRgbString","values","colorsRef","useRef","createElement","GradientColorSlider","min","max","className","range","nextValues","onInternalChangeComplete","AggregationColor","length","disabled","type","onDragStart","_ref","rawValues","draggingIndex","draggingValue","newPointColor","getGradientPercentColor","nextColors","splice","current","onDragChange","_ref2","deleteIndex","assign","onKeyDelete","index","nextColor"]
}
