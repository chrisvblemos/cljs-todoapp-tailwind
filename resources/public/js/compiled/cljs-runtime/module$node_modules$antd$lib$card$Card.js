shadow$provide.module$node_modules$antd$lib$card$Card=function(global,require,module,exports){"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var React=module(require("module$node_modules$react$index")),_classnames=global(require("module$node_modules$classnames$index")),_omit=
global(require("module$node_modules$rc_util$lib$omit")),_warning=require("module$node_modules$antd$lib$_util$warning"),_configProvider=require("module$node_modules$antd$lib$config_provider$index"),_useSize=global(require("module$node_modules$antd$lib$config_provider$hooks$useSize")),_skeleton=global(require("module$node_modules$antd$lib$skeleton$index")),_tabs=global(require("module$node_modules$antd$lib$tabs$index")),_Grid=global(require("module$node_modules$antd$lib$card$Grid")),_style=global(require("module$node_modules$antd$lib$card$style$index")),
__rest=function(s,e){var t={},p;for(p in s)Object.prototype.hasOwnProperty.call(s,p)&&0>e.indexOf(p)&&(t[p]=s[p]);if(null!=s&&"function"===typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)0>e.indexOf(p[i])&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};const ActionNode=props=>{const {actionClasses,actions=[],actionStyle}=props;return React.createElement("ul",{className:actionClasses,style:actionStyle},actions.map((action,
index)=>React.createElement("li",{style:{width:`${100/actions.length}%`},key:`action-${index}`},React.createElement("span",null,action))))};require=React.forwardRef((props,ref)=>{const {prefixCls:customizePrefixCls,className,rootClassName,style,extra,headStyle={},bodyStyle={},title,loading,bordered=!0,size:customizeSize,type,cover,actions,tabList,children,activeTabKey,defaultActiveTabKey,tabBarExtraContent,hoverable,tabProps={},classNames:customClassNames,styles:customStyles}=props;var others=__rest(props,
"prefixCls className rootClassName style extra headStyle bodyStyle title loading bordered size type cover actions tabList children activeTabKey defaultActiveTabKey tabBarExtraContent hoverable tabProps classNames styles".split(" "));const {getPrefixCls,direction,card}=React.useContext(_configProvider.ConfigContext),warning=(0,_warning.devUseWarning)("Card");[["headStyle","styles.header"],["bodyStyle","styles.body"]].forEach(_ref=>{let [deprecatedName,newName]=_ref;warning.deprecated(!(deprecatedName in
props),deprecatedName,newName)});var onTabChange=key=>{var _a;null===(_a=props.onTabChange)||void 0===_a?void 0:_a.call(props,key)},moduleClass=moduleName=>{var _a;return(0,_classnames.default)(null===(_a=null===card||void 0===card?void 0:card.classNames)||void 0===_a?void 0:_a[moduleName],null===customClassNames||void 0===customClassNames?void 0:customClassNames[moduleName])},moduleStyle=moduleName=>{var _a;return Object.assign(Object.assign({},null===(_a=null===card||void 0===card?void 0:card.styles)||
void 0===_a?void 0:_a[moduleName]),null===customStyles||void 0===customStyles?void 0:customStyles[moduleName])},isContainGrid=React.useMemo(()=>{let containGrid=!1;React.Children.forEach(children,element=>{(null===element||void 0===element?void 0:element.type)===_Grid.default&&(containGrid=!0)});return containGrid},[children]),prefixCls=getPrefixCls("card",customizePrefixCls);const [wrapCSSVar,hashId,cssVarCls]=(0,_style.default)(prefixCls);var loadingBlock=React.createElement(_skeleton.default,{loading:!0,
active:!0,paragraph:{rows:4},title:!1},children),hasActiveTabKey=void 0!==activeTabKey,extraProps=Object.assign(Object.assign({},tabProps),{[hasActiveTabKey?"activeKey":"defaultActiveKey"]:hasActiveTabKey?activeTabKey:defaultActiveTabKey,tabBarExtraContent});hasActiveTabKey=(0,_useSize.default)(customizeSize);onTabChange=tabList?React.createElement(_tabs.default,Object.assign({size:hasActiveTabKey&&"default"!==hasActiveTabKey?hasActiveTabKey:"large"},extraProps,{className:`${prefixCls}-head-tabs`,
onChange:onTabChange,items:tabList.map(_a=>{var {tab}=_a;_a=__rest(_a,["tab"]);return Object.assign({label:tab},_a)})})):null;if(title||extra||onTabChange){var head=(0,_classnames.default)(`${prefixCls}-head`,moduleClass("header"));extraProps=(0,_classnames.default)(`${prefixCls}-head-title`,moduleClass("title"));var extraClasses=(0,_classnames.default)(`${prefixCls}-extra`,moduleClass("extra"));const mergedHeadStyle=Object.assign(Object.assign({},headStyle),moduleStyle("header"));head=React.createElement("div",
{className:head,style:mergedHeadStyle},React.createElement("div",{className:`${prefixCls}-head-wrapper`},title&&React.createElement("div",{className:extraProps,style:moduleStyle("title")},title),extra&&React.createElement("div",{className:extraClasses,style:moduleStyle("extra")},extra)),onTabChange)}onTabChange=(0,_classnames.default)(`${prefixCls}-cover`,moduleClass("cover"));onTabChange=cover?React.createElement("div",{className:onTabChange,style:moduleStyle("cover")},cover):null;extraProps=(0,_classnames.default)(`${prefixCls}-body`,
moduleClass("body"));extraClasses=Object.assign(Object.assign({},bodyStyle),moduleStyle("body"));loadingBlock=React.createElement("div",{className:extraProps,style:extraClasses},loading?loadingBlock:children);moduleClass=(0,_classnames.default)(`${prefixCls}-actions`,moduleClass("actions"));moduleStyle=(null===actions||void 0===actions?0:actions.length)?React.createElement(ActionNode,{actionClasses:moduleClass,actionStyle:moduleStyle("actions"),actions}):null;others=(0,_omit.default)(others,["onTabChange"]);
isContainGrid=(0,_classnames.default)(prefixCls,null===card||void 0===card?void 0:card.className,{[`${prefixCls}-loading`]:loading,[`${prefixCls}-bordered`]:bordered,[`${prefixCls}-hoverable`]:hoverable,[`${prefixCls}-contain-grid`]:isContainGrid,[`${prefixCls}-contain-tabs`]:null===tabList||void 0===tabList?void 0:tabList.length,[`${prefixCls}-${hasActiveTabKey}`]:hasActiveTabKey,[`${prefixCls}-type-${type}`]:!!type,[`${prefixCls}-rtl`]:"rtl"===direction},className,rootClassName,hashId,cssVarCls);
prefixCls=Object.assign(Object.assign({},null===card||void 0===card?void 0:card.style),style);return wrapCSSVar(React.createElement("div",Object.assign({ref},others,{className:isContainGrid,style:prefixCls}),head,onTabChange,loadingBlock,moduleStyle))});exports.default=require}
//# sourceMappingURL=module$node_modules$antd$lib$card$Card.js.map
