{
"version":3,
"file":"module$node_modules$rc_image$lib$hooks$useTouchEvent.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/rc-image/lib/hooks/useTouchEvent.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rc_image$lib$hooks$useTouchEvent\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useTouchEvent;\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _addEventListener = _interopRequireDefault(require(\"rc-util/lib/Dom/addEventListener\"));\nvar _react = require(\"react\");\nvar _getFixScaleEleTransPosition = _interopRequireDefault(require(\"../getFixScaleEleTransPosition\"));\nfunction getDistance(a, b) {\n  var x = a.x - b.x;\n  var y = a.y - b.y;\n  return Math.hypot(x, y);\n}\nfunction getCenter(oldPoint1, oldPoint2, newPoint1, newPoint2) {\n  // Calculate the distance each point has moved\n  var distance1 = getDistance(oldPoint1, newPoint1);\n  var distance2 = getDistance(oldPoint2, newPoint2);\n\n  // If both distances are 0, return the original points\n  if (distance1 === 0 && distance2 === 0) {\n    return [oldPoint1.x, oldPoint1.y];\n  }\n\n  // Calculate the ratio of the distances\n  var ratio = distance1 / (distance1 + distance2);\n\n  // Calculate the new center point based on the ratio\n  var x = oldPoint1.x + ratio * (oldPoint2.x - oldPoint1.x);\n  var y = oldPoint1.y + ratio * (oldPoint2.y - oldPoint1.y);\n  return [x, y];\n}\nfunction useTouchEvent(imgRef, movable, visible, minScale, transform, updateTransform, dispatchZoomChange) {\n  var rotate = transform.rotate,\n    scale = transform.scale,\n    x = transform.x,\n    y = transform.y;\n  var _useState = (0, _react.useState)(false),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    isTouching = _useState2[0],\n    setIsTouching = _useState2[1];\n  var touchPointInfo = (0, _react.useRef)({\n    point1: {\n      x: 0,\n      y: 0\n    },\n    point2: {\n      x: 0,\n      y: 0\n    },\n    eventType: 'none'\n  });\n  var updateTouchPointInfo = function updateTouchPointInfo(values) {\n    touchPointInfo.current = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, touchPointInfo.current), values);\n  };\n  var onTouchStart = function onTouchStart(event) {\n    if (!movable) return;\n    event.stopPropagation();\n    setIsTouching(true);\n    var _event$touches = event.touches,\n      touches = _event$touches === void 0 ? [] : _event$touches;\n    if (touches.length > 1) {\n      // touch zoom\n      updateTouchPointInfo({\n        point1: {\n          x: touches[0].clientX,\n          y: touches[0].clientY\n        },\n        point2: {\n          x: touches[1].clientX,\n          y: touches[1].clientY\n        },\n        eventType: 'touchZoom'\n      });\n    } else {\n      // touch move\n      updateTouchPointInfo({\n        point1: {\n          x: touches[0].clientX - x,\n          y: touches[0].clientY - y\n        },\n        eventType: 'move'\n      });\n    }\n  };\n  var onTouchMove = function onTouchMove(event) {\n    var _event$touches2 = event.touches,\n      touches = _event$touches2 === void 0 ? [] : _event$touches2;\n    var _touchPointInfo$curre = touchPointInfo.current,\n      point1 = _touchPointInfo$curre.point1,\n      point2 = _touchPointInfo$curre.point2,\n      eventType = _touchPointInfo$curre.eventType;\n    if (touches.length > 1 && eventType === 'touchZoom') {\n      // touch zoom\n      var newPoint1 = {\n        x: touches[0].clientX,\n        y: touches[0].clientY\n      };\n      var newPoint2 = {\n        x: touches[1].clientX,\n        y: touches[1].clientY\n      };\n      var _getCenter = getCenter(point1, point2, newPoint1, newPoint2),\n        _getCenter2 = (0, _slicedToArray2.default)(_getCenter, 2),\n        centerX = _getCenter2[0],\n        centerY = _getCenter2[1];\n      var ratio = getDistance(newPoint1, newPoint2) / getDistance(point1, point2);\n      dispatchZoomChange(ratio, 'touchZoom', centerX, centerY, true);\n      updateTouchPointInfo({\n        point1: newPoint1,\n        point2: newPoint2,\n        eventType: 'touchZoom'\n      });\n    } else if (eventType === 'move') {\n      // touch move\n      updateTransform({\n        x: touches[0].clientX - point1.x,\n        y: touches[0].clientY - point1.y\n      }, 'move');\n      updateTouchPointInfo({\n        eventType: 'move'\n      });\n    }\n  };\n  var onTouchEnd = function onTouchEnd() {\n    if (!visible) return;\n    if (isTouching) {\n      setIsTouching(false);\n    }\n    updateTouchPointInfo({\n      eventType: 'none'\n    });\n    if (minScale > scale) {\n      /** When the scaling ratio is less than the minimum scaling ratio, reset the scaling ratio */\n      return updateTransform({\n        x: 0,\n        y: 0,\n        scale: minScale\n      }, 'touchZoom');\n    }\n    var width = imgRef.current.offsetWidth * scale;\n    var height = imgRef.current.offsetHeight * scale;\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    var _imgRef$current$getBo = imgRef.current.getBoundingClientRect(),\n      left = _imgRef$current$getBo.left,\n      top = _imgRef$current$getBo.top;\n    var isRotate = rotate % 180 !== 0;\n    var fixState = (0, _getFixScaleEleTransPosition.default)(isRotate ? height : width, isRotate ? width : height, left, top);\n    if (fixState) {\n      updateTransform((0, _objectSpread2.default)({}, fixState), 'dragRebound');\n    }\n  };\n  (0, _react.useEffect)(function () {\n    var onTouchMoveListener;\n    if (visible && movable) {\n      onTouchMoveListener = (0, _addEventListener.default)(window, 'touchmove', function (e) {\n        return e.preventDefault();\n      }, {\n        passive: false\n      });\n    }\n    return function () {\n      var _onTouchMoveListener;\n      (_onTouchMoveListener = onTouchMoveListener) === null || _onTouchMoveListener === void 0 || _onTouchMoveListener.remove();\n    };\n  }, [visible, movable]);\n  return {\n    isTouching: isTouching,\n    onTouchStart: onTouchStart,\n    onTouchMove: onTouchMove,\n    onTouchEnd: onTouchEnd\n  };\n}\n};"],
"names":["shadow$provide","global","require","module","exports","getDistance","a","b","Math","hypot","x","y","_interopRequireDefault","Object","defineProperty","value","default","useTouchEvent","imgRef","movable","visible","minScale","transform","updateTransform","dispatchZoomChange","rotate","scale","_useState","_react","useState","_useState2","_slicedToArray2","isTouching","setIsTouching","touchPointInfo","useRef","point1","point2","eventType","updateTouchPointInfo","values","current","_objectSpread2","useEffect","onTouchMoveListener","_addEventListener","window","e","preventDefault","passive","_onTouchMoveListener","remove","onTouchStart","event","stopPropagation","_event$touches","touches","length","clientX","clientY","onTouchMove","_event$touches2","_touchPointInfo$curre","newPoint1","newPoint2","distance1","distance2","ratio","_getCenter2","_getCenter","centerX","centerY","onTouchEnd","width","offsetWidth","height","offsetHeight","_imgRef$current$getBo","getBoundingClientRect","isRotate","fixState","_getFixScaleEleTransPosition","left","top"]
}
