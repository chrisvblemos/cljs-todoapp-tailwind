shadow$provide.module$node_modules$antd$lib$tabs$index=function(global,require,module,exports){"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var React=module(require("module$node_modules$react$index")),_CloseOutlined=global(require("module$node_modules$$ant_design$icons$CloseOutlined")),
_EllipsisOutlined=global(require("module$node_modules$$ant_design$icons$EllipsisOutlined")),_PlusOutlined=global(require("module$node_modules$$ant_design$icons$PlusOutlined")),_classnames=global(require("module$node_modules$classnames$index")),_rcTabs=global(require("module$node_modules$rc_tabs$lib$index")),_warning=require("module$node_modules$antd$lib$_util$warning"),_configProvider=require("module$node_modules$antd$lib$config_provider$index"),_useCSSVarCls=global(require("module$node_modules$antd$lib$config_provider$hooks$useCSSVarCls")),
_useSize=global(require("module$node_modules$antd$lib$config_provider$hooks$useSize")),_useAnimateConfig=global(require("module$node_modules$antd$lib$tabs$hooks$useAnimateConfig")),_useLegacyItems=global(require("module$node_modules$antd$lib$tabs$hooks$useLegacyItems")),_style=global(require("module$node_modules$antd$lib$tabs$style$index"));require=global(require("module$node_modules$antd$lib$tabs$TabPane"));var __rest=function(s,e){var t={},p;for(p in s)Object.prototype.hasOwnProperty.call(s,p)&&
0>e.indexOf(p)&&(t[p]=s[p]);if(null!=s&&"function"===typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)0>e.indexOf(p[i])&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};global=props=>{var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l;const {type,className,rootClassName,size:customSize,onEdit,hideAdd,centered,addIcon,removeIcon,moreIcon,more,popupClassName,children,items,animated,style,indicatorSize,indicator}=props,otherProps=__rest(props,
"type className rootClassName size onEdit hideAdd centered addIcon removeIcon moreIcon more popupClassName children items animated style indicatorSize indicator".split(" "));var {prefixCls:customizePrefixCls}=otherProps;const {direction,tabs,getPrefixCls,getPopupContainer}=React.useContext(_configProvider.ConfigContext);customizePrefixCls=getPrefixCls("tabs",customizePrefixCls);const rootCls=(0,_useCSSVarCls.default)(customizePrefixCls),[wrapCSSVar,hashId,cssVarCls]=(0,_style.default)(customizePrefixCls,
rootCls);let editable;"editable-card"===type&&(editable={onEdit:(editType,_ref)=>{let {key,event}=_ref;null===onEdit||void 0===onEdit?void 0:onEdit("add"===editType?event:key,editType)},removeIcon:null!==(_a=null!==removeIcon&&void 0!==removeIcon?removeIcon:null===tabs||void 0===tabs?void 0:tabs.removeIcon)&&void 0!==_a?_a:React.createElement(_CloseOutlined.default,null),addIcon:(null!==addIcon&&void 0!==addIcon?addIcon:null===tabs||void 0===tabs?void 0:tabs.addIcon)||React.createElement(_PlusOutlined.default,
null),showAdd:!0!==hideAdd});_a=getPrefixCls();var warning=(0,_warning.devUseWarning)("Tabs");warning(!("onPrevClick"in props)&&!("onNextClick"in props),"breaking","`onPrevClick` and `onNextClick` has been removed. Please use `onTabScroll` instead.");warning(!(indicatorSize||(null===tabs||void 0===tabs?0:tabs.indicatorSize)),"deprecated","`indicatorSize` has been deprecated. Please use `indicator\x3d{{ size: ... }}` instead.");props=(0,_useSize.default)(customSize);warning=(0,_useLegacyItems.default)(items,
children);const mergedAnimated=(0,_useAnimateConfig.default)(customizePrefixCls,animated),mergedStyle=Object.assign(Object.assign({},null===tabs||void 0===tabs?void 0:tabs.style),style),mergedIndicator={align:null!==(_b=null===indicator||void 0===indicator?void 0:indicator.align)&&void 0!==_b?_b:null===(_c=null===tabs||void 0===tabs?void 0:tabs.indicator)||void 0===_c?void 0:_c.align,size:null!==(_g=null!==(_e=null!==(_d=null===indicator||void 0===indicator?void 0:indicator.size)&&void 0!==_d?_d:
indicatorSize)&&void 0!==_e?_e:null===(_f=null===tabs||void 0===tabs?void 0:tabs.indicator)||void 0===_f?void 0:_f.size)&&void 0!==_g?_g:null===tabs||void 0===tabs?void 0:tabs.indicatorSize};return wrapCSSVar(React.createElement(_rcTabs.default,Object.assign({direction,getPopupContainer},otherProps,{items:warning,className:(0,_classnames.default)({[`${customizePrefixCls}-${props}`]:props,[`${customizePrefixCls}-card`]:["card","editable-card"].includes(type),[`${customizePrefixCls}-editable-card`]:"editable-card"===
type,[`${customizePrefixCls}-centered`]:centered},null===tabs||void 0===tabs?void 0:tabs.className,className,rootClassName,hashId,cssVarCls,rootCls),popupClassName:(0,_classnames.default)(popupClassName,hashId,cssVarCls,rootCls),style:mergedStyle,editable,more:Object.assign({icon:null!==(_l=null!==(_k=null!==(_j=null===(_h=null===tabs||void 0===tabs?void 0:tabs.more)||void 0===_h?void 0:_h.icon)&&void 0!==_j?_j:null===tabs||void 0===tabs?void 0:tabs.moreIcon)&&void 0!==_k?_k:moreIcon)&&void 0!==_l?
_l:React.createElement(_EllipsisOutlined.default,null),transitionName:`${_a}-slide-up`},more),prefixCls:customizePrefixCls,animated:mergedAnimated,indicator:mergedIndicator})))};global.TabPane=require.default;global.displayName="Tabs";exports.default=global}
//# sourceMappingURL=module$node_modules$antd$lib$tabs$index.js.map
