shadow$provide.module$node_modules$antd$lib$menu$SubMenu=function(global,require,module,exports){"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var React=module(require("module$node_modules$react$index")),_classnames=global(require("module$node_modules$classnames$index")),_rcMenu=
require("module$node_modules$rc_menu$lib$index"),_omit=global(require("module$node_modules$rc_util$lib$omit")),_useZIndex=require("module$node_modules$antd$lib$_util$hooks$useZIndex"),_reactNode=require("module$node_modules$antd$lib$_util$reactNode"),_MenuContext=global(require("module$node_modules$antd$lib$menu$MenuContext"));exports.default=props=>{var _a;const {popupClassName,icon,title,theme:customTheme}=props,context=React.useContext(_MenuContext.default),{prefixCls,inlineCollapsed,theme:contextTheme}=
context;var parentPath=(0,_rcMenu.useFullPath)();if(icon){var titleIsSpan=React.isValidElement(title)&&"span"===title.type;parentPath=React.createElement(React.Fragment,null,(0,_reactNode.cloneElement)(icon,{className:(0,_classnames.default)(React.isValidElement(icon)?null===(_a=icon.props)||void 0===_a?void 0:_a.className:"",`${prefixCls}-item-icon`)}),titleIsSpan?title:React.createElement("span",{className:`${prefixCls}-title-content`},title))}else parentPath=inlineCollapsed&&!parentPath.length&&
title&&"string"===typeof title?React.createElement("div",{className:`${prefixCls}-inline-collapsed-noicon`},title.charAt(0)):React.createElement("span",{className:`${prefixCls}-title-content`},title);_a=React.useMemo(()=>Object.assign(Object.assign({},context),{firstLevel:!1}),[context]);[titleIsSpan]=(0,_useZIndex.useZIndex)("Menu");return React.createElement(_MenuContext.default.Provider,{value:_a},React.createElement(_rcMenu.SubMenu,Object.assign({},(0,_omit.default)(props,["icon"]),{title:parentPath,
popupClassName:(0,_classnames.default)(prefixCls,popupClassName,`${prefixCls}-${customTheme||contextTheme}`),popupStyle:Object.assign({zIndex:titleIsSpan},props.popupStyle)})))}}
//# sourceMappingURL=module$node_modules$antd$lib$menu$SubMenu.js.map
