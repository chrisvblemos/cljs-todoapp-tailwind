{
"version":3,
"file":"module$node_modules$antd$lib$menu$MenuDivider.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,6CAAA,CAAkE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAE1G,YAEIC,OAAAA,CAAyBH,OAAA,CAAQ,kEAAR,CAAwDI,CAAAA,OACjFC,OAAAA,CAA0BL,OAAA,CAAQ,mEAAR,CAAyDI,CAAAA,OACvFE,OAAOC,CAAAA,cAAP,CAAsBL,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CM,MAAO,CAAA,CADoC,CAA7C,CAGAN,QAAQE,CAAAA,OAAR,CAAkB,IAAK,EACvB,KAAIK,MAAQJ,MAAA,CAAwBL,OAAA,CAAQ,iCAAR,CAAxB,CAAZ,CACIU,YAAcP,MAAA,CAAuBH,OAAA,CAAQ,sCAAR,CAAvB,CADlB;AAEIW,QAAUX,OAAA,CAAQ,uCAAR,CAFd,CAGIY,gBAAkBZ,OAAA,CAAQ,oDAAR,CA2BPE,QAAQE,CAAAA,OAAR,CAlBKS,KAAAC,EAAS,CAAA,MACrB,CACF,UAAWC,kBADT,CAEFC,SAFE,CAGFC,MAHE,CAAA,CAIAJ,KACsB,KAAA,EAAA,CAAC,WAAD,CAAc,WAAd,CAA2B,QAA3B,CAAA,CAbxBK,EAAI,EAaoB,CAZnBC,CAAT,KAASA,CAAT,GAYqBN,MAZrB,CAAqBP,MAAOc,CAAAA,SAAUC,CAAAA,cAAeC,CAAAA,IAAhC,CAYAT,KAZA,CAAwCM,CAAxC,CAAJ,EAAiE,CAAjE,CAAkDI,CAAEC,CAAAA,OAAF,CAAUL,CAAV,CAAlD,GAAoED,CAAA,CAAEC,CAAF,CAApE,CAYIN,KAZuE,CAAEM,CAAF,CAA3E,CACjB,IAAS,IAAT,EAWqBN,KAXrB,EAAyD,UAAzD,GAAiB,MAAOP,OAAOmB,CAAAA,qBAA/B,CAAqE,CAAA,IAASC,EAAI,CAAb,KAAgBP,CAAhB,CAAoBb,MAAOmB,CAAAA,qBAAP,CAWpEZ,KAXoE,CAApB,CAAqDa,CAArD,CAAyDP,CAAEQ,CAAAA,MAA3D,CAAmED,CAAA,EAAnE,CAC7C,CAAtB,CAAIH,CAAEC,CAAAA,OAAF,CAAUL,CAAA,CAAEO,CAAF,CAAV,CAAJ;AAA2BpB,MAAOc,CAAAA,SAAUQ,CAAAA,oBAAqBN,CAAAA,IAAtC,CAURT,KAVQ,CAA8CM,CAAA,CAAEO,CAAF,CAA9C,CAA3B,GAAgFR,CAAA,CAAEC,CAAA,CAAEO,CAAF,CAAF,CAAhF,CAUmBb,KAVuE,CAAEM,CAAA,CAAEO,CAAF,CAAF,CAA1F,CADmE,CAYrE,CAAM,CACJ,aAAAG,KADI,CAAN,CAEIpB,KAAMqB,CAAAA,UAAN,CAAiBlB,eAAgBmB,CAAAA,aAAjC,CAFJ,CAGMC,MAAAA,CAAYH,KAAA,CAAa,MAAb,CAAqBd,kBAArB,CACZkB,MAAAA,CAAc,GAAIvB,WAAYN,CAAAA,OAAhB,EAAyB,CAC3C,CAAE,GAAE4B,KAAF,sBAAF,EAAsC,CAAC,CAACf,MADG,CAAzB,CAEjBD,SAFiB,CAGpB,OAAoBP,MAAMyB,CAAAA,aAAN,CAAoBvB,OAAQwB,CAAAA,OAA5B,CAAqC7B,MAAO8B,CAAAA,MAAP,CAAc,CACrEpB,UAAWiB,KAD0D,CAAd,CAhBlDf,CAgBkD,CAArC,CAdO,CAtB6E;",
"sources":["node_modules/antd/lib/menu/MenuDivider.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$lib$menu$MenuDivider\"] = function(global,require,module,exports) {\n\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _rcMenu = require(\"rc-menu\");\nvar _configProvider = require(\"../config-provider\");\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nconst MenuDivider = props => {\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      dashed\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"dashed\"]);\n  const {\n    getPrefixCls\n  } = React.useContext(_configProvider.ConfigContext);\n  const prefixCls = getPrefixCls('menu', customizePrefixCls);\n  const classString = (0, _classnames.default)({\n    [`${prefixCls}-item-divider-dashed`]: !!dashed\n  }, className);\n  return /*#__PURE__*/React.createElement(_rcMenu.Divider, Object.assign({\n    className: classString\n  }, restProps));\n};\nvar _default = exports.default = MenuDivider;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","default","_interopRequireWildcard","Object","defineProperty","value","React","_classnames","_rcMenu","_configProvider","props","MenuDivider","customizePrefixCls","className","dashed","t","p","prototype","hasOwnProperty","call","e","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","getPrefixCls","useContext","ConfigContext","prefixCls","classString","createElement","Divider","assign"]
}
