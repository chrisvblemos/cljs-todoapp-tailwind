{
"version":3,
"file":"module$node_modules$antd$lib$splitter$hooks$useResizable.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,wDAAA,CAA6E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGjHC,MAAAA,CAA0BH,OAAA,CAAQ,mEAAR,CAAyDI,CAAAA,OACvFC,OAAOC,CAAAA,cAAP,CAAsBJ,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CK,MAAO,CAAA,CADoC,CAA7C,CAGAL,QAAQE,CAAAA,OAAR,CAEAI,QAAqB,CAACC,KAAD,CAAQC,OAAR,CAAiB,CACpC,MAAOC,MAAMC,CAAAA,OAAN,CAAc,EAAA,EAAM,CACzB,MAAMC,YAAc,EACpB,KAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBL,KAAMM,CAAAA,MAA1B,CAAmC,CAAnC,CAAsCD,CAAtC,EAA2C,CAA3C,CAA8C,CAE5C,MAAME,SAAWP,KAAA,CAAMK,CAAN,CAAU,CAAV,CAAjB,CACMG,SAAWP,OAAA,CAAQI,CAAR,CADjB,CAEMI,SAAWR,OAAA,CAAQI,CAAR,CAAY,CAAZ,CAFjB,CAGM,CACJ,UAAWK,aAAA,CAAgB,CAAA,CADvB,CAEJ,IAAKC,OAFD,CAGJ,YAAaC,eAHT,CAAA;AAJWZ,KAAAa,CAAMR,CAANQ,CACjB,CAQM,CACJ,UAAWC,aAAA,CAAgB,CAAA,CADvB,CAEJ,IAAKC,OAFD,CAGJ,YAAaC,eAHT,CAAA,CAIFT,QAkBJH,YAAA,CAAYC,CAAZ,CAAA,CAAiB,CACfY,UAhBFP,aAgBEO,EAhBeH,aAgBfG,GAdW,CAcXA,GAdFT,QAcES,EAdgB,CAACN,OAcjBM,IAZW,CAYXA,GAZFR,QAYEQ,EAZgB,CAACF,OAYjBE,CADe,CAEfC,iBAAkB,CAAC,EAVrBN,eAAgBO,CAAAA,GAUK,EAVa,CAUb,CAVEX,QAUF,EARrBQ,eAAgBI,CAAAA,KAQK,EARiB,CAQjB,GARIX,QAQJ,EARiC,CAQjC,CARsBD,QAQtB,CAFJ,CAGfa,eAAgB,CAAC,EANnBL,eAAgBI,CAAAA,KAMG,EANiB,CAMjB,CANMX,QAMN,EAJnBG,eAAgBO,CAAAA,GAIG,EAJiB,CAIjB,GAJIX,QAIJ,EAJiC,CAIjC,CAJsBC,QAItB,CAHF,CAhC2B,CAsC9C,MAAOL,YAxCkB,CAApB,CAyCJ,CAACH,OAAD,CAAUD,KAAV,CAzCI,CAD6B,CADtC,KAAIE,MAAQR,MAAA,CAAwBH,OAAA,CAAQ,iCAAR,CAAxB,CARyG;",
"sources":["node_modules/antd/lib/splitter/hooks/useResizable.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$lib$splitter$hooks$useResizable\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useResizable;\nvar React = _interopRequireWildcard(require(\"react\"));\nfunction useResizable(items, pxSizes) {\n  return React.useMemo(() => {\n    const resizeInfos = [];\n    for (let i = 0; i < items.length - 1; i += 1) {\n      const prevItem = items[i];\n      const nextItem = items[i + 1];\n      const prevSize = pxSizes[i];\n      const nextSize = pxSizes[i + 1];\n      const {\n        resizable: prevResizable = true,\n        min: prevMin,\n        collapsible: prevCollapsible\n      } = prevItem;\n      const {\n        resizable: nextResizable = true,\n        min: nextMin,\n        collapsible: nextCollapsible\n      } = nextItem;\n      const mergedResizable =\n      // Both need to be resizable\n      prevResizable && nextResizable && (\n      // Prev is not collapsed and limit min size\n      prevSize !== 0 || !prevMin) && (\n      // Next is not collapsed and limit min size\n      nextSize !== 0 || !nextMin);\n      const startCollapsible =\n      // Self is collapsible\n      prevCollapsible.end && prevSize > 0 ||\n      // Collapsed and can be collapsed\n      nextCollapsible.start && nextSize === 0 && prevSize > 0;\n      const endCollapsible =\n      // Self is collapsible\n      nextCollapsible.start && nextSize > 0 ||\n      // Collapsed and can be collapsed\n      prevCollapsible.end && prevSize === 0 && nextSize > 0;\n      resizeInfos[i] = {\n        resizable: mergedResizable,\n        startCollapsible: !!startCollapsible,\n        endCollapsible: !!endCollapsible\n      };\n    }\n    return resizeInfos;\n  }, [pxSizes, items]);\n}\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireWildcard","default","Object","defineProperty","value","useResizable","items","pxSizes","React","useMemo","resizeInfos","i","length","nextItem","prevSize","nextSize","prevResizable","prevMin","prevCollapsible","prevItem","nextResizable","nextMin","nextCollapsible","resizable","startCollapsible","end","start","endCollapsible"]
}
