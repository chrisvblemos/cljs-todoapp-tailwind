shadow$provide.module$node_modules$antd$lib$splitter$SplitBar=function(global,require,module,exports){function getValidNumber(num){return"number"!==typeof num||Number.isNaN(num)?0:Math.round(num)}"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _react=module(require("module$node_modules$react$index")),
_DownOutlined=global(require("module$node_modules$$ant_design$icons$DownOutlined")),_LeftOutlined=global(require("module$node_modules$$ant_design$icons$LeftOutlined")),_RightOutlined=global(require("module$node_modules$$ant_design$icons$RightOutlined")),_UpOutlined=global(require("module$node_modules$$ant_design$icons$UpOutlined")),_classnames=global(require("module$node_modules$classnames$index")),_useEvent=global(require("module$node_modules$rc_util$lib$hooks$useEvent"));exports.default=props=>
{const {prefixCls,vertical,index,active,ariaNow,ariaMin,ariaMax,resizable,startCollapsible,endCollapsible,onOffsetStart,onOffsetUpdate,onOffsetEnd,onCollapse,lazy,containerSize}=props;props=`${prefixCls}-bar`;const [startPos,setStartPos]=(0,_react.useState)(null),[constrainedOffset,setConstrainedOffset]=(0,_react.useState)(0),constrainedOffsetX=vertical?0:constrainedOffset,constrainedOffsetY=vertical?constrainedOffset:0,handleLazyMove=(0,_useEvent.default)((offsetX,offsetY)=>{const currentPos=containerSize*
ariaNow/100;setConstrainedOffset(Math.max(Math.max(0,containerSize*ariaMin/100),Math.min(Math.min(containerSize,containerSize*ariaMax/100),currentPos+(vertical?offsetY:offsetX)))-currentPos)}),handleLazyEnd=(0,_useEvent.default)(()=>{onOffsetUpdate(index,constrainedOffsetX,constrainedOffsetY);setConstrainedOffset(0)});_react.default.useEffect(()=>{if(startPos){const onMouseMove=e=>{const {pageX,pageY}=e;e=pageX-startPos[0];const offsetY=pageY-startPos[1];lazy?handleLazyMove(e,offsetY):onOffsetUpdate(index,
e,offsetY)},onMouseUp=()=>{lazy&&handleLazyEnd();setStartPos(null);onOffsetEnd()},handleTouchMove=e=>{if(1===e.touches.length){var touch=e.touches[0];e=touch.pageX-startPos[0];touch=touch.pageY-startPos[1];lazy?handleLazyMove(e,touch):onOffsetUpdate(index,e,touch)}},handleTouchEnd=()=>{lazy&&handleLazyEnd();setStartPos(null);onOffsetEnd()};window.addEventListener("touchmove",handleTouchMove);window.addEventListener("touchend",handleTouchEnd);window.addEventListener("mousemove",onMouseMove);window.addEventListener("mouseup",
onMouseUp);return()=>{window.removeEventListener("mousemove",onMouseMove);window.removeEventListener("mouseup",onMouseUp);window.removeEventListener("touchmove",handleTouchMove);window.removeEventListener("touchend",handleTouchEnd)}}},[startPos,lazy,vertical,index,containerSize,ariaNow,ariaMin,ariaMax]);const transformStyle={[`--${props}-preview-offset`]:`${constrainedOffset}px`},StartIcon=vertical?_UpOutlined.default:_LeftOutlined.default,EndIcon=vertical?_DownOutlined.default:_RightOutlined.default;
return _react.default.createElement("div",{className:props,role:"separator","aria-valuenow":getValidNumber(ariaNow),"aria-valuemin":getValidNumber(ariaMin),"aria-valuemax":getValidNumber(ariaMax)},lazy&&_react.default.createElement("div",{className:(0,_classnames.default)(`${props}-preview`,{[`${props}-preview-active`]:!!constrainedOffset}),style:transformStyle}),_react.default.createElement("div",{className:(0,_classnames.default)(`${props}-dragger`,{[`${props}-dragger-disabled`]:!resizable,[`${props}-dragger-active`]:active}),
onMouseDown:e=>{resizable&&e.currentTarget&&(setStartPos([e.pageX,e.pageY]),onOffsetStart(index))},onTouchStart:e=>{resizable&&1===e.touches.length&&(e=e.touches[0],setStartPos([e.pageX,e.pageY]),onOffsetStart(index))}}),startCollapsible&&_react.default.createElement("div",{className:(0,_classnames.default)(`${props}-collapse-bar`,`${props}-collapse-bar-start`),onClick:()=>onCollapse(index,"start")},_react.default.createElement(StartIcon,{className:(0,_classnames.default)(`${props}-collapse-icon`,
`${props}-collapse-start`)})),endCollapsible&&_react.default.createElement("div",{className:(0,_classnames.default)(`${props}-collapse-bar`,`${props}-collapse-bar-end`),onClick:()=>onCollapse(index,"end")},_react.default.createElement(EndIcon,{className:(0,_classnames.default)(`${props}-collapse-icon`,`${props}-collapse-end`)})))}}
//# sourceMappingURL=module$node_modules$antd$lib$splitter$SplitBar.js.map
