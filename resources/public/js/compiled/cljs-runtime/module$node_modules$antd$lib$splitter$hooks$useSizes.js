shadow$provide.module$node_modules$antd$lib$splitter$hooks$useSizes=function(global,require,module,exports){function getPtg(str){return Number(str.slice(0,-1))/100}function isPtg(itemSize){return"string"===typeof itemSize&&itemSize.endsWith("%")}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=function(items,containerSize){const propSizes=items.map(item=>item.size),itemsCount=items.length,
mergedContainerSize=containerSize||0,ptg2px=ptg=>ptg*mergedContainerSize,[innerSizes,setInnerSizes]=_react.default.useState(()=>items.map(item=>item.defaultSize)),sizes=_react.default.useMemo(()=>{var _a;const mergedSizes=[];for(let i=0;i<itemsCount;i+=1)mergedSizes[i]=null!==(_a=propSizes[i])&&void 0!==_a?_a:innerSizes[i];return mergedSizes},[itemsCount,innerSizes,propSizes]),postPercentSizes=_react.default.useMemo(()=>{let ptgList=[],emptyCount=0;for(var i=0;i<itemsCount;i+=1){var itemSize=sizes[i];
isPtg(itemSize)?ptgList[i]=getPtg(itemSize):itemSize||0===itemSize?(itemSize=Number(itemSize),Number.isNaN(itemSize)||(ptgList[i]=itemSize/mergedContainerSize)):(emptyCount+=1,ptgList[i]=void 0)}i=ptgList.reduce((acc,ptg)=>acc+(ptg||0),0);if(1<i||!emptyCount){const scale=1/i;ptgList=ptgList.map(ptg=>void 0===ptg?0:ptg*scale)}else{const avgRest=(1-i)/emptyCount;ptgList=ptgList.map(ptg=>void 0===ptg?avgRest:ptg)}return ptgList},[sizes,mergedContainerSize]),postPxSizes=_react.default.useMemo(()=>postPercentSizes.map(ptg2px),
[postPercentSizes,mergedContainerSize]),postPercentMinSizes=_react.default.useMemo(()=>items.map(item=>isPtg(item.min)?getPtg(item.min):(item.min||0)/mergedContainerSize),[items,mergedContainerSize]),postPercentMaxSizes=_react.default.useMemo(()=>items.map(item=>isPtg(item.max)?getPtg(item.max):(item.max||mergedContainerSize)/mergedContainerSize),[items,mergedContainerSize]);return[_react.default.useMemo(()=>containerSize?postPxSizes:sizes,[postPxSizes,containerSize]),postPxSizes,postPercentSizes,
postPercentMinSizes,postPercentMaxSizes,setInnerSizes]};exports.getPtg=getPtg;var _react=global(require("module$node_modules$react$index"))}
//# sourceMappingURL=module$node_modules$antd$lib$splitter$hooks$useSizes.js.map
