{
"version":3,
"file":"module$node_modules$antd$lib$typography$Editable.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/antd/lib/typography/Editable.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$lib$typography$Editable\"] = function(global,require,module,exports) {\n\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _EnterOutlined = _interopRequireDefault(require(\"@ant-design/icons/EnterOutlined\"));\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _KeyCode = _interopRequireDefault(require(\"rc-util/lib/KeyCode\"));\nvar _reactNode = require(\"../_util/reactNode\");\nvar _TextArea = _interopRequireDefault(require(\"../input/TextArea\"));\nvar _style = _interopRequireDefault(require(\"./style\"));\nconst Editable = props => {\n  const {\n    prefixCls,\n    'aria-label': ariaLabel,\n    className,\n    style,\n    direction,\n    maxLength,\n    autoSize = true,\n    value,\n    onSave,\n    onCancel,\n    onEnd,\n    component,\n    enterIcon = /*#__PURE__*/React.createElement(_EnterOutlined.default, null)\n  } = props;\n  const ref = React.useRef(null);\n  const inComposition = React.useRef(false);\n  const lastKeyCode = React.useRef(null);\n  const [current, setCurrent] = React.useState(value);\n  React.useEffect(() => {\n    setCurrent(value);\n  }, [value]);\n  React.useEffect(() => {\n    var _a;\n    if ((_a = ref.current) === null || _a === void 0 ? void 0 : _a.resizableTextArea) {\n      const {\n        textArea\n      } = ref.current.resizableTextArea;\n      textArea.focus();\n      const {\n        length\n      } = textArea.value;\n      textArea.setSelectionRange(length, length);\n    }\n  }, []);\n  const onChange = _ref => {\n    let {\n      target\n    } = _ref;\n    setCurrent(target.value.replace(/[\\n\\r]/g, ''));\n  };\n  const onCompositionStart = () => {\n    inComposition.current = true;\n  };\n  const onCompositionEnd = () => {\n    inComposition.current = false;\n  };\n  const onKeyDown = _ref2 => {\n    let {\n      keyCode\n    } = _ref2;\n    // We don't record keyCode when IME is using\n    if (inComposition.current) return;\n    lastKeyCode.current = keyCode;\n  };\n  const confirmChange = () => {\n    onSave(current.trim());\n  };\n  const onKeyUp = _ref3 => {\n    let {\n      keyCode,\n      ctrlKey,\n      altKey,\n      metaKey,\n      shiftKey\n    } = _ref3;\n    // Check if it's a real key\n    if (lastKeyCode.current !== keyCode || inComposition.current || ctrlKey || altKey || metaKey || shiftKey) {\n      return;\n    }\n    if (keyCode === _KeyCode.default.ENTER) {\n      confirmChange();\n      onEnd === null || onEnd === void 0 ? void 0 : onEnd();\n    } else if (keyCode === _KeyCode.default.ESC) {\n      onCancel();\n    }\n  };\n  const onBlur = () => {\n    confirmChange();\n  };\n  const [wrapCSSVar, hashId, cssVarCls] = (0, _style.default)(prefixCls);\n  const textAreaClassName = (0, _classnames.default)(prefixCls, `${prefixCls}-edit-content`, {\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-${component}`]: !!component\n  }, className, hashId, cssVarCls);\n  return wrapCSSVar(/*#__PURE__*/React.createElement(\"div\", {\n    className: textAreaClassName,\n    style: style\n  }, /*#__PURE__*/React.createElement(_TextArea.default, {\n    ref: ref,\n    maxLength: maxLength,\n    value: current,\n    onChange: onChange,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    onCompositionStart: onCompositionStart,\n    onCompositionEnd: onCompositionEnd,\n    onBlur: onBlur,\n    \"aria-label\": ariaLabel,\n    rows: 1,\n    autoSize: autoSize\n  }), enterIcon !== null ? (0, _reactNode.cloneElement)(enterIcon, {\n    className: `${prefixCls}-edit-content-confirm`\n  }) : null));\n};\nvar _default = exports.default = Editable;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","default","_interopRequireWildcard","Object","defineProperty","value","React","_EnterOutlined","_classnames","_KeyCode","_reactNode","_TextArea","_style","props","Editable","prefixCls","ariaLabel","className","style","direction","maxLength","autoSize","onSave","onCancel","onEnd","component","enterIcon","createElement","ref","useRef","inComposition","lastKeyCode","current","setCurrent","useState","useEffect","_a","resizableTextArea","textArea","focus","length","setSelectionRange","wrapCSSVar","hashId","cssVarCls","textAreaClassName","onChange","_ref","target","replace","onKeyDown","_ref2","keyCode","onKeyUp","_ref3","ctrlKey","altKey","metaKey","shiftKey","ENTER","trim","ESC","onCompositionStart","onCompositionEnd","onBlur","rows","cloneElement"]
}
