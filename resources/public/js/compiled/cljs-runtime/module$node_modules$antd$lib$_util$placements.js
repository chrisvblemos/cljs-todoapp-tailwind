shadow$provide.module$node_modules$antd$lib$_util$placements=function(global,require,module,exports){function getOverflowOptions(placement,arrowOffset,arrowWidth,autoAdjustOverflow){if(!1===autoAdjustOverflow)return{adjustX:!1,adjustY:!1};autoAdjustOverflow=autoAdjustOverflow&&"object"===typeof autoAdjustOverflow?autoAdjustOverflow:{};const baseOverflow={};switch(placement){case "top":case "bottom":baseOverflow.shiftX=2*arrowOffset.arrowOffsetHorizontal+arrowWidth;baseOverflow.shiftY=!0;baseOverflow.adjustY=
!0;break;case "left":case "right":baseOverflow.shiftY=2*arrowOffset.arrowOffsetVertical+arrowWidth,baseOverflow.shiftX=!0,baseOverflow.adjustX=!0}placement=Object.assign(Object.assign({},baseOverflow),autoAdjustOverflow);placement.shiftX||(placement.adjustX=!0);placement.shiftY||(placement.adjustY=!0);return placement}Object.defineProperty(exports,"__esModule",{value:!0});exports.default=function(config){const {arrowWidth,autoAdjustOverflow,arrowPointAtCenter,offset,borderRadius,visibleFirst}=config,
halfArrowWidth=arrowWidth/2,placementMap={};Object.keys(PlacementAlignMap).forEach(key=>{const placementInfo=Object.assign(Object.assign({},arrowPointAtCenter&&ArrowCenterPlacementAlignMap[key]||PlacementAlignMap[key]),{offset:[0,0],dynamicInset:!0});placementMap[key]=placementInfo;DisableAutoArrowList.has(key)&&(placementInfo.autoArrow=!1);switch(key){case "top":case "topLeft":case "topRight":placementInfo.offset[1]=-halfArrowWidth-offset;break;case "bottom":case "bottomLeft":case "bottomRight":placementInfo.offset[1]=
halfArrowWidth+offset;break;case "left":case "leftTop":case "leftBottom":placementInfo.offset[0]=-halfArrowWidth-offset;break;case "right":case "rightTop":case "rightBottom":placementInfo.offset[0]=halfArrowWidth+offset}const arrowOffset=(0,_placementArrow.getArrowOffsetToken)({contentRadius:borderRadius,limitVerticalRadius:!0});if(arrowPointAtCenter)switch(key){case "topLeft":case "bottomLeft":placementInfo.offset[0]=-arrowOffset.arrowOffsetHorizontal-halfArrowWidth;break;case "topRight":case "bottomRight":placementInfo.offset[0]=
arrowOffset.arrowOffsetHorizontal+halfArrowWidth;break;case "leftTop":case "rightTop":placementInfo.offset[1]=2*-arrowOffset.arrowOffsetHorizontal+halfArrowWidth;break;case "leftBottom":case "rightBottom":placementInfo.offset[1]=2*arrowOffset.arrowOffsetHorizontal-halfArrowWidth}placementInfo.overflow=getOverflowOptions(key,arrowOffset,arrowWidth,autoAdjustOverflow);visibleFirst&&(placementInfo.htmlRegion="visibleFirst")});return placementMap};exports.getOverflowOptions=getOverflowOptions;var _placementArrow=
require("module$node_modules$antd$lib$style$placementArrow");const PlacementAlignMap={left:{points:["cr","cl"]},right:{points:["cl","cr"]},top:{points:["bc","tc"]},bottom:{points:["tc","bc"]},topLeft:{points:["bl","tl"]},leftTop:{points:["tr","tl"]},topRight:{points:["br","tr"]},rightTop:{points:["tl","tr"]},bottomRight:{points:["tr","br"]},rightBottom:{points:["bl","br"]},bottomLeft:{points:["tl","bl"]},leftBottom:{points:["br","bl"]}},ArrowCenterPlacementAlignMap={topLeft:{points:["bl","tc"]},leftTop:{points:["tr",
"cl"]},topRight:{points:["br","tc"]},rightTop:{points:["tl","cr"]},bottomRight:{points:["tr","bc"]},rightBottom:{points:["bl","cr"]},bottomLeft:{points:["tl","bc"]},leftBottom:{points:["br","cl"]}},DisableAutoArrowList=new Set("topLeft topRight bottomLeft bottomRight leftTop leftBottom rightTop rightBottom".split(" "))}
//# sourceMappingURL=module$node_modules$antd$lib$_util$placements.js.map
