shadow$provide.module$node_modules$antd$lib$_util$wave$index=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _react=module(require("module$node_modules$react$index")),_classnames=global(require("module$node_modules$classnames$index")),_isVisible=
global(require("module$node_modules$rc_util$lib$Dom$isVisible")),_ref=require("module$node_modules$rc_util$lib$ref"),_configProvider=require("module$node_modules$antd$lib$config_provider$index"),_reactNode=require("module$node_modules$antd$lib$_util$reactNode"),_style=global(require("module$node_modules$antd$lib$_util$wave$style")),_useWave=global(require("module$node_modules$antd$lib$_util$wave$useWave"));require=props=>{const {children,disabled,component}=props;({getPrefixCls:props}=(0,_react.useContext)(_configProvider.ConfigContext));
const containerRef=(0,_react.useRef)(null);props=props("wave");const [,hashId]=(0,_style.default)(props),showWave=(0,_useWave.default)(containerRef,(0,_classnames.default)(props,hashId),component);_react.default.useEffect(()=>{const node=containerRef.current;if(node&&1===node.nodeType&&!disabled){var onClick=e=>{!(0,_isVisible.default)(e.target)||!node.getAttribute||node.getAttribute("disabled")||node.disabled||node.className.includes("disabled")||node.className.includes("-leave")||showWave(e)};node.addEventListener("click",
onClick,!0);return()=>{node.removeEventListener("click",onClick,!0)}}},[disabled]);if(!_react.default.isValidElement(children))return null!==children&&void 0!==children?children:null;props=(0,_ref.supportRef)(children)?(0,_ref.composeRef)((0,_ref.getNodeRef)(children),containerRef):containerRef;return(0,_reactNode.cloneElement)(children,{ref:props})};require.displayName="Wave";exports.default=require}
//# sourceMappingURL=module$node_modules$antd$lib$_util$wave$index.js.map
