shadow$provide.module$node_modules$antd$lib$color_picker$components$ColorInput=function(global,require,module,exports){"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _react=module(require("module$node_modules$react$index")),_useMergedState=global(require("module$node_modules$rc_util$lib$hooks$useMergedState")),
_select=global(require("module$node_modules$antd$lib$select$index")),_interface=require("module$node_modules$antd$lib$color_picker$interface"),_ColorAlphaInput=global(require("module$node_modules$antd$lib$color_picker$components$ColorAlphaInput")),_ColorHexInput=global(require("module$node_modules$antd$lib$color_picker$components$ColorHexInput")),_ColorHsbInput=global(require("module$node_modules$antd$lib$color_picker$components$ColorHsbInput")),_ColorRgbInput=global(require("module$node_modules$antd$lib$color_picker$components$ColorRgbInput"));
const selectOptions=[_interface.ColorFormat.hex,_interface.ColorFormat.hsb,_interface.ColorFormat.rgb].map(format=>({value:format,label:format.toLocaleUpperCase()}));exports.default=props=>{const {prefixCls,format,value,disabledAlpha,onFormatChange,onChange,disabledFormat}=props,[colorFormat,setColorFormat]=(0,_useMergedState.default)(_interface.ColorFormat.hex,{value:format,onChange:onFormatChange});props=`${prefixCls}-input`;const handleFormatChange=newFormat=>{setColorFormat(newFormat)},steppersNode=
(0,_react.useMemo)(()=>{const inputProps={value,prefixCls,onChange};switch(colorFormat){case _interface.ColorFormat.hsb:return _react.default.createElement(_ColorHsbInput.default,Object.assign({},inputProps));case _interface.ColorFormat.rgb:return _react.default.createElement(_ColorRgbInput.default,Object.assign({},inputProps));default:return _react.default.createElement(_ColorHexInput.default,Object.assign({},inputProps))}},[colorFormat,prefixCls,value,onChange]);return _react.default.createElement("div",
{className:`${props}-container`},!disabledFormat&&_react.default.createElement(_select.default,{value:colorFormat,variant:"borderless",getPopupContainer:current=>current,popupMatchSelectWidth:68,placement:"bottomRight",onChange:handleFormatChange,className:`${prefixCls}-format-select`,size:"small",options:selectOptions}),_react.default.createElement("div",{className:props},steppersNode),!disabledAlpha&&_react.default.createElement(_ColorAlphaInput.default,{prefixCls,value,onChange}))}}
//# sourceMappingURL=module$node_modules$antd$lib$color_picker$components$ColorInput.js.map
