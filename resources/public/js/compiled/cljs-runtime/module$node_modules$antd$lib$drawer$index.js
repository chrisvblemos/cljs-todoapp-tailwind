shadow$provide.module$node_modules$antd$lib$drawer$index=function(global,require,module,exports){"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var React=module(require("module$node_modules$react$index")),_classnames=global(require("module$node_modules$classnames$index")),_rcDrawer=
global(require("module$node_modules$rc_drawer$lib$index")),_ContextIsolator=global(require("module$node_modules$antd$lib$_util$ContextIsolator")),_useZIndex=require("module$node_modules$antd$lib$_util$hooks$useZIndex"),_motion=require("module$node_modules$antd$lib$_util$motion"),_warning=require("module$node_modules$antd$lib$_util$warning"),_zindexContext=global(require("module$node_modules$antd$lib$_util$zindexContext")),_configProvider=require("module$node_modules$antd$lib$config_provider$index"),
_context=require("module$node_modules$antd$lib$watermark$context"),_DrawerPanel=global(require("module$node_modules$antd$lib$drawer$DrawerPanel")),_style=global(require("module$node_modules$antd$lib$drawer$style$index")),__rest=function(s,e){var t={},p;for(p in s)Object.prototype.hasOwnProperty.call(s,p)&&0>e.indexOf(p)&&(t[p]=s[p]);if(null!=s&&"function"===typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)0>e.indexOf(p[i])&&Object.prototype.propertyIsEnumerable.call(s,
p[i])&&(t[p[i]]=s[p[i]])}return t};const defaultPushState={distance:180};require=props=>{var _a;const {rootClassName,width,height,size="default",mask=!0,push=defaultPushState,open,afterOpenChange,onClose,prefixCls:customizePrefixCls,getContainer:customizeGetContainer,style,className,visible,afterVisibleChange,maskStyle,drawerStyle,contentWrapperStyle}=props,rest=__rest(props,"rootClassName width height size mask push open afterOpenChange onClose prefixCls getContainer style className visible afterVisibleChange maskStyle drawerStyle contentWrapperStyle".split(" ")),
{getPopupContainer,getPrefixCls,direction,drawer}=React.useContext(_configProvider.ConfigContext),prefixCls=getPrefixCls("drawer",customizePrefixCls),[wrapCSSVar,hashId,cssVarCls]=(0,_style.default)(prefixCls),getContainer=void 0===customizeGetContainer&&getPopupContainer?()=>getPopupContainer(document.body):customizeGetContainer,drawerClassName=(0,_classnames.default)({"no-mask":!mask,[`${prefixCls}-rtl`]:"rtl"===direction},rootClassName,hashId,cssVarCls),warning=(0,_warning.devUseWarning)("Drawer");
[["visible","open"],["afterVisibleChange","afterOpenChange"],["headerStyle","styles.header"],["bodyStyle","styles.body"],["footerStyle","styles.footer"],["contentWrapperStyle","styles.wrapper"],["maskStyle","styles.mask"],["drawerStyle","styles.content"]].forEach(_ref=>{let [deprecatedName,newName]=_ref;warning.deprecated(!(deprecatedName in props),deprecatedName,newName)});void 0!==getContainer&&"absolute"===(null===(_a=props.style)||void 0===_a?void 0:_a.position)&&warning(!1,"breaking","`style` is replaced by `rootStyle` in v5. Please check that `position: absolute` is necessary.");
_a=React.useMemo(()=>null!==width&&void 0!==width?width:"large"===size?736:378,[width,size]);const mergedHeight=React.useMemo(()=>null!==height&&void 0!==height?height:"large"===size?736:378,[height,size]),maskMotion={motionName:(0,_motion.getTransitionName)(prefixCls,"mask-motion"),motionAppear:!0,motionEnter:!0,motionLeave:!0,motionDeadline:500},panelRef=(0,_context.usePanelRef)(),[zIndex,contextZIndex]=(0,_useZIndex.useZIndex)("Drawer",rest.zIndex),{classNames:propClassNames={},styles:propStyles=
{}}=rest,{classNames:contextClassNames={},styles:contextStyles={}}=drawer||{};return wrapCSSVar(React.createElement(_ContextIsolator.default,{form:!0,space:!0},React.createElement(_zindexContext.default.Provider,{value:contextZIndex},React.createElement(_rcDrawer.default,Object.assign({prefixCls,onClose,maskMotion,motion:motionPlacement=>({motionName:(0,_motion.getTransitionName)(prefixCls,`panel-motion-${motionPlacement}`),motionAppear:!0,motionEnter:!0,motionLeave:!0,motionDeadline:500})},rest,
{classNames:{mask:(0,_classnames.default)(propClassNames.mask,contextClassNames.mask),content:(0,_classnames.default)(propClassNames.content,contextClassNames.content),wrapper:(0,_classnames.default)(propClassNames.wrapper,contextClassNames.wrapper)},styles:{mask:Object.assign(Object.assign(Object.assign({},propStyles.mask),maskStyle),contextStyles.mask),content:Object.assign(Object.assign(Object.assign({},propStyles.content),drawerStyle),contextStyles.content),wrapper:Object.assign(Object.assign(Object.assign({},
propStyles.wrapper),contentWrapperStyle),contextStyles.wrapper)},open:null!==open&&void 0!==open?open:visible,mask,push,width:_a,height:mergedHeight,style:Object.assign(Object.assign({},null===drawer||void 0===drawer?void 0:drawer.style),style),className:(0,_classnames.default)(null===drawer||void 0===drawer?void 0:drawer.className,className),rootClassName:drawerClassName,getContainer,afterOpenChange:null!==afterOpenChange&&void 0!==afterOpenChange?afterOpenChange:afterVisibleChange,panelRef,zIndex}),
React.createElement(_DrawerPanel.default,Object.assign({prefixCls},rest,{onClose}))))))};require._InternalPanelDoNotUseOrYouWillBeFired=props=>{const {prefixCls:customizePrefixCls,style,className,placement="right"}=props;props=__rest(props,["prefixCls","style","className","placement"]);var {getPrefixCls}=React.useContext(_configProvider.ConfigContext);getPrefixCls=getPrefixCls("drawer",customizePrefixCls);const [wrapCSSVar,hashId,cssVarCls]=(0,_style.default)(getPrefixCls),cls=(0,_classnames.default)(getPrefixCls,
`${getPrefixCls}-pure`,`${getPrefixCls}-${placement}`,hashId,cssVarCls,className);return wrapCSSVar(React.createElement("div",{className:cls,style},React.createElement(_DrawerPanel.default,Object.assign({prefixCls:getPrefixCls},props))))};require.displayName="Drawer";exports.default=require}
//# sourceMappingURL=module$node_modules$antd$lib$drawer$index.js.map
