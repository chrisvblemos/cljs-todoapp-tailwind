shadow$provide.module$node_modules$rc_tree_select$lib$utils$warningPropsUtil=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _typeof2=global(require("module$node_modules$$babel$runtime$helpers$typeof")),_warning=global(require("module$node_modules$rc_util$lib$warning")),_valueUtil=require("module$node_modules$rc_tree_select$lib$utils$valueUtil");
exports.default=function(props){var treeCheckStrictly=props.treeCheckStrictly,treeCheckable=props.treeCheckable,labelInValue=props.labelInValue,value=props.value,multiple=props.multiple,showCheckedStrategy=props.showCheckedStrategy,maxCount=props.maxCount;(0,_warning.default)(!props.searchPlaceholder,"`searchPlaceholder` has been removed.");treeCheckStrictly&&!1===labelInValue&&(0,_warning.default)(!1,"`treeCheckStrictly` will force set `labelInValue` to `true`.");(labelInValue||treeCheckStrictly)&&
(0,_warning.default)((0,_valueUtil.toArray)(value).every(function(val){return val&&"object"===(0,_typeof2.default)(val)&&"value"in val}),"Invalid prop `value` supplied to `TreeSelect`. You should use { label: string, value: string | number } or [{ label: string, value: string | number }] instead.");treeCheckStrictly||multiple||treeCheckable?(0,_warning.default)(!value||Array.isArray(value),"`value` should be an array when `TreeSelect` is checkable or multiple."):(0,_warning.default)(!Array.isArray(value),
"`value` should not be array when `TreeSelect` is single mode.");maxCount&&("SHOW_ALL"===showCheckedStrategy&&!treeCheckStrictly||"SHOW_PARENT"===showCheckedStrategy)&&(0,_warning.default)(!1,"`maxCount` not work with `showCheckedStrategy\x3dSHOW_ALL` (when `treeCheckStrictly\x3dfalse`) or `showCheckedStrategy\x3dSHOW_PARENT`.")}}
//# sourceMappingURL=module$node_modules$rc_tree_select$lib$utils$warningPropsUtil.js.map
