shadow$provide.module$node_modules$antd$lib$grid$style$index=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.useRowStyle=exports.useColStyle=exports.prepareRowComponentToken=exports.prepareColComponentToken=exports.getMediaSize=void 0;var _cssinjs=require("module$node_modules$$ant_design$cssinjs$lib$index"),_internal=require("module$node_modules$antd$lib$theme$internal");const genGridColStyle=token=>{({componentCls:token}=token);return{[token]:{position:"relative",
maxWidth:"100%",minHeight:1}}},genLoopGridColumnsStyle=(token,sizeCls)=>{const {prefixCls,componentCls,gridColumns}=token;token={};for(let i=gridColumns;0<=i;i--)0===i?(token[`${componentCls}${sizeCls}-${i}`]={display:"none"},token[`${componentCls}-push-${i}`]={insetInlineStart:"auto"},token[`${componentCls}-pull-${i}`]={insetInlineEnd:"auto"},token[`${componentCls}${sizeCls}-push-${i}`]={insetInlineStart:"auto"},token[`${componentCls}${sizeCls}-pull-${i}`]={insetInlineEnd:"auto"},token[`${componentCls}${sizeCls}-offset-${i}`]=
{marginInlineStart:0},token[`${componentCls}${sizeCls}-order-${i}`]={order:0}):(token[`${componentCls}${sizeCls}-${i}`]=[{["--ant-display"]:"block",display:"block"},{display:"var(--ant-display)",flex:`0 0 ${i/gridColumns*100}%`,maxWidth:`${i/gridColumns*100}%`}],token[`${componentCls}${sizeCls}-push-${i}`]={insetInlineStart:`${i/gridColumns*100}%`},token[`${componentCls}${sizeCls}-pull-${i}`]={insetInlineEnd:`${i/gridColumns*100}%`},token[`${componentCls}${sizeCls}-offset-${i}`]={marginInlineStart:`${i/
gridColumns*100}%`},token[`${componentCls}${sizeCls}-order-${i}`]={order:i});token[`${componentCls}${sizeCls}-flex`]={flex:`var(--${prefixCls}${sizeCls}-flex)`};return token};global=()=>({});exports.prepareRowComponentToken=global;require=()=>({});exports.prepareColComponentToken=require;exports.useRowStyle=(0,_internal.genStyleHooks)("Grid",token=>{({componentCls:token}=token);return{[token]:{display:"flex",flexFlow:"row wrap",minWidth:0,"\x26::before, \x26::after":{display:"flex"},"\x26-no-wrap":{flexWrap:"nowrap"},
"\x26-start":{justifyContent:"flex-start"},"\x26-center":{justifyContent:"center"},"\x26-end":{justifyContent:"flex-end"},"\x26-space-between":{justifyContent:"space-between"},"\x26-space-around":{justifyContent:"space-around"},"\x26-space-evenly":{justifyContent:"space-evenly"},"\x26-top":{alignItems:"flex-start"},"\x26-middle":{alignItems:"center"},"\x26-bottom":{alignItems:"flex-end"}}}},global);const getMediaSize=token=>({xs:token.screenXSMin,sm:token.screenSMMin,md:token.screenMDMin,lg:token.screenLGMin,
xl:token.screenXLMin,xxl:token.screenXXLMin});exports.getMediaSize=getMediaSize;exports.useColStyle=(0,_internal.genStyleHooks)("Grid",token=>{const gridToken=(0,_internal.mergeToken)(token,{gridColumns:24}),gridMediaSizesMap=getMediaSize(gridToken);delete gridMediaSizesMap.xs;return[genGridColStyle(gridToken),genLoopGridColumnsStyle(gridToken,""),genLoopGridColumnsStyle(gridToken,"-xs"),Object.keys(gridMediaSizesMap).map(key=>{var sizeCls=`-${key}`;return{[`@media (min-width: ${(0,_cssinjs.unit)(gridMediaSizesMap[key])})`]:Object.assign({},
genLoopGridColumnsStyle(gridToken,sizeCls))}}).reduce((pre,cur)=>Object.assign(Object.assign({},pre),cur),{})]},require)}
//# sourceMappingURL=module$node_modules$antd$lib$grid$style$index.js.map
