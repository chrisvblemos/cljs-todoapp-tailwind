shadow$provide.module$node_modules$antd$lib$checkbox$Group=function(global,require,module,exports){"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;Object.defineProperty(exports,"__esModule",{value:!0});Object.defineProperty(exports,"GroupContext",{enumerable:!0,get:function(){return _GroupContext.default}});exports.default=void 0;var _toConsumableArray2=
module(require("module$node_modules$$babel$runtime$helpers$toConsumableArray")),React=global(require("module$node_modules$react$index")),_classnames=module(require("module$node_modules$classnames$index")),_omit=module(require("module$node_modules$rc_util$lib$omit")),_configProvider=require("module$node_modules$antd$lib$config_provider$index"),_useCSSVarCls=module(require("module$node_modules$antd$lib$config_provider$hooks$useCSSVarCls")),_Checkbox=module(require("module$node_modules$antd$lib$checkbox$Checkbox")),
_GroupContext=module(require("module$node_modules$antd$lib$checkbox$GroupContext")),_style=module(require("module$node_modules$antd$lib$checkbox$style$index")),__rest=function(s,e){var t={},p;for(p in s)Object.prototype.hasOwnProperty.call(s,p)&&0>e.indexOf(p)&&(t[p]=s[p]);if(null!=s&&"function"===typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)0>e.indexOf(p[i])&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};require=
React.forwardRef((props,ref)=>{const {defaultValue,children,options=[],prefixCls:customizePrefixCls,className,rootClassName,style,onChange}=props,restProps=__rest(props,"defaultValue children options prefixCls className rootClassName style onChange".split(" ")),{getPrefixCls,direction}=React.useContext(_configProvider.ConfigContext),[value,setValue]=React.useState(restProps.value||defaultValue||[]),[registeredValues,setRegisteredValues]=React.useState([]);React.useEffect(()=>{"value"in restProps&&
setValue(restProps.value||[])},[restProps.value]);const memoOptions=React.useMemo(()=>options.map(option=>"string"===typeof option||"number"===typeof option?{label:option,value:option}:option),[options]),prefixCls=getPrefixCls("checkbox",customizePrefixCls),groupPrefixCls=`${prefixCls}-group`;var rootCls=(0,_useCSSVarCls.default)(prefixCls);const [wrapCSSVar,hashId,cssVarCls]=(0,_style.default)(prefixCls,rootCls);props=(0,_omit.default)(restProps,["value","disabled"]);const childrenNode=options.length?
memoOptions.map(option=>React.createElement(_Checkbox.default,{prefixCls,key:option.value.toString(),disabled:"disabled"in option?option.disabled:restProps.disabled,value:option.value,checked:value.includes(option.value),onChange:option.onChange,className:`${groupPrefixCls}-item`,style:option.style,title:option.title,id:option.id,required:option.required},option.label)):children,context={toggleOption:option=>{const optionIndex=value.indexOf(option.value),newValue=(0,_toConsumableArray2.default)(value);
-1===optionIndex?newValue.push(option.value):newValue.splice(optionIndex,1);"value"in restProps||setValue(newValue);null===onChange||void 0===onChange?void 0:onChange(newValue.filter(val=>registeredValues.includes(val)).sort((a,b)=>{const indexA=memoOptions.findIndex(opt=>opt.value===a),indexB=memoOptions.findIndex(opt=>opt.value===b);return indexA-indexB}))},value,disabled:restProps.disabled,name:restProps.name,registerValue:val=>{setRegisteredValues(prevValues=>[].concat((0,_toConsumableArray2.default)(prevValues),
[val]))},cancelValue:val=>{setRegisteredValues(prevValues=>prevValues.filter(v=>v!==val))}};rootCls=(0,_classnames.default)(groupPrefixCls,{[`${groupPrefixCls}-rtl`]:"rtl"===direction},className,rootClassName,cssVarCls,rootCls,hashId);return wrapCSSVar(React.createElement("div",Object.assign({className:rootCls,style},props,{ref}),React.createElement(_GroupContext.default.Provider,{value:context},childrenNode)))});exports.default=require}
//# sourceMappingURL=module$node_modules$antd$lib$checkbox$Group.js.map
