{
"version":3,
"file":"module$node_modules$antd$lib$splitter$style$index.js",
"lineCount":11,
"mappings":"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",
"sources":["node_modules/antd/lib/splitter/style/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$lib$splitter$style$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.prepareComponentToken = exports.default = void 0;\nvar _style = require(\"../../style\");\nvar _internal = require(\"../../theme/internal\");\nconst genRtlStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [`&-rtl${componentCls}-horizontal`]: {\n      [`> ${componentCls}-bar`]: {\n        [`${componentCls}-bar-collapse-previous`]: {\n          insetInlineEnd: 0,\n          insetInlineStart: 'unset'\n        },\n        [`${componentCls}-bar-collapse-next`]: {\n          insetInlineEnd: 'unset',\n          insetInlineStart: 0\n        }\n      }\n    },\n    [`&-rtl${componentCls}-vertical`]: {\n      [`> ${componentCls}-bar`]: {\n        [`${componentCls}-bar-collapse-previous`]: {\n          insetInlineEnd: '50%',\n          insetInlineStart: 'unset'\n        },\n        [`${componentCls}-bar-collapse-next`]: {\n          insetInlineEnd: '50%',\n          insetInlineStart: 'unset'\n        }\n      }\n    }\n  };\n};\nconst centerStyle = {\n  position: 'absolute',\n  top: '50%',\n  left: {\n    _skip_check_: true,\n    value: '50%'\n  },\n  transform: 'translate(-50%, -50%)'\n};\nconst genSplitterStyle = token => {\n  const {\n    componentCls,\n    colorFill,\n    splitBarDraggableSize,\n    splitBarSize,\n    splitTriggerSize,\n    controlItemBgHover,\n    controlItemBgActive,\n    controlItemBgActiveHover,\n    prefixCls\n  } = token;\n  const splitBarCls = `${componentCls}-bar`;\n  const splitMaskCls = `${componentCls}-mask`;\n  const splitPanelCls = `${componentCls}-panel`;\n  const halfTriggerSize = token.calc(splitTriggerSize).div(2).equal();\n  const splitterBarPreviewOffsetVar = `${prefixCls}-bar-preview-offset`;\n  const splitterBarPreviewStyle = {\n    position: 'absolute',\n    background: token.colorPrimary,\n    opacity: 0.2,\n    pointerEvents: 'none',\n    transition: 'none',\n    zIndex: 1,\n    display: 'none'\n  };\n  return {\n    [componentCls]: Object.assign(Object.assign(Object.assign({}, (0, _style.resetComponent)(token)), {\n      display: 'flex',\n      width: '100%',\n      height: '100%',\n      alignItems: 'stretch',\n      // ======================== SplitBar ========================\n      // Use `>` to avoid conflict with mix layout\n      [`> ${splitBarCls}`]: {\n        flex: 'none',\n        position: 'relative',\n        userSelect: 'none',\n        // ======================= Dragger =======================\n        [`${splitBarCls}-dragger`]: Object.assign(Object.assign({}, centerStyle), {\n          zIndex: 1,\n          // Hover background\n          '&::before': Object.assign({\n            content: '\"\"',\n            background: controlItemBgHover\n          }, centerStyle),\n          // Spinner\n          '&::after': Object.assign({\n            content: '\"\"',\n            background: colorFill\n          }, centerStyle),\n          // Hover\n          [`&:hover:not(${splitBarCls}-dragger-active)`]: {\n            '&::before': {\n              background: controlItemBgActive\n            }\n          },\n          // Active\n          '&-active': {\n            zIndex: 2,\n            '&::before': {\n              background: controlItemBgActiveHover\n            }\n          },\n          // Disabled, not use `pointer-events: none` since still need trigger collapse\n          [`&-disabled${splitBarCls}-dragger`]: {\n            zIndex: 0,\n            '&, &:hover, &-active': {\n              cursor: 'default',\n              '&::before': {\n                background: controlItemBgHover\n              }\n            },\n            '&::after': {\n              display: 'none'\n            }\n          }\n        }),\n        // ======================= Collapse =======================\n        [`${splitBarCls}-collapse-bar`]: Object.assign(Object.assign({}, centerStyle), {\n          zIndex: token.zIndexPopupBase,\n          background: controlItemBgHover,\n          fontSize: token.fontSizeSM,\n          borderRadius: token.borderRadiusXS,\n          color: token.colorText,\n          cursor: 'pointer',\n          opacity: 0,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          // Hover\n          '&:hover': {\n            background: controlItemBgActive\n          },\n          // Active\n          '&:active': {\n            background: controlItemBgActiveHover\n          }\n        }),\n        // ======================== Status ========================\n        // Hover\n        '&:hover, &:active': {\n          [`${splitBarCls}-collapse-bar`]: {\n            opacity: 1\n          }\n        }\n      },\n      // =========================== Mask =========================\n      // Util dom for handle cursor\n      [splitMaskCls]: {\n        position: 'fixed',\n        zIndex: token.zIndexPopupBase,\n        inset: 0,\n        '&-horizontal': {\n          cursor: 'col-resize'\n        },\n        '&-vertical': {\n          cursor: 'row-resize'\n        }\n      },\n      // ==========================================================\n      // ==                        Layout                        ==\n      // ==========================================================\n      '&-horizontal': {\n        flexDirection: 'row',\n        [`> ${splitBarCls}`]: {\n          width: 0,\n          // ======================= Preview =======================\n          [`${splitBarCls}-preview`]: Object.assign(Object.assign({\n            height: '100%',\n            width: splitBarSize\n          }, splitterBarPreviewStyle), {\n            [`&${splitBarCls}-preview-active`]: {\n              display: 'block',\n              transform: `translateX(var(--${splitterBarPreviewOffsetVar}))`\n            }\n          }),\n          // ======================= Dragger =======================\n          [`${splitBarCls}-dragger`]: {\n            cursor: 'col-resize',\n            height: '100%',\n            width: splitTriggerSize,\n            '&::before': {\n              height: '100%',\n              width: splitBarSize\n            },\n            '&::after': {\n              height: splitBarDraggableSize,\n              width: splitBarSize\n            }\n          },\n          // ======================= Collapse =======================\n          [`${splitBarCls}-collapse-bar`]: {\n            width: token.fontSizeSM,\n            height: token.controlHeightSM,\n            '&-start': {\n              left: {\n                _skip_check_: true,\n                value: 'auto'\n              },\n              right: {\n                _skip_check_: true,\n                value: halfTriggerSize\n              },\n              transform: 'translateY(-50%)'\n            },\n            '&-end': {\n              left: {\n                _skip_check_: true,\n                value: halfTriggerSize\n              },\n              right: {\n                _skip_check_: true,\n                value: 'auto'\n              },\n              transform: 'translateY(-50%)'\n            }\n          }\n        }\n      },\n      '&-vertical': {\n        flexDirection: 'column',\n        [`> ${splitBarCls}`]: {\n          height: 0,\n          // ======================= Preview =======================\n          [`${splitBarCls}-preview`]: Object.assign(Object.assign({\n            height: splitBarSize,\n            width: '100%'\n          }, splitterBarPreviewStyle), {\n            [`&${splitBarCls}-preview-active`]: {\n              display: 'block',\n              transform: `translateY(var(--${splitterBarPreviewOffsetVar}))`\n            }\n          }),\n          // ======================= Dragger =======================\n          [`${splitBarCls}-dragger`]: {\n            cursor: 'row-resize',\n            width: '100%',\n            height: splitTriggerSize,\n            '&::before': {\n              width: '100%',\n              height: splitBarSize\n            },\n            '&::after': {\n              width: splitBarDraggableSize,\n              height: splitBarSize\n            }\n          },\n          // ======================= Collapse =======================\n          [`${splitBarCls}-collapse-bar`]: {\n            height: token.fontSizeSM,\n            width: token.controlHeightSM,\n            '&-start': {\n              top: 'auto',\n              bottom: halfTriggerSize,\n              transform: 'translateX(-50%)'\n            },\n            '&-end': {\n              top: halfTriggerSize,\n              bottom: 'auto',\n              transform: 'translateX(-50%)'\n            }\n          }\n        }\n      },\n      // ========================= Panels =========================\n      [splitPanelCls]: {\n        overflow: 'auto',\n        padding: '0 1px',\n        scrollbarWidth: 'thin',\n        boxSizing: 'border-box',\n        '&-hidden': {\n          padding: 0,\n          overflow: 'hidden'\n        },\n        [`&:has(${componentCls}:only-child)`]: {\n          overflow: 'hidden'\n        }\n      }\n    }), genRtlStyle(token))\n  };\n};\nconst prepareComponentToken = token => {\n  var _a;\n  const splitBarSize = token.splitBarSize || 2;\n  const splitTriggerSize = token.splitTriggerSize || 6;\n  // https://github.com/ant-design/ant-design/pull/51223\n  const resizeSpinnerSize = token.resizeSpinnerSize || 20;\n  const splitBarDraggableSize = (_a = token.splitBarDraggableSize) !== null && _a !== void 0 ? _a : resizeSpinnerSize;\n  return {\n    splitBarSize,\n    splitTriggerSize,\n    splitBarDraggableSize,\n    resizeSpinnerSize\n  };\n};\n// ============================== Export ==============================\nexports.prepareComponentToken = prepareComponentToken;\nvar _default = exports.default = (0, _internal.genStyleHooks)('Splitter', token => [genSplitterStyle(token)], prepareComponentToken);\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","prepareComponentToken","default","_style","_internal","centerStyle","position","top","left","_skip_check_","transform","token","_a","splitBarSize","splitTriggerSize","resizeSpinnerSize","splitBarDraggableSize","genStyleHooks","componentCls","colorFill","controlItemBgHover","controlItemBgActive","controlItemBgActiveHover","prefixCls","splitBarCls","splitMaskCls","splitPanelCls","halfTriggerSize","calc","div","equal","splitterBarPreviewOffsetVar","splitterBarPreviewStyle","background","colorPrimary","opacity","pointerEvents","transition","zIndex","display","assign","resetComponent","width","height","alignItems","flex","userSelect","content","cursor","zIndexPopupBase","fontSize","fontSizeSM","borderRadius","borderRadiusXS","color","colorText","justifyContent","inset","flexDirection","controlHeightSM","right","bottom","overflow","padding","scrollbarWidth","boxSizing","insetInlineEnd","insetInlineStart"]
}
