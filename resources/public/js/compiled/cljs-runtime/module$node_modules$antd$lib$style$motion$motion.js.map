{
"version":3,
"file":"module$node_modules$antd$lib$style$motion$motion.js",
"lineCount":7,
"mappings":"AAAAA,cAAA,CAAA,gDAAA,CAAqE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG7GC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,UAAR,CAAqB,IAAK,EAqC1BJ,QAAQI,CAAAA,UAAR,CA3BmBA,QAAS,CAACC,SAAD,CAAYC,WAAZ,CAAyBC,YAAzB,CAAuCC,QAAvC,CAAiD,CAE3E,MAAMC,gBAD6B,CACX,CADRC,SAAUC,CAAAA,MACF,EADiCC,IAAAA,EACjC,GADgBF,SAAA,CAAU,CAAV,CAChB,EAD6CA,SAAA,CAAU,CAAV,CAC7C,CAAY,MAAZ,CAAkB,EAC1C,OAAO,CACL,CAAE;QACED,eADF,GACoBJ,SADpB;QAEEI,eAFF,GAEoBJ,SAFpB;KAAF,EAGIJ,MAAOY,CAAAA,MAAP,CAAcZ,MAAOY,CAAAA,MAAP,CAAc,EAAd,CAhBgB,CACpCC,kBAeuDN,QAhBnB,CAEpCO,kBAAmB,MAFiB,CAgBhB,CAAd,CAA6D,CAC/DC,mBAAoB,QAD2C,CAA7D,CAJC,CAOL,CAAE,GAAEP,eAAF,GAAoBJ,SAApB,QAAF,EAA0CJ,MAAOY,CAAAA,MAAP,CAAcZ,MAAOY,CAAAA,MAAP,CAAc,EAAd,CAdjB,CACzCC,kBAakGN,QAdzD,CAEzCO,kBAAmB,MAFsB,CAciB,CAAd,CAAkE,CAC1GC,mBAAoB,QADsF,CAAlE,CAPrC,CAUL,CAAE;QACEP,eADF,GACoBJ,SADpB,SACsCA,SADtC;QAEEI,eAFF,GAEoBJ,SAFpB,UAEuCA,SAFvC;KAAF,EAGI,CACFY,cAAeX,WADb,CAEFU,mBAAoB,SAFlB,CAbC,CAiBL,CAAE,GAAEP,eAAF,GAAoBJ,SAApB,SAAsCA,SAAtC,eAAF,EAAmE,CACjEY,cAAeV,YADkD,CAEjES,mBAAoB,SAF6C,CAGjEE,cAAe,MAHkD,CAjB9D,CAHoE,CAhBgC;",
"sources":["node_modules/antd/lib/style/motion/motion.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$lib$style$motion$motion\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initMotion = void 0;\nconst initMotionCommon = duration => ({\n  animationDuration: duration,\n  animationFillMode: 'both'\n});\n// FIXME: origin less code seems same as initMotionCommon. Maybe we can safe remove\nconst initMotionCommonLeave = duration => ({\n  animationDuration: duration,\n  animationFillMode: 'both'\n});\nconst initMotion = function (motionCls, inKeyframes, outKeyframes, duration) {\n  let sameLevel = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  const sameLevelPrefix = sameLevel ? '&' : '';\n  return {\n    [`\n      ${sameLevelPrefix}${motionCls}-enter,\n      ${sameLevelPrefix}${motionCls}-appear\n    `]: Object.assign(Object.assign({}, initMotionCommon(duration)), {\n      animationPlayState: 'paused'\n    }),\n    [`${sameLevelPrefix}${motionCls}-leave`]: Object.assign(Object.assign({}, initMotionCommonLeave(duration)), {\n      animationPlayState: 'paused'\n    }),\n    [`\n      ${sameLevelPrefix}${motionCls}-enter${motionCls}-enter-active,\n      ${sameLevelPrefix}${motionCls}-appear${motionCls}-appear-active\n    `]: {\n      animationName: inKeyframes,\n      animationPlayState: 'running'\n    },\n    [`${sameLevelPrefix}${motionCls}-leave${motionCls}-leave-active`]: {\n      animationName: outKeyframes,\n      animationPlayState: 'running',\n      pointerEvents: 'none'\n    }\n  };\n};\nexports.initMotion = initMotion;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","initMotion","motionCls","inKeyframes","outKeyframes","duration","sameLevelPrefix","arguments","length","undefined","assign","animationDuration","animationFillMode","animationPlayState","animationName","pointerEvents"]
}
