{
"version":3,
"file":"module$node_modules$rc_table$lib$hooks$useRowInfo.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/rc-table/lib/hooks/useRowInfo.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rc_table$lib$hooks$useRowInfo\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useRowInfo;\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _context = require(\"@rc-component/context\");\nvar _TableContext = _interopRequireDefault(require(\"../context/TableContext\"));\nvar _valueUtil = require(\"../utils/valueUtil\");\nvar _rcUtil = require(\"rc-util\");\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nfunction useRowInfo(record, rowKey, recordIndex, indent) {\n  var context = (0, _context.useContext)(_TableContext.default, ['prefixCls', 'fixedInfoList', 'flattenColumns', 'expandableType', 'expandRowByClick', 'onTriggerExpand', 'rowClassName', 'expandedRowClassName', 'indentSize', 'expandIcon', 'expandedRowRender', 'expandIconColumnIndex', 'expandedKeys', 'childrenColumnName', 'rowExpandable', 'onRow']);\n  var flattenColumns = context.flattenColumns,\n    expandableType = context.expandableType,\n    expandedKeys = context.expandedKeys,\n    childrenColumnName = context.childrenColumnName,\n    onTriggerExpand = context.onTriggerExpand,\n    rowExpandable = context.rowExpandable,\n    onRow = context.onRow,\n    expandRowByClick = context.expandRowByClick,\n    rowClassName = context.rowClassName;\n\n  // ======================= Expandable =======================\n  // Only when row is not expandable and `children` exist in record\n  var nestExpandable = expandableType === 'nest';\n  var rowSupportExpand = expandableType === 'row' && (!rowExpandable || rowExpandable(record));\n  var mergedExpandable = rowSupportExpand || nestExpandable;\n  var expanded = expandedKeys && expandedKeys.has(rowKey);\n  var hasNestChildren = childrenColumnName && record && record[childrenColumnName];\n  var onInternalTriggerExpand = (0, _rcUtil.useEvent)(onTriggerExpand);\n\n  // ========================= onRow ==========================\n  var rowProps = onRow === null || onRow === void 0 ? void 0 : onRow(record, recordIndex);\n  var onRowClick = rowProps === null || rowProps === void 0 ? void 0 : rowProps.onClick;\n  var onClick = function onClick(event) {\n    if (expandRowByClick && mergedExpandable) {\n      onTriggerExpand(record, event);\n    }\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    onRowClick === null || onRowClick === void 0 || onRowClick.apply(void 0, [event].concat(args));\n  };\n\n  // ====================== RowClassName ======================\n  var computeRowClassName;\n  if (typeof rowClassName === 'string') {\n    computeRowClassName = rowClassName;\n  } else if (typeof rowClassName === 'function') {\n    computeRowClassName = rowClassName(record, recordIndex, indent);\n  }\n\n  // ========================= Column =========================\n  var columnsKey = (0, _valueUtil.getColumnsKey)(flattenColumns);\n  return (0, _objectSpread2.default)((0, _objectSpread2.default)({}, context), {}, {\n    columnsKey: columnsKey,\n    nestExpandable: nestExpandable,\n    expanded: expanded,\n    hasNestChildren: hasNestChildren,\n    record: record,\n    onTriggerExpand: onInternalTriggerExpand,\n    rowSupportExpand: rowSupportExpand,\n    expandable: mergedExpandable,\n    rowProps: (0, _objectSpread2.default)((0, _objectSpread2.default)({}, rowProps), {}, {\n      className: (0, _classnames.default)(computeRowClassName, rowProps === null || rowProps === void 0 ? void 0 : rowProps.className),\n      onClick: onClick\n    })\n  });\n}\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","Object","defineProperty","value","default","useRowInfo","record","rowKey","recordIndex","indent","context","_context","useContext","_TableContext","flattenColumns","expandableType","expandedKeys","childrenColumnName","onTriggerExpand","rowExpandable","onRow","expandRowByClick","rowClassName","nestExpandable","mergedExpandable","rowSupportExpand","expanded","has","hasNestChildren","onInternalTriggerExpand","_rcUtil","useEvent","rowProps","onRowClick","onClick","computeRowClassName","columnsKey","_valueUtil","getColumnsKey","_objectSpread2","expandable","className","_classnames","event","_len","arguments","length","args","Array","_key","apply","concat"]
}
