shadow$provide.module$node_modules$antd$lib$alert$Alert=function(global,require,module,exports){"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var React=module(require("module$node_modules$react$index"));module=global(require("module$node_modules$$ant_design$icons$CheckCircleFilled"));
var _CloseCircleFilled=global(require("module$node_modules$$ant_design$icons$CloseCircleFilled")),_CloseOutlined=global(require("module$node_modules$$ant_design$icons$CloseOutlined")),_ExclamationCircleFilled=global(require("module$node_modules$$ant_design$icons$ExclamationCircleFilled")),_InfoCircleFilled=global(require("module$node_modules$$ant_design$icons$InfoCircleFilled")),_classnames=global(require("module$node_modules$classnames$index")),_rcMotion=global(require("module$node_modules$rc_motion$lib$index")),
_pickAttrs=global(require("module$node_modules$rc_util$lib$pickAttrs")),_ref2=require("module$node_modules$rc_util$lib$ref"),_reactNode=require("module$node_modules$antd$lib$_util$reactNode"),_warning=require("module$node_modules$antd$lib$_util$warning"),_configProvider=require("module$node_modules$antd$lib$config_provider$index"),_style=global(require("module$node_modules$antd$lib$alert$style$index")),__rest=function(s,e){var t={},p;for(p in s)Object.prototype.hasOwnProperty.call(s,p)&&0>e.indexOf(p)&&
(t[p]=s[p]);if(null!=s&&"function"===typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)0>e.indexOf(p[i])&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};const iconMapFilled={success:module.default,info:_InfoCircleFilled.default,error:_CloseCircleFilled.default,warning:_ExclamationCircleFilled.default},IconNode=props=>{const {icon,prefixCls,type}=props;props=iconMapFilled[type]||null;return icon?(0,_reactNode.replaceElement)(icon,
React.createElement("span",{className:`${prefixCls}-icon`},icon),()=>({className:(0,_classnames.default)(`${prefixCls}-icon`,icon.props.className)})):React.createElement(props,{className:`${prefixCls}-icon`})},CloseIconNode=props=>{const {isClosable,prefixCls,closeIcon,handleClose,ariaProps}=props;props=!0===closeIcon||void 0===closeIcon?React.createElement(_CloseOutlined.default,null):closeIcon;return isClosable?React.createElement("button",Object.assign({type:"button",onClick:handleClose,className:`${prefixCls}-close-icon`,
tabIndex:0},ariaProps),props):null};require=React.forwardRef((props,ref)=>{const {description,prefixCls:customizePrefixCls,message,banner,className,rootClassName,style,onMouseEnter,onMouseLeave,onClick,afterClose,showIcon,closable,closeText,closeIcon,action,id}=props,otherProps=__rest(props,"description prefixCls message banner className rootClassName style onMouseEnter onMouseLeave onClick afterClose showIcon closable closeText closeIcon action id".split(" ")),[closed,setClosed]=React.useState(!1);
(0,_warning.devUseWarning)("Alert").deprecated(!closeText,"closeText","closable.closeIcon");const internalRef=React.useRef(null);React.useImperativeHandle(ref,()=>({nativeElement:internalRef.current}));const {getPrefixCls,direction,alert}=React.useContext(_configProvider.ConfigContext),prefixCls=getPrefixCls("alert",customizePrefixCls),[wrapCSSVar,hashId,cssVarCls]=(0,_style.default)(prefixCls),handleClose=e=>{var _a;setClosed(!0);null===(_a=props.onClose)||void 0===_a?void 0:_a.call(props,e)},type=
React.useMemo(()=>void 0!==props.type?props.type:banner?"warning":"info",[props.type,banner]),isClosable=React.useMemo(()=>"object"===typeof closable&&closable.closeIcon||closeText?!0:"boolean"===typeof closable?closable:!1!==closeIcon&&null!==closeIcon&&void 0!==closeIcon?!0:!(null===alert||void 0===alert||!alert.closable),[closeText,closeIcon,closable,null===alert||void 0===alert?void 0:alert.closable]),isShowIcon=banner&&void 0===showIcon?!0:showIcon,alertCls=(0,_classnames.default)(prefixCls,
`${prefixCls}-${type}`,{[`${prefixCls}-with-description`]:!!description,[`${prefixCls}-no-icon`]:!isShowIcon,[`${prefixCls}-banner`]:!!banner,[`${prefixCls}-rtl`]:"rtl"===direction},null===alert||void 0===alert?void 0:alert.className,className,rootClassName,cssVarCls,hashId),restProps=(0,_pickAttrs.default)(otherProps,{aria:!0,data:!0}),mergedCloseIcon=React.useMemo(()=>{var _a,_b;return"object"===typeof closable&&closable.closeIcon?closable.closeIcon:closeText?closeText:void 0!==closeIcon?closeIcon:
"object"===typeof(null===alert||void 0===alert?void 0:alert.closable)&&(null===(_a=null===alert||void 0===alert?void 0:alert.closable)||void 0===_a?0:_a.closeIcon)?null===(_b=null===alert||void 0===alert?void 0:alert.closable)||void 0===_b?void 0:_b.closeIcon:null===alert||void 0===alert?void 0:alert.closeIcon},[closeIcon,closable,closeText,null===alert||void 0===alert?void 0:alert.closeIcon]),mergedAriaProps=React.useMemo(()=>{const merged=null!==closable&&void 0!==closable?closable:null===alert||
void 0===alert?void 0:alert.closable;return"object"===typeof merged?__rest(merged,["closeIcon"]):{}},[closable,null===alert||void 0===alert?void 0:alert.closable]);return wrapCSSVar(React.createElement(_rcMotion.default,{visible:!closed,motionName:`${prefixCls}-motion`,motionAppear:!1,motionEnter:!1,onLeaveStart:node=>({maxHeight:node.offsetHeight}),onLeaveEnd:afterClose},(_ref,setRef)=>{let {className:motionClassName,style:motionStyle}=_ref;return React.createElement("div",Object.assign({id,ref:(0,_ref2.composeRef)(internalRef,
setRef),"data-show":!closed,className:(0,_classnames.default)(alertCls,motionClassName),style:Object.assign(Object.assign(Object.assign({},null===alert||void 0===alert?void 0:alert.style),style),motionStyle),onMouseEnter,onMouseLeave,onClick,role:"alert"},restProps),isShowIcon?React.createElement(IconNode,{description,icon:props.icon,prefixCls,type}):null,React.createElement("div",{className:`${prefixCls}-content`},message?React.createElement("div",{className:`${prefixCls}-message`},message):null,
description?React.createElement("div",{className:`${prefixCls}-description`},description):null),action?React.createElement("div",{className:`${prefixCls}-action`},action):null,React.createElement(CloseIconNode,{isClosable,prefixCls,closeIcon:mergedCloseIcon,handleClose,ariaProps:mergedAriaProps}))}))});require.displayName="Alert";exports.default=require}
//# sourceMappingURL=module$node_modules$antd$lib$alert$Alert.js.map
