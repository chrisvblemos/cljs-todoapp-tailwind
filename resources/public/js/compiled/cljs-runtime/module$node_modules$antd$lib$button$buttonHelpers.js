shadow$provide.module$node_modules$antd$lib$button$buttonHelpers=function(global,require,module,exports){function isString(str){return"string"===typeof str}"use client";module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;Object.defineProperty(exports,"__esModule",{value:!0});exports._ButtonVariantTypes=exports._ButtonColorTypes=void 0;exports.convertLegacyProps=function(type){return"danger"===type?{danger:!0}:{type}};exports.isString=isString;exports.isTwoCNChar=
void 0;exports.isUnBorderedButtonVariant=function(type){return"text"===type||"link"===type};exports.spaceChildren=function(children,needInserted){let isPrevChildPure=!1;const childList=[];_react.default.Children.forEach(children,child=>{var type=typeof child;type="string"===type||"number"===type;if(isPrevChildPure&&type){const lastIndex=childList.length-1;childList[lastIndex]=`${childList[lastIndex]}${child}`}else childList.push(child);isPrevChildPure=type});return _react.default.Children.map(childList,
child=>{if(null!==child&&void 0!==child){var SPACE=needInserted?" ":"";child="string"!==typeof child&&"number"!==typeof child&&isString(child.type)&&isTwoCNChar(child.props.children)?(0,_reactNode.cloneElement)(child,{children:child.props.children.split("").join(SPACE)}):isString(child)?isTwoCNChar(child)?_react.default.createElement("span",null,child.split("").join(SPACE)):_react.default.createElement("span",null,child):(0,_reactNode.isFragment)(child)?_react.default.createElement("span",null,child):
child}else child=void 0;return child})};global=module(require("module$node_modules$$babel$runtime$helpers$toConsumableArray"));var _react=module(require("module$node_modules$react$index")),_reactNode=require("module$node_modules$antd$lib$_util$reactNode");require=require("module$node_modules$antd$lib$theme$interface$index");module=/^[\u4E00-\u9FA5]{2}$/;const isTwoCNChar=exports.isTwoCNChar=module.test.bind(module);exports._ButtonVariantTypes="outlined dashed solid filled text link".split(" ");exports._ButtonColorTypes=
["default","primary","danger"].concat((0,global.default)(require.PresetColors))}
//# sourceMappingURL=module$node_modules$antd$lib$button$buttonHelpers.js.map
