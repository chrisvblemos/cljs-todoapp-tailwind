shadow$provide.module$node_modules$$rc_component$mutate_observer$lib$MutateObserver=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _slicedToArray2=global(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),_react=global(require("module$node_modules$react$index")),_useLayoutEffect=global(require("module$node_modules$rc_util$lib$hooks$useLayoutEffect")),
_ref=require("module$node_modules$rc_util$lib$ref"),_findDOMNode=global(require("module$node_modules$rc_util$lib$Dom$findDOMNode")),_useEvent=global(require("module$node_modules$rc_util$lib$hooks$useEvent")),_wrapper=global(require("module$node_modules$$rc_component$mutate_observer$lib$wrapper")),_useMutateObserver=global(require("module$node_modules$$rc_component$mutate_observer$lib$useMutateObserver"));exports.default=function(props){var children=props.children,options=props.options;props=props.onMutate;
props=(0,_useEvent.default)(void 0===props?function(){}:props);var wrapperRef=_react.default.useRef(null),elementRef=_react.default.useRef(null),canRef=_react.default.isValidElement(children)&&(0,_ref.supportRef)(children),mergedRef=(0,_ref.useComposeRef)(elementRef,canRef?children.ref:null),_React$useState=_react.default.useState(null);_React$useState=(0,_slicedToArray2.default)(_React$useState,2);var setTarget=_React$useState[1];(0,_useMutateObserver.default)(_React$useState[0],props,options);(0,_useLayoutEffect.default)(function(){setTarget((0,_findDOMNode.default)(elementRef.current)||
(0,_findDOMNode.default)(wrapperRef.current))});return children?_react.default.createElement(_wrapper.default,{ref:wrapperRef},canRef?_react.default.cloneElement(children,{ref:mergedRef}):children):(console.error("MutationObserver need children props"),null)}}
//# sourceMappingURL=module$node_modules$$rc_component$mutate_observer$lib$MutateObserver.js.map
