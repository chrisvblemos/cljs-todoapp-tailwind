{
"version":3,
"file":"module$node_modules$$rc_component$async_validator$lib$rule$range.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,gEAAA,CAAqF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG7HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,OAAR,CAAkB,IAAK,EACvB,KAAIC,MAAQP,OAAA,CAAQ,4DAAR,CA4CGE,QAAQI,CAAAA,OAAR,CA3CHE,QAAc,CAACC,IAAD,CAAOJ,KAAP,CAAcK,MAAd,CAAsBC,MAAtB,CAA8BC,OAA9B,CAAuC,CAC3DC,MAAAA,CAA0B,QAA1BA,GAAM,MAAOJ,KAAKI,CAAAA,GACtB,KAAIC,IAA0B,QAA1BA,GAAM,MAAOL,KAAKK,CAAAA,GAAtB,CACIC,IAA0B,QAA1BA,GAAM,MAAON,KAAKM,CAAAA,GADtB,CAGIC,SAAW,iCAHf,CAIIC,IAAMZ,KAJV,CAKIa,IAAM,IALV,CAMIC;AAAuB,QAAvBA,GAAM,MAAOd,MANjB,CAOIe,IAAuB,QAAvBA,GAAM,MAAOf,MAPjB,CAQIgB,IAAMC,KAAMC,CAAAA,OAAN,CAAclB,KAAd,CACNc,IAAJ,CACED,GADF,CACQ,QADR,CAEWE,GAAJ,CACLF,GADK,CACC,QADD,CAEIG,GAFJ,GAGLH,GAHK,CAGC,OAHD,CAQP,IAAI,CAACA,GAAL,CACE,MAAO,CAAA,CAELG,IAAJ,GACEJ,GADF,CACQZ,KAAMmB,CAAAA,MADd,CAGIJ,IAAJ,GAEEH,GAFF,CAEQZ,KAAMoB,CAAAA,OAAN,CAAcT,QAAd,CAAwB,GAAxB,CAA6BQ,CAAAA,MAFrC,CAIIX,OAAJ,CACMI,GADN,GACcR,IAAKI,CAAAA,GADnB,EAEIF,MAAOe,CAAAA,IAAP,CAAY,GAAInB,KAAMoB,CAAAA,MAAV,EAAkBf,OAAQgB,CAAAA,QAAR,CAAiBV,GAAjB,CAAsBL,CAAAA,GAAxC,CAA6CJ,IAAKoB,CAAAA,SAAlD,CAA6DpB,IAAKI,CAAAA,GAAlE,CAAZ,CAFJ,CAIWC,GAAJ,EAAW,CAACC,GAAZ,EAAmBE,GAAnB,CAAyBR,IAAKK,CAAAA,GAA9B,CACLH,MAAOe,CAAAA,IAAP,CAAY,GAAInB,KAAMoB,CAAAA,MAAV,EAAkBf,OAAQgB,CAAAA,QAAR,CAAiBV,GAAjB,CAAsBJ,CAAAA,GAAxC,CAA6CL,IAAKoB,CAAAA,SAAlD,CAA6DpB,IAAKK,CAAAA,GAAlE,CAAZ,CADK,CAEIC,GAAJ,EAAW,CAACD,GAAZ,EAAmBG,GAAnB,CAAyBR,IAAKM,CAAAA,GAA9B,CACLJ,MAAOe,CAAAA,IAAP,CAAY,GAAInB,KAAMoB,CAAAA,MAAV,EAAkBf,OAAQgB,CAAAA,QAAR,CAAiBV,GAAjB,CAAsBH,CAAAA,GAAxC;AAA6CN,IAAKoB,CAAAA,SAAlD,CAA6DpB,IAAKM,CAAAA,GAAlE,CAAZ,CADK,CAEID,GAFJ,EAEWC,GAFX,GAEmBE,GAFnB,CAEyBR,IAAKK,CAAAA,GAF9B,EAEqCG,GAFrC,CAE2CR,IAAKM,CAAAA,GAFhD,GAGLJ,MAAOe,CAAAA,IAAP,CAAY,GAAInB,KAAMoB,CAAAA,MAAV,EAAkBf,OAAQgB,CAAAA,QAAR,CAAiBV,GAAjB,CAAsBV,CAAAA,KAAxC,CAA+CC,IAAKoB,CAAAA,SAApD,CAA+DpB,IAAKK,CAAAA,GAApE,CAAyEL,IAAKM,CAAAA,GAA9E,CAAZ,CAxC6D,CAR4D;",
"sources":["node_modules/@rc-component/async-validator/lib/rule/range.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$rc_component$async_validator$lib$rule$range\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _util = require(\"../util\");\nvar range = function range(rule, value, source, errors, options) {\n  var len = typeof rule.len === 'number';\n  var min = typeof rule.min === 'number';\n  var max = typeof rule.max === 'number';\n  // \u6b63\u5219\u5339\u914d\u7801\u70b9\u8303\u56f4\u4eceU+010000\u4e00\u76f4\u5230U+10FFFF\u7684\u6587\u5b57\uff08\u8865\u5145\u5e73\u9762Supplementary Plane\uff09\n  var spRegexp = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n  var val = value;\n  var key = null;\n  var num = typeof value === 'number';\n  var str = typeof value === 'string';\n  var arr = Array.isArray(value);\n  if (num) {\n    key = 'number';\n  } else if (str) {\n    key = 'string';\n  } else if (arr) {\n    key = 'array';\n  }\n  // if the value is not of a supported type for range validation\n  // the validation rule rule should use the\n  // type property to also test for a particular type\n  if (!key) {\n    return false;\n  }\n  if (arr) {\n    val = value.length;\n  }\n  if (str) {\n    // \u5904\u7406\u7801\u70b9\u5927\u4e8eU+010000\u7684\u6587\u5b57length\u5c5e\u6027\u4e0d\u51c6\u786e\u7684bug\uff0c\u5982\"\ud842\udfb7\ud842\udfb7\ud842\udfb7\".length !== 3\n    val = value.replace(spRegexp, '_').length;\n  }\n  if (len) {\n    if (val !== rule.len) {\n      errors.push((0, _util.format)(options.messages[key].len, rule.fullField, rule.len));\n    }\n  } else if (min && !max && val < rule.min) {\n    errors.push((0, _util.format)(options.messages[key].min, rule.fullField, rule.min));\n  } else if (max && !min && val > rule.max) {\n    errors.push((0, _util.format)(options.messages[key].max, rule.fullField, rule.max));\n  } else if (min && max && (val < rule.min || val > rule.max)) {\n    errors.push((0, _util.format)(options.messages[key].range, rule.fullField, rule.min, rule.max));\n  }\n};\nvar _default = exports.default = range;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","default","_util","range","rule","source","errors","options","len","min","max","spRegexp","val","key","num","str","arr","Array","isArray","length","replace","push","format","messages","fullField"]
}
