shadow$provide.module$node_modules$antd$lib$message$index=function(global,require,module,exports){function getGlobalContext(){const {getContainer,duration,rtl,maxCount,top}=defaultGlobalConfig,mergedContainer=(null===getContainer||void 0===getContainer?void 0:getContainer())||document.body;return{getContainer:()=>mergedContainer,duration,rtl,maxCount,top}}function flushNotice(){if(message)message.instance&&(taskQueue.forEach(task=>{const {type,skipped}=task;if(!skipped)switch(type){case "open":(()=>
{const closeFn=message.instance.open(Object.assign(Object.assign({},defaultGlobalConfig),task.config));null===closeFn||void 0===closeFn?void 0:closeFn.then(task.resolve);task.setCloseFn(closeFn)})();break;case "destroy":null===message||void 0===message?void 0:message.instance.destroy(task.key);break;default:(()=>{var _message$instance;const closeFn=(_message$instance=message.instance)[type].apply(_message$instance,(0,_toConsumableArray2.default)(task.args));null===closeFn||void 0===closeFn?void 0:
closeFn.then(task.resolve);task.setCloseFn(closeFn)})()}}),taskQueue=[]);else{const holderFragment=document.createDocumentFragment(),newMessage={fragment:holderFragment};message=newMessage;(()=>{(0,_UnstableContext.getReactRender)()(_react.default.createElement(GlobalHolderWrapper,{ref:node=>{const {instance,sync}=node||{};Promise.resolve().then(()=>{!newMessage.instance&&instance&&(newMessage.instance=instance,newMessage.sync=sync,flushNotice())})}}),holderFragment)})()}}function typeOpen(type,args){(0,_configProvider.globalConfig)().holderRender||
(0,_configProvider.warnContext)("message");const result=(0,_util.wrapPromiseFn)(resolve=>{let closeFn;const task={type,args,resolve,setCloseFn:fn=>{closeFn=fn}};taskQueue.push(task);return()=>{closeFn?closeFn():task.skipped=!0}});flushNotice();return result}"use client";global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard").default;module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;Object.defineProperty(exports,"__esModule",{value:!0});
exports.default=exports.actWrapper=exports.actDestroy=void 0;var _toConsumableArray2=module(require("module$node_modules$$babel$runtime$helpers$toConsumableArray")),_react=global(require("module$node_modules$react$index")),_context=require("module$node_modules$antd$lib$app$context"),_configProvider=global(require("module$node_modules$antd$lib$config_provider$index")),_UnstableContext=require("module$node_modules$antd$lib$config_provider$UnstableContext");module=module(require("module$node_modules$antd$lib$message$PurePanel"));
var _useMessage=global(require("module$node_modules$antd$lib$message$useMessage")),_util=require("module$node_modules$antd$lib$message$util");let message=null,taskQueue=[],defaultGlobalConfig={};const GlobalHolder=_react.default.forwardRef((props,ref)=>{const {messageConfig,sync}=props;({getPrefixCls:props}=(0,_react.useContext)(_configProvider.ConfigContext));props=defaultGlobalConfig.prefixCls||props("message");const appConfig=(0,_react.useContext)(_context.AppConfigContext),[api,holder]=(0,_useMessage.useInternalMessage)(Object.assign(Object.assign(Object.assign({},
messageConfig),{prefixCls:props}),appConfig.message));_react.default.useImperativeHandle(ref,()=>{const instance=Object.assign({},api);Object.keys(instance).forEach(method=>{instance[method]=function(){sync();return api[method].apply(api,arguments)}});return{instance,sync}});return holder}),GlobalHolderWrapper=_react.default.forwardRef((_,ref)=>{const [messageConfig,setMessageConfig]=_react.default.useState(getGlobalContext),sync=()=>{setMessageConfig(getGlobalContext)};_react.default.useEffect(sync,
[]);_=(0,_configProvider.globalConfig)();const rootPrefixCls=_.getRootPrefixCls(),rootIconPrefixCls=_.getIconPrefixCls(),theme=_.getTheme();ref=_react.default.createElement(GlobalHolder,{ref,sync,messageConfig});return _react.default.createElement(_configProvider.default,{prefixCls:rootPrefixCls,iconPrefixCls:rootIconPrefixCls,theme},_.holderRender?_.holderRender(ref):ref)}),staticMethods={open:function(config){const result=(0,_util.wrapPromiseFn)(resolve=>{let closeFn;const task={type:"open",config,
resolve,setCloseFn:fn=>{closeFn=fn}};taskQueue.push(task);return()=>{closeFn?closeFn():task.skipped=!0}});flushNotice();return result},destroy:key=>{taskQueue.push({type:"destroy",key});flushNotice()},config:function(config){defaultGlobalConfig=Object.assign(Object.assign({},defaultGlobalConfig),config);var _a;null===(_a=null===message||void 0===message?void 0:message.sync)||void 0===_a?void 0:_a.call(message)},useMessage:_useMessage.default,_InternalPanelDoNotUseOrYouWillBeFired:module.default};
["success","info","warning","error","loading"].forEach(type=>{staticMethods[type]=function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return typeOpen(type,args)}});require=()=>{};exports.actWrapper=require;exports.actDestroy=require;exports.default=staticMethods}
//# sourceMappingURL=module$node_modules$antd$lib$message$index.js.map
