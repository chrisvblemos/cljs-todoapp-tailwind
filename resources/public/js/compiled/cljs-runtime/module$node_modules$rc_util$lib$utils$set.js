shadow$provide.module$node_modules$rc_util$lib$utils$set=function(global,require,module,exports){function internalSet(entity,paths,value,removeIfUndefined){if(!paths.length)return value;var _paths=(0,_toArray2.default)(paths);paths=_paths[0];_paths=_paths.slice(1);entity=entity||"number"!==typeof paths?Array.isArray(entity)?(0,_toConsumableArray2.default)(entity):(0,_objectSpread2.default)({},entity):[];removeIfUndefined&&void 0===value&&1===_paths.length?delete entity[paths][_paths[0]]:entity[paths]=
internalSet(entity[paths],_paths,value,removeIfUndefined);return entity}function set(entity,paths,value){var removeIfUndefined=3<arguments.length&&void 0!==arguments[3]?arguments[3]:!1;return paths.length&&removeIfUndefined&&void 0===value&&!(0,_get.default)(entity,paths.slice(0,-1))?entity:internalSet(entity,paths,value,removeIfUndefined)}function isObject(obj){return"object"===(0,_typeof2.default)(obj)&&null!==obj&&Object.getPrototypeOf(obj)===Object.prototype}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault").default;
Object.defineProperty(exports,"__esModule",{value:!0});exports.default=set;exports.merge=function(){for(var _len=arguments.length,sources=Array(_len),_key=0;_key<_len;_key++)sources[_key]=arguments[_key];var clone=Array.isArray(sources[0])?[]:{};sources.forEach(function(src){function internalMerge(path,parentLoopSet){var loopSet=new Set(parentLoopSet);parentLoopSet=(0,_get.default)(src,path);var isArr=Array.isArray(parentLoopSet);if(isArr||isObject(parentLoopSet)){if(!loopSet.has(parentLoopSet)){loopSet.add(parentLoopSet);
var originValue=(0,_get.default)(clone,path);isArr?clone=set(clone,path,[]):originValue&&"object"===(0,_typeof2.default)(originValue)||(clone=set(clone,path,Array.isArray(parentLoopSet)?[]:{}));keys(parentLoopSet).forEach(function(key){internalMerge([].concat((0,_toConsumableArray2.default)(path),[key]),loopSet)})}}else clone=set(clone,path,parentLoopSet)}internalMerge([])});return clone};var _typeof2=global(require("module$node_modules$$babel$runtime$helpers$typeof")),_objectSpread2=global(require("module$node_modules$$babel$runtime$helpers$objectSpread2")),
_toConsumableArray2=global(require("module$node_modules$$babel$runtime$helpers$toConsumableArray")),_toArray2=global(require("module$node_modules$$babel$runtime$helpers$toArray")),_get=global(require("module$node_modules$rc_util$lib$utils$get")),keys="undefined"===typeof Reflect?Object.keys:Reflect.ownKeys}
//# sourceMappingURL=module$node_modules$rc_util$lib$utils$set.js.map
